{"project":"presto-0.278","comment":"\/\/ a DictionaryBlock with dictionary ['a', 'b', 'c'] and ids [1, 0, 1, 0, 2]. The mappedPositions","label":0,"id":406097}
{"project":"presto-0.278","comment":"\/\/ if fixed run length is <MIN_REPEAT and current value is","label":0,"id":406098}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to set the specified catalog property.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":406099}
{"project":"presto-0.278","comment":"\/**     * Comprehensive correctness testing is done in the TestQuantileDigestAggregationFunction and TestTDigestAggregationFunction     *\/","label":0,"id":406100}
{"project":"presto-0.278","comment":"\/\/ todo use RLE blocks","label":1,"id":406101}
{"project":"presto-0.278","comment":"\/\/ Capture column in HAVING","label":0,"id":406102}
{"project":"presto-0.278","comment":"\/** * Drops the specified role. *\/","label":0,"id":406103}
{"project":"presto-0.278","comment":"\/\/ there is only one entry in the dictionary","label":0,"id":406104}
{"project":"presto-0.278","comment":"\/\/ - running in segmented aggregation mode and at least one segment has been fully processed","label":0,"id":406105}
{"project":"presto-0.278","comment":"\/\/ Check if no resultSet is returned from an interceptor","label":0,"id":406106}
{"project":"presto-0.278","comment":"\/\/ bigint - decimal","label":0,"id":406107}
{"project":"presto-0.278","comment":"\/\/ shards 2 and 3 should be deleted","label":0,"id":406108}
{"project":"presto-0.278","comment":"\/\/ this requires modeling row types in the same way we model table rows","label":0,"id":406109}
{"project":"presto-0.278","comment":"\/* anytime '*' *\/","label":0,"id":406110}
{"project":"presto-0.278","comment":"\/\/ if query submission has not finished, wait for it to finish","label":0,"id":406111}
{"project":"presto-0.278","comment":"\/\/ node2 shard2","label":0,"id":406112}
{"project":"presto-0.278","comment":"\/\/ mapping from correlated symbols to their uncorrelated equivalence","label":0,"id":406113}
{"project":"presto-0.278","comment":"\/\/ Written Values\/\/ (-1L, MICROSECONDS),         \"1969-12-31 23:59:59.999999\"\/\/ (-999_999L, MICROSECONDS),   \"1969-12-31 23:59:59.000001\"","label":0,"id":406114}
{"project":"presto-0.278","comment":"\/\/ Create JSON deserializer for the AccumuloTable","label":0,"id":406115}
{"project":"presto-0.278","comment":"\/** * TODO: this should be merged into getTaskStatus once full thrift support is in-place for v1\/task *\/","label":1,"id":406116}
{"project":"presto-0.278","comment":"\/** * Finish refresh materialized view *\/","label":0,"id":406117}
{"project":"presto-0.278","comment":"\/\/ add colon so this won't parse","label":0,"id":406118}
{"project":"presto-0.278","comment":"\/** * This is only for mantissa\/significant of a decimal and not the exponent. *\/","label":0,"id":406119}
{"project":"presto-0.278","comment":"\/\/ > 3 fields, expensive types, not distinct","label":0,"id":406120}
{"project":"presto-0.278","comment":"\/** * For a query on materialized view, only check the actual required access controls for its base tables. For the materialized view, * will not check access control by replacing with AllowAllAccessControl. *\/","label":0,"id":406121}
{"project":"presto-0.278","comment":"\/\/ However, It is hard to create this map in Guice given SqlFunctionExecutor modules now are dynamically plugged in.","label":0,"id":406122}
{"project":"presto-0.278","comment":"\/\/ We are using the property that the result of coalesce from full outer join keys would not be null despite of the order","label":0,"id":406123}
{"project":"presto-0.278","comment":"\/** * Extract expressions that are references to a given scope. *\/","label":0,"id":406124}
{"project":"presto-0.278","comment":"\/\/ This will also set the task status to FAILED state directly.\/\/ Additionally, this will issue a DELETE for the task to the worker.\/\/ While sending the DELETE is not required, it is preferred because a task was created by the previous request.","label":0,"id":406125}
{"project":"presto-0.278","comment":"\/\/ non-simple geometries","label":0,"id":406126}
{"project":"presto-0.278","comment":"\/** * Each element in taskSourcesByPartitionId is a list of task sources assigned to the same Spark partition. * When input tables are unbucketed, task sources are distributed randomly across all partitions (tasks). * When input tables are bucketed, each bucket in task sources will be assigned to one Spark partition (task), * and the assignment is compatible to potential shuffle inputs. *\/","label":0,"id":406127}
{"project":"presto-0.278","comment":"\/\/ due to rounding, the last bucket has extra rows","label":0,"id":406128}
{"project":"presto-0.278","comment":"\/\/ - if not compatible time types, returns Optional.empty(), indicates no change has been made in this cast.","label":0,"id":406129}
{"project":"presto-0.278","comment":"\/** * Blocking call to poll from result buffer. Blocks until content becomes * available in the buffer, or until timeout is hit. * * @return the first {@link SerializedPage} result buffer contains. *\/","label":0,"id":406130}
{"project":"presto-0.278","comment":"\/\/ these append value methods should be overridden for each row encoder","label":0,"id":406131}
{"project":"presto-0.278","comment":"\/\/ if the stripe is big enough to flush, stop before we hit the absolute max, so we are\/\/ not forced to convert a dictionary to direct to fit in memory","label":0,"id":406132}
{"project":"presto-0.278","comment":"\/\/ If distributive rule will produce too many sub expressions, return what we have instead.","label":0,"id":406133}
{"project":"presto-0.278","comment":"\/\/ Async page transport","label":0,"id":406134}
{"project":"presto-0.278","comment":"\/\/ TODO: This should use an iterator like the HiveFileIterator","label":1,"id":406135}
{"project":"presto-0.278","comment":"\/\/ check if the partition stats can be trusted.","label":0,"id":406136}
{"project":"presto-0.278","comment":"\/** * Updates this equivalence class property with \"variable reference = variable reference\" or * \"variable reference = constant reference\" conjuncts applied by the provided predicate. * Returns true if any equivalence class heads changed, and false otherwise. * * @param predicate * @return *\/","label":0,"id":406137}
{"project":"presto-0.278","comment":"\/\/ ReorderJoins can move predicates between `criteria` and `filters`, so we put all equalities\/\/ in `criteria` to make it consistent.","label":0,"id":406138}
{"project":"presto-0.278","comment":"\/\/ The errors are on account of 2 causes:","label":0,"id":406139}
{"project":"presto-0.278","comment":"\/\/127.0.0.1:8001\").put(\"table-name\", \"query_source\").put(\"suites\", \"test1,test2\").put(\"max-queries-per-suite\", \"50\").build();","label":0,"id":406140}
{"project":"presto-0.278","comment":"\/\/ TODO verify if this is the correct function displayName","label":1,"id":406141}
{"project":"presto-0.278","comment":"\/\/ look for a slot containing this key","label":0,"id":406142}
{"project":"presto-0.278","comment":"\/\/ Literal in empty range","label":0,"id":406143}
{"project":"presto-0.278","comment":"\/\/ assert the pending request queue size is zero","label":0,"id":406144}
{"project":"presto-0.278","comment":"\/\/ The borrowerCount field was only incremented for non-empty lists.\/\/ Decrements should only happen for non-empty lists.\/\/ When it should, it must always happen even if the caller-supplied function throws.","label":0,"id":406145}
{"project":"presto-0.278","comment":"\/\/ Data has nulls","label":0,"id":406146}
{"project":"presto-0.278","comment":"\/\/ transformation unblocks","label":0,"id":406147}
{"project":"presto-0.278","comment":"\/\/ if both values are same count as fixed run else variable run","label":0,"id":406148}
{"project":"presto-0.278","comment":"\/** * This method registers a heartbeat to the resource manager.  A query heartbeat is used for the following purposes: * * 1) Inform resource managers about current resource group utilization. * 2) Inform resource managers about current running queries. * 3) Inform resource managers about coordinator status and health. *\/","label":0,"id":406149}
{"project":"presto-0.278","comment":"\/\/ Hudi tables don't partition by non-primitive-type columns.","label":0,"id":406150}
{"project":"presto-0.278","comment":"\/\/ assert that driver group [3, 7] is fully completed","label":0,"id":406151}
{"project":"presto-0.278","comment":"\/\/ assert that pipeline 1 driver group [3, 7] will have no more drivers","label":0,"id":406152}
{"project":"presto-0.278","comment":"\/\/ schedule driver to be executed","label":0,"id":406153}
{"project":"presto-0.278","comment":"\/\/ No-op","label":0,"id":406154}
{"project":"presto-0.278","comment":"\/\/ Use the positionsList array for the merge sort temporary work buffer to avoid an extra redundant\/\/ copy. This works because we know that initially it has the same values as the array being sorted","label":0,"id":406155}
{"project":"presto-0.278","comment":"\/**     * Generates an unbound MethodHandle by {@code signature}.     * <p>     * For example, if {@code signature} describes a method like     * <pre>     * {@code     * IntegerType func(     *              IntegerType i,     *              VarcharType j)     * }     * <\/pre>,     * a method is generated as     * <pre>     * {@code     * static Long callEvaluate(     *              ScalarFunctionInvoker invoker,     *              Long input_0,     *              Slice input_1) {     * return (Long) Invoker.evaluate(input_0, input_1);     * }     * }     * <\/pre>,     * and its MethodHandle returns.     *\/","label":0,"id":406156}
{"project":"presto-0.278","comment":"\/**     * Sets null minimum values to the default minimum value based on <code>maximumBits<\/code> before returning the list.     * The default minimum value will be <code>-(1 << maximumBits)<\/code>.     * @param maximumBits the maximum amount of bits the values can have, not including the sign bit     * @return a list of non-null minimum range values     *\/","label":0,"id":406157}
{"project":"presto-0.278","comment":"\/\/ no additional matches, so bail out","label":0,"id":406158}
{"project":"presto-0.278","comment":"\/\/ this can happen with limit queries when all of the source (readers) are closed, so sinks","label":0,"id":406159}
{"project":"presto-0.278","comment":"\/\/ simple cast","label":0,"id":406160}
{"project":"presto-0.278","comment":"\/\/ try locally","label":0,"id":406161}
{"project":"presto-0.278","comment":"\/\/ No elements selected, copy a zero-length region from the elements block","label":0,"id":406162}
{"project":"presto-0.278","comment":"\/**     * If there no data, attempt to load some from the pages supplier.     *\/","label":0,"id":406163}
{"project":"presto-0.278","comment":"\/** * Returns true if no tuple could ever satisfy this TupleDomain *\/","label":0,"id":406164}
{"project":"presto-0.278","comment":"\/\/ ********************* primary expressions **********************","label":0,"id":406165}
{"project":"presto-0.278","comment":"\/\/ example connector assumes that the table handle and column handle are\/\/ properly formed, so it will return a metadata object for any\/\/ ExampleTableHandle and ExampleColumnHandle passed in.  This is on because\/\/ it is not possible for the Presto Metadata system to create the handles\/\/ directly.","label":0,"id":406166}
{"project":"presto-0.278","comment":"\/\/ Second Aggregation data","label":0,"id":406167}
{"project":"presto-0.278","comment":"\/** * Creates the specified role. * * @param grantor represents the principal specified by WITH ADMIN statement *\/","label":0,"id":406168}
{"project":"presto-0.278","comment":"\/\/ filter function on numeric and boolean columns","label":0,"id":406169}
{"project":"presto-0.278","comment":"\/\/ test time","label":0,"id":406170}
{"project":"presto-0.278","comment":"\/\/ get the same three elements","label":0,"id":406171}
{"project":"presto-0.278","comment":"\/**     * Drop the specified column     *\/","label":0,"id":406172}
{"project":"presto-0.278","comment":"\/\/ when spill is enabled.","label":0,"id":406173}
{"project":"presto-0.278","comment":"\/\/ arithmetic","label":0,"id":406174}
{"project":"presto-0.278","comment":"\/\/ assert that only the splits including and up to the current batch are running and the rest haven't started yet","label":0,"id":406175}
{"project":"presto-0.278","comment":"\/\/ Lambda has to be compiled into a dedicated class, as functions might be stateful (e.g. use CachedInstanceBinder)","label":0,"id":406176}
{"project":"presto-0.278","comment":"\/\/ Stop processing if the query has been destroyed.","label":0,"id":406177}
{"project":"presto-0.278","comment":"\/\/ One byte larger than the initial split max size","label":0,"id":406178}
{"project":"presto-0.278","comment":"\/**     * Compares the hashed columns in this PagesHashStrategy to the values in the specified page. The     * values are compared positionally, so {@code rightPage} must have the same number of entries as     * the hashed columns and each entry is expected to be the same type.     * {@code rightPage} is used if join uses filter function and must contain all columns from probe side of join.     *\/","label":0,"id":406179}
{"project":"presto-0.278","comment":"\/\/ Multiple aggregations may reference the same input. We use a map to dedup them based on the VariableReferenceExpression, so that we only do the rewrite once per input","label":0,"id":406180}
{"project":"presto-0.278","comment":"\/\/ assure that default is nulls last","label":0,"id":406181}
{"project":"presto-0.278","comment":"\/\/ Map(RLE(LongArrayBlock), RLE(LongArrayBlock))","label":0,"id":406182}
{"project":"presto-0.278","comment":"\/\/ the probe covers non-sequential positions","label":0,"id":406183}
{"project":"presto-0.278","comment":"\/\/ When there is filter, batch mode performs better for almost all inputFilterRate except when inputFilterRate is around 0.1f.","label":0,"id":406184}
{"project":"presto-0.278","comment":"\/\/ Memory pool starts off empty","label":0,"id":406185}
{"project":"presto-0.278","comment":"\/\/ invalid character","label":0,"id":406186}
{"project":"presto-0.278","comment":"\/\/ ts1 memory footprint","label":0,"id":406187}
{"project":"presto-0.278","comment":"\/\/ forget about this query if the query manager is no longer tracking it","label":0,"id":406188}
{"project":"presto-0.278","comment":"\/** * Returns a block that has an appended null at the end, no matter if the original block has null or not. * The original block won't be modified. *\/","label":0,"id":406189}
{"project":"presto-0.278","comment":"\/**     * For optional fields:     * definitionLevel == maxDefinitionLevel     => Value is defined     * definitionLevel == maxDefinitionLevel - 1 => Value is null     * definitionLevel < maxDefinitionLevel - 1  => Value does not exist, because one of its optional parent fields is null     *\/","label":0,"id":406190}
{"project":"presto-0.278","comment":"\/\/ DWRF prior to version 6.0.8 doesn't set the value of column, infer it from the index","label":0,"id":406191}
{"project":"presto-0.278","comment":"\/\/ write the block to the output","label":0,"id":406192}
{"project":"presto-0.278","comment":"\/\/ attempt to fail with another exception, which will fail","label":0,"id":406193}
{"project":"presto-0.278","comment":"\/\/ Special handling for Predicate like: \"WHERE eventDate < DATE '2014-01-31'\".","label":0,"id":406194}
{"project":"presto-0.278","comment":"\/** * Annotates a program element that is (only) used by generated code. * This can be used to prevent warnings about program elements that * static analysis tools flag as unused. *\/","label":0,"id":406195}
{"project":"presto-0.278","comment":"\/** * Create a new block from the current materialized block by keeping the same elements * only with respect to {@code visiblePositions}. *\/","label":0,"id":406196}
{"project":"presto-0.278","comment":"\/\/ always fire listener callbacks from a different thread","label":0,"id":406197}
{"project":"presto-0.278","comment":"\/\/ new value is present and so multiply the current value if it is present","label":0,"id":406198}
{"project":"presto-0.278","comment":"\/\/ Assume the first part of a structured type always has non-alphabetical character.\/\/ If the first part is a valid identifier, parameter is a named field.","label":0,"id":406199}
{"project":"presto-0.278","comment":"\/\/ Assert that the file names are continuous increasing numbers","label":0,"id":406200}
{"project":"presto-0.278","comment":"\/\/ un-mark previously marked files that are now assigned","label":0,"id":406201}
{"project":"presto-0.278","comment":"\/\/ TODO Implement size reporting","label":1,"id":406202}
{"project":"presto-0.278","comment":"\/**     * Recursively looks for the first source node with a known estimate and uses that to return an approximate output size.     * Returns NaN if an un-estimated expanding node (Join or Unnest) is encountered.     * The amount of reduction in size from un-estimated non-expanding nodes (e.g. an un-estimated filter or aggregation)     * is not accounted here. We make use of the first available estimate and make decision about flipping join sides only if     * we find a large difference in output size of both sides.     *\/","label":0,"id":406203}
{"project":"presto-0.278","comment":"\/**     * Creates {@link WorkProcessor} from {@link Process}. {@link Process} instance will be dereferenced immediately after {@link WorkProcessor} is finished.     *\/","label":0,"id":406204}
{"project":"presto-0.278","comment":"\/\/ indicates table doesn't exist","label":0,"id":406205}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to drop columns from the specified table. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":406206}
{"project":"presto-0.278","comment":"\/\/ UPDATE table_name\/\/ SET column1 = value1, column2 = value2, ...\/\/ WHERE condition;","label":0,"id":406207}
{"project":"presto-0.278","comment":"\/\/ Row subscript in a lambda","label":0,"id":406208}
{"project":"presto-0.278","comment":"\/\/ initialize to invalid join position to force output code to advance the cursors","label":0,"id":406209}
{"project":"presto-0.278","comment":"\/\/druid.broker:1234\").setDruidCoordinatorUrl(\"http:\/\/druid.coordinator:4321\").setDruidSchema(\"test\").setComputePushdownEnabled(true).setHadoopConfiguration(ImmutableList.of(\"\/etc\/core-site.xml\", \"\/etc\/hdfs-site.xml\")).setDruidAuthenticationType(BASIC).setBasicAuthenticationUsername(\"http_basic_username\").setBasicAuthenticationPassword(\"http_basic_password\").setIngestionStoragePath(\"hdfs:\/\/foo\/bar\/\").setCaseInsensitiveNameMatching(true).setCaseInsensitiveNameMatchingCacheTtl(new Duration(1, SECONDS));","label":0,"id":406210}
{"project":"presto-0.278","comment":"\/\/ reserve a slot for this variable","label":0,"id":406211}
{"project":"presto-0.278","comment":"\/\/ write element values","label":0,"id":406212}
{"project":"presto-0.278","comment":"\/\/ that is not always true","label":0,"id":406213}
{"project":"presto-0.278","comment":"\/\/ [2*bucket + 1]  total count of rows that were produces by probe rows in this bucket.","label":0,"id":406214}
{"project":"presto-0.278","comment":"\/**     * Dumps the inference equalities as equality expressions that are partitioned by the variableScope.     * All stored equalities are returned in a compact set and will be classified into three groups as determined by the symbol scope:     * <ol>     * <li>equalities that fit entirely within the symbol scope<\/li>     * <li>equalities that fit entirely outside of the symbol scope<\/li>     * <li>equalities that straddle the symbol scope<\/li>     * <\/ol>     * <pre>     * Example:     *   Stored Equalities:     *     a = b = c     *     d = e = f = g     *     *   Symbol Scope:     *     a, b, d, e     *     *   Output EqualityPartition:     *     Scope Equalities:     *       a = b     *       d = e     *     Complement Scope Equalities     *       f = g     *     Scope Straddling Equalities     *       a = c     *       d = f     * <\/pre>     *\/","label":0,"id":406215}
{"project":"presto-0.278","comment":"\/\/ add the stream only if it is present in the stream ordering config","label":0,"id":406216}
{"project":"presto-0.278","comment":"\/\/ join with two keys","label":0,"id":406217}
{"project":"presto-0.278","comment":"\/\/ check if this is a query","label":0,"id":406218}
{"project":"presto-0.278","comment":"\/\/ Compress the file sizes","label":0,"id":406219}
{"project":"presto-0.278","comment":"\/\/ for MySQL, we need to list catalogs instead of schemas","label":0,"id":406220}
{"project":"presto-0.278","comment":"\/**     * This class checks for the presence of a non-null element in {@code source}, and stores its position.     * The result is cached with the first invocation of {@link #getNullElementIndex} after the reset. The     * cache can be invalidated by invoking {@link #resetCheck}.     *\/","label":0,"id":406221}
{"project":"presto-0.278","comment":"\/** * Contains static utility methods pertaining to primitive types and their * corresponding wrapper types. * * @author Kevin Bourrillion * @since 1.0 *\/","label":0,"id":406222}
{"project":"presto-0.278","comment":"\/\/ since we store histogram values in a hash, two histograms may have the same position (each unique value should have only one position in the internal\/\/ BlockBuilder of values; not that we extract a subset of this when constructing per-group-id histograms)","label":0,"id":406223}
{"project":"presto-0.278","comment":"\/\/ settings are constants due to efficiency considerations","label":0,"id":406224}
{"project":"presto-0.278","comment":"\/\/ Array type will store the actual squashed rows, if present","label":0,"id":406225}
{"project":"presto-0.278","comment":"\/\/ '9' + 1","label":0,"id":406226}
{"project":"presto-0.278","comment":"\/\/ Test many values so multiple BlockBuilders will be used to store group state.","label":0,"id":406227}
{"project":"presto-0.278","comment":"\/\/ read all (three) partitions","label":0,"id":406228}
{"project":"presto-0.278","comment":"\/\/ scheduled should be chosen to run next","label":0,"id":406229}
{"project":"presto-0.278","comment":"\/\/ There are no nulls in positions (bufferedNullsCount, bufferedPositionCount]","label":0,"id":406230}
{"project":"presto-0.278","comment":"\/\/\/\/ Helpers\/\/","label":0,"id":406231}
{"project":"presto-0.278","comment":"\/\/ MySQL doesn't support specifying the catalog name in a rename; by setting the","label":0,"id":406232}
{"project":"presto-0.278","comment":"\/\/ transformation.finished","label":0,"id":406233}
{"project":"presto-0.278","comment":"\/\/ Create a mapping for this column's Presto type, again creating a new one for the","label":0,"id":406234}
{"project":"presto-0.278","comment":"\/** * True if the column is internal to the connector and not defined by a topic definition. *\/","label":0,"id":406235}
{"project":"presto-0.278","comment":"\/\/ 'a' - 1","label":0,"id":406236}
{"project":"presto-0.278","comment":"\/\/ a later optimization will remove this sort node","label":0,"id":406237}
{"project":"presto-0.278","comment":"\/** * @return constructed page for pinot data. *\/","label":0,"id":406238}
{"project":"presto-0.278","comment":"\/\/ the local time zone.  This mean when converting between a java.sql.Date and this","label":0,"id":406239}
{"project":"presto-0.278","comment":"\/\/ Ensure that the upper bound of each item in the distribution is not less than the chosen quantiles","label":0,"id":406240}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to revoke the specified privilege on the specified table from the revokee. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":406241}
{"project":"presto-0.278","comment":"\/\/ catch up on missing key before finishing the row group","label":0,"id":406242}
{"project":"presto-0.278","comment":"\/\/ cache contains stripe footers","label":0,"id":406243}
{"project":"presto-0.278","comment":"\/\/ start transaction, create two tables and commit","label":0,"id":406244}
{"project":"presto-0.278","comment":"\/\/ todo if repeatable read, this must be recorded","label":1,"id":406245}
{"project":"presto-0.278","comment":"\/\/ Do not add back the deleted partition because the implementation is expected to move forward instead of backward when delete fails","label":0,"id":406246}
{"project":"presto-0.278","comment":"\/\/ missing function argument","label":0,"id":406247}
{"project":"presto-0.278","comment":"\/\/ Run RemoveEmptyDelete and EliminateEmptyJoins after table scan is removed by PickTableLayout\/AddExchanges","label":0,"id":406248}
{"project":"presto-0.278","comment":"\/\/ delete the entire struct column (colLevelUpdates) and add a new struct column with different name (colLevelUpdates2)","label":0,"id":406249}
{"project":"presto-0.278","comment":"\/\/ invalid code points","label":0,"id":406250}
{"project":"presto-0.278","comment":"\/\/ the new rowgroup should be grown based on min(nextBatchSize, maxBatchSize) but not by the number of rows in","label":0,"id":406251}
{"project":"presto-0.278","comment":"\/\/ detailed in \"On Synopses for Distinct-Value Estimation Under Multiset Operations\" by Beyer et. al.","label":0,"id":406252}
{"project":"presto-0.278","comment":"\/\/ We replace the constant value with null.","label":0,"id":406253}
{"project":"presto-0.278","comment":"\/\/ TODO: Implement EncryptionInformation in IcebergSplit instead of Optional.empty()","label":1,"id":406254}
{"project":"presto-0.278","comment":"\/\/ One symbol's range is within the other's","label":0,"id":406255}
{"project":"presto-0.278","comment":"\/\/ The target size for nullsBuffer","label":0,"id":406256}
{"project":"presto-0.278","comment":"\/\/ if you're looking for data distribution skew, keep an eye on ExchangeOperator stats.","label":0,"id":406257}
{"project":"presto-0.278","comment":"\/\/ Semantics: f.h => f.h","label":0,"id":406258}
{"project":"presto-0.278","comment":"\/\/ this is just to make sure we trigger rehash code positions should be the same","label":0,"id":406259}
{"project":"presto-0.278","comment":"\/\/ on a worker and being committed (referenced) in the database.","label":0,"id":406260}
{"project":"presto-0.278","comment":"\/\/localhost:8080\/blackhole?SSL=true&SSLTrustStorePath=truststore.jks\");","label":0,"id":406261}
{"project":"presto-0.278","comment":"\/**     * Should the ORC reader process a file section with the specified statistics.     *     * @param numberOfRows the number of rows in the segment; this can be used with     * {@code ColumnStatistics} to determine if a column is only null     * @param statisticsByColumnIndex statistics for column by ordinal position     * in the file; this will match the field order from the hive metastore     *\/","label":0,"id":406262}
{"project":"presto-0.278","comment":"\/**     * Begin insert query     *\/","label":0,"id":406263}
{"project":"presto-0.278","comment":"\/\/ both user and system memory are allocated from the same memoryPool","label":0,"id":406264}
{"project":"presto-0.278","comment":"\/\/ 10 bits, drop 2 and output one byte","label":0,"id":406265}
{"project":"presto-0.278","comment":"\/\/ We don't use an immutableMap builder so that we can check what's already been added","label":0,"id":406266}
{"project":"presto-0.278","comment":"\/\/ Overhead of ImmutableList and ImmutableMap is not accounted because of its complexity.","label":0,"id":406267}
{"project":"presto-0.278","comment":"\/\/ TRUNCATE DOUBLE -> DOUBLE","label":0,"id":406268}
{"project":"presto-0.278","comment":"\/\/ delete half the table, then delete the rest","label":0,"id":406269}
{"project":"presto-0.278","comment":"\/** * Sets the external file attributes of the entry. *\/","label":0,"id":406270}
{"project":"presto-0.278","comment":"\/\/task\/\" + taskId);","label":0,"id":406271}
{"project":"presto-0.278","comment":"\/\/ Multiple SHORT_DECIMAL literals with NULLs.","label":0,"id":406272}
{"project":"presto-0.278","comment":"\/\/ No more splits will be added to the pendingSplits set.","label":0,"id":406273}
{"project":"presto-0.278","comment":"\/\/ Heuristics: select the most selective criteria for join complement clause.\/\/ Principals behind this heuristics is the same as in computeInnerJoinStats:\/\/ select \"driving join clause\" that reduces matched rows the most.","label":0,"id":406274}
{"project":"presto-0.278","comment":"\/\/ - To generate SQL, we need to hold all the mappings somewhere, which is in selections, then generate","label":0,"id":406275}
{"project":"presto-0.278","comment":"\/\/ CrossJoin operator here has the same lifecycle behavior as a real cross\/hash-join, and produces","label":0,"id":406276}
{"project":"presto-0.278","comment":"\/\/ memory usage is not applicable for PAGEFILE","label":0,"id":406277}
{"project":"presto-0.278","comment":"\/\/ base width is one off","label":0,"id":406278}
{"project":"presto-0.278","comment":"\/\/ Comma is not a reserved keyword with or without quote","label":0,"id":406279}
{"project":"presto-0.278","comment":"\/\/ grouping sets in terms of fieldId, dedup as appropriate and then cross-join them with the complex expressions.","label":0,"id":406280}
{"project":"presto-0.278","comment":"\/** * Closes the current entry. *\/","label":0,"id":406281}
{"project":"presto-0.278","comment":"\/\/ create a dump work whose result is never used.","label":0,"id":406282}
{"project":"presto-0.278","comment":"\/\/ Compact the block","label":0,"id":406283}
{"project":"presto-0.278","comment":"\/\/ text format files must have the correct extension when compressed","label":0,"id":406284}
{"project":"presto-0.278","comment":"\/**     * Converts a sortable long to double.     *     * @see #sortableLongToDouble(long)     *\/","label":0,"id":406285}
{"project":"presto-0.278","comment":"\/\/ This methods are statically bound by the compiler","label":0,"id":406286}
{"project":"presto-0.278","comment":"\/** * Gets the length of the value at the {@code position}. * This method must be implemented if @{code getSlice} is implemented. *\/","label":0,"id":406287}
{"project":"presto-0.278","comment":"\/\/ (e.g. A, B, C, D from the above example). This is just an arbitrary heuristic to","label":0,"id":406288}
{"project":"presto-0.278","comment":"\/\/ For the first 3 row groups, the strings are of length 300, 600, and 900 respectively","label":0,"id":406289}
{"project":"presto-0.278","comment":"\/\/ of a normal output node, so declare the node to be order sensitive","label":0,"id":406290}
{"project":"presto-0.278","comment":"\/\/ Account for extra overhead of objects to be around 20%.\/\/ Close attention should be paid when this needs to be updated to 2x or higher as that case may introduce double counting","label":1,"id":406291}
{"project":"presto-0.278","comment":"\/\/ If the handle is destroyed, we destroy the task splits to complete the future","label":0,"id":406292}
{"project":"presto-0.278","comment":"\/\/ TODO: hack because there could be \"type only\" coercions (which aren't necessarily included as implicit casts),\/\/ so do a second pass allowing \"type only\" coercions","label":1,"id":406293}
{"project":"presto-0.278","comment":"\/\/ Replace dead nodes with the first alive node to the right of it in the sorted node list","label":0,"id":406294}
{"project":"presto-0.278","comment":"\/\/ we unwrap Optional<PositionLinks> to actual position links or null in constructor for performance reasons\/\/ we do quick check for `positionLinks == null` to avoid calls to positionLinks","label":0,"id":406295}
{"project":"presto-0.278","comment":"\/\/ check whether the correct hashing algorithm can be identified","label":0,"id":406296}
{"project":"presto-0.278","comment":"\/\/ The estimated serialized size is the sum of the following:","label":0,"id":406297}
{"project":"presto-0.278","comment":"\/** * Read a block encoding from the input. *\/","label":0,"id":406298}
{"project":"presto-0.278","comment":"\/\/ Add the part from current index to found split","label":0,"id":406299}
{"project":"presto-0.278","comment":"\/\/ creation must never fail, so register a failed query in this case","label":0,"id":406300}
{"project":"presto-0.278","comment":"\/\/ presto on spark does not support session functions","label":0,"id":406301}
{"project":"presto-0.278","comment":"\/\/ make sure it is cleaned up","label":0,"id":406302}
{"project":"presto-0.278","comment":"\/\/ update session properties if present","label":0,"id":406303}
{"project":"presto-0.278","comment":"\/\/ Therefore the processing of the returned Work should always be true","label":0,"id":406304}
{"project":"presto-0.278","comment":"\/\/ node1 shard1 anotherNewDelta \/ node3 shard3\/\/ rewrite shard1 to shard4","label":0,"id":406305}
{"project":"presto-0.278","comment":"\/\/ for each connector, retrieve the set of subplans to optimize\/\/ TODO: what if a new connector is added by an existing one\/\/ There are cases (e.g., query federation) where a connector C1 needs to\/\/ create a UNION_ALL to federate data sources from both C1 and C2 (regardless of the classloader issue).\/\/ For such case, it is dangerous to re-calculate the \"max closure\" given the fixpoint property will be broken.\/\/ In order to preserve the fixpoint, we will \"pretend\" the newly added C2 table scan is part of C1's job to maintain.","label":1,"id":406306}
{"project":"presto-0.278","comment":"\/\/ Explicitly generate the statsAndCosts, bypass fragment generation and sanity checks for mock plans.","label":0,"id":406307}
{"project":"presto-0.278","comment":"\/\/ Integer","label":0,"id":406308}
{"project":"presto-0.278","comment":"\/\/ compiler uses inputs instead of variables, so rewrite the expressions first","label":0,"id":406309}
{"project":"presto-0.278","comment":"\/**     * Commits page sink for table insertion.     * To enable recoverable grouped execution, it is required that output connector supports page sink commit.     * This method is unstable and subject to change in the future.     *\/","label":0,"id":406310}
{"project":"presto-0.278","comment":"\/\/ if failed, query is complete","label":0,"id":406311}
{"project":"presto-0.278","comment":"\/\/ First see if the element to remove exists in the input array.","label":0,"id":406312}
{"project":"presto-0.278","comment":"\/\/ output size does not exceed JOIN_MAX_BROADCAST_TABLE_SIZE limit","label":0,"id":406313}
{"project":"presto-0.278","comment":"\/\/ check byte array version","label":0,"id":406314}
{"project":"presto-0.278","comment":"\/\/ final aggregation is run within the TableFinishOperator to summarize collected statistics","label":0,"id":406315}
{"project":"presto-0.278","comment":"\/\/ add links for the sorted internal elements","label":0,"id":406316}
{"project":"presto-0.278","comment":"\/\/ Simple nodes that pass through stream properties","label":0,"id":406317}
{"project":"presto-0.278","comment":"\/**     * List roles grants in the specified catalog for a given principal, not recursively.     *\/","label":0,"id":406318}
{"project":"presto-0.278","comment":"\/**     * Compares the hashed columns in this PagesHashStrategy at the specified positions.     * <p>     * This method does not perform any null checks.     *\/","label":0,"id":406319}
{"project":"presto-0.278","comment":"\/** * All splits registered with the task executor. *\/","label":0,"id":406320}
{"project":"presto-0.278","comment":"\/\/ increment rows","label":0,"id":406321}
{"project":"presto-0.278","comment":"\/\/ For example, a LIMIT clause can cause a query to finish before stats","label":0,"id":406322}
{"project":"presto-0.278","comment":"\/\/ BIGINT Tests","label":0,"id":406323}
{"project":"presto-0.278","comment":"\/\/ if task has less than the minimum guaranteed splits running,\/\/ immediately schedule a new split for this task.  This assures\/\/ that a task gets its fair amount of consideration (you have to\/\/ have splits to be considered for running on a thread).","label":0,"id":406324}
{"project":"presto-0.278","comment":"\/\/ https:\/\/bugs.openjdk.java.net\/browse\/JDK-6523089","label":0,"id":406325}
{"project":"presto-0.278","comment":"\/**     * A statistically equivalent version of plan node, i.e. number of output rows\/size remains similar.     * This is assigned by Presto optimizer.     * Once assigned by the planner, further optimizer rules should respect this id when changing the plan.     *     * For example, when doing pushdown: Filter(TableScan()) -> TableScan(),     * output TableScan should have same statsEquivalentPlanNode as input Filter node     *\/","label":0,"id":406326}
{"project":"presto-0.278","comment":"\/\/ we explicitly disallow \"X\" as type name, so if the user arrived here,","label":0,"id":406327}
{"project":"presto-0.278","comment":"\/** * Copy two arrays back-to-back onto the target array starting at offset 0 *\/","label":0,"id":406328}
{"project":"presto-0.278","comment":"\/\/ TODO: support null values and determine if timestamp and binary are allowed as partition keys","label":1,"id":406329}
{"project":"presto-0.278","comment":"\/\/ Drop in a LimitNode b\/c we cannot push our limit down any further","label":0,"id":406330}
{"project":"presto-0.278","comment":"\/\/ if we did not move any pages, check if we are blocked","label":0,"id":406331}
{"project":"presto-0.278","comment":"\/\/ arrays of maps","label":0,"id":406332}
{"project":"presto-0.278","comment":"\/\/ The order of the arguments to combineConjuncts matters:\/\/ * Unenforced constraints go first because they can only be simple column references,\/\/ which are not prone to logic errors such as out-of-bound access, div-by-zero, etc.\/\/ * Conjuncts in non-deterministic expressions and non-TupleDomain-expressible expressions should\/\/ retain their original (maybe intermixed) order from the input predicate. However, this is not implemented yet.\/\/ * Short of implementing the previous bullet point, the current order of non-deterministic expressions\/\/ and non-TupleDomain-expressible expressions should be retained. Changing the order can lead\/\/ to failures of previously successful queries.","label":1,"id":406333}
{"project":"presto-0.278","comment":"\/\/ In-place code path.","label":0,"id":406334}
{"project":"presto-0.278","comment":"\/\/ exact match on one schema and table","label":0,"id":406335}
{"project":"presto-0.278","comment":"\/\/ Check if the compressed fileNames string is a number","label":0,"id":406336}
{"project":"presto-0.278","comment":"\/\/ should handle the read beyond the range gracefully.","label":0,"id":406337}
{"project":"presto-0.278","comment":"\/\/ tell existing drivers about the new splits; it is safe to update drivers","label":0,"id":406338}
{"project":"presto-0.278","comment":"\/\/ probe","label":0,"id":406339}
{"project":"presto-0.278","comment":"\/\/ we just added a page (or we are finishing) so we are not empty","label":0,"id":406340}
{"project":"presto-0.278","comment":"\/\/ with lambda function","label":0,"id":406341}
{"project":"presto-0.278","comment":"\/\/ Match sources to patterns 1:1","label":0,"id":406342}
{"project":"presto-0.278","comment":"\/\/ Step 3: Implement method body","label":0,"id":406343}
{"project":"presto-0.278","comment":"\/\/ Generated rowId column for updates","label":0,"id":406344}
{"project":"presto-0.278","comment":"\/\/ Re-arrange the parameters, so that the \"this\" parameter is after the meta parameters","label":0,"id":406345}
{"project":"presto-0.278","comment":"\/\/ mimics max function","label":0,"id":406346}
{"project":"presto-0.278","comment":"\/\/ 8 digits after the dot","label":0,"id":406347}
{"project":"presto-0.278","comment":"\/\/ plugin manager","label":0,"id":406348}
{"project":"presto-0.278","comment":"\/\/ this build consumes the input completely, so we do not pass through parent preferences","label":0,"id":406349}
{"project":"presto-0.278","comment":"\/\/ TODO: drop special serialization code as soon as all clients","label":1,"id":406350}
{"project":"presto-0.278","comment":"\/**     * Computes the segment associated with a given index.     *     * @param index an index into a big array.     * @return the associated segment.     *\/","label":0,"id":406351}
{"project":"presto-0.278","comment":"\/\/ ** poll from (or check empty) or push to fileIterators","label":0,"id":406352}
{"project":"presto-0.278","comment":"\/\/ Shallow listing","label":0,"id":406353}
{"project":"presto-0.278","comment":"\/\/ No point in repartitioning if the plan is not distributed","label":0,"id":406354}
{"project":"presto-0.278","comment":"\/\/ fail the operation, if we have more than X failures in a row and more than Y seconds have passed since the last request","label":0,"id":406355}
{"project":"presto-0.278","comment":"\/\/ append the path info to the message","label":0,"id":406356}
{"project":"presto-0.278","comment":"\/\/ we know the exact size required for the block","label":0,"id":406357}
{"project":"presto-0.278","comment":"\/\/ Too many tiles","label":0,"id":406358}
{"project":"presto-0.278","comment":"\/\/ Expected run time for this query is ~30s","label":0,"id":406359}
{"project":"presto-0.278","comment":"\/\/ support for legacy files without metadata","label":0,"id":406360}
{"project":"presto-0.278","comment":"\/\/ Remove .*? prefix. DFA has optimization which does fast lookup for first byte of a potential match.\/\/ When pattern is prefixed with .*? this optimization doesn't work in Pattern.find() function.","label":1,"id":406361}
{"project":"presto-0.278","comment":"\/\/ Decrypt the ColumnMetaData","label":0,"id":406362}
{"project":"presto-0.278","comment":"\/\/ return the only non-empty slice","label":0,"id":406363}
{"project":"presto-0.278","comment":"\/**     * Attempts to rewrite an Expression in terms of the symbols allowed by the symbol scope     * given the known equalities. Returns null if unsuccessful.     * This method allows rewriting non-deterministic expressions.     *\/","label":0,"id":406364}
{"project":"presto-0.278","comment":"\/\/ When the materialized view has already been expanded, do not process it. Just use it as a table.","label":0,"id":406365}
{"project":"presto-0.278","comment":"\/\/ carry the join hashVariable from its new probe), after removing the local exchange at the new probe, the output variables of the join node will","label":0,"id":406366}
{"project":"presto-0.278","comment":"\/\/ Generate all but the last one.","label":0,"id":406367}
{"project":"presto-0.278","comment":"\/** * Gets the column cardinality for all of the given range values. May reach out to the * metrics table in Accumulo to retrieve new cache elements. * * @param schema Table schema * @param table Table name * @param auths Scan authorizations * @param family Accumulo column family * @param qualifier Accumulo column qualifier * @param colValues All range values to summarize for the cardinality * @return The cardinality of the column *\/","label":0,"id":406368}
{"project":"presto-0.278","comment":"\/\/ pools fields is updated based on nodes field.","label":0,"id":406369}
{"project":"presto-0.278","comment":"\/\/ bucket-keys and sorted keys","label":0,"id":406370}
{"project":"presto-0.278","comment":"\/\/ use a larger memory pool so that we don't trigger spilling due to filling the memory pool","label":0,"id":406371}
{"project":"presto-0.278","comment":"\/\/ Mimics function in Hive: MetaStoreUtils.getSchema(Partition, Table)","label":0,"id":406372}
{"project":"presto-0.278","comment":"\/\/ todo check transaction id roll back","label":1,"id":406373}
{"project":"presto-0.278","comment":"\/\/ Since poll() is not deterministic ordering is not required","label":0,"id":406374}
{"project":"presto-0.278","comment":"\/\/ cast is safe: long.class and Long.class are both of type Class<Long>","label":0,"id":406375}
{"project":"presto-0.278","comment":"\/\/ some of these cases, we won't have to double check the bounds unnecessarily at execution time.","label":0,"id":406376}
{"project":"presto-0.278","comment":"\/\/ Current NodeSelectionStrategy support is limited to NO_PREFERENCE","label":0,"id":406377}
{"project":"presto-0.278","comment":"\/\/ Clean up temporary tables","label":0,"id":406378}
{"project":"presto-0.278","comment":"\/\/ union is implemented using a local gather exchange","label":0,"id":406379}
{"project":"presto-0.278","comment":"\/\/ All aggregations are rewritten by this rule. We can add a filter with all the masks to make the query more efficient.","label":0,"id":406380}
{"project":"presto-0.278","comment":"\/\/ make sure that the count distinct has been planned as a MarkDistinctNode","label":0,"id":406381}
{"project":"presto-0.278","comment":"\/\/ !canDrop() cannot be used because it might not be correct. To be safe, we just keep the record by returning false.","label":0,"id":406382}
{"project":"presto-0.278","comment":"\/\/ same correlation in predicate and projection","label":0,"id":406383}
{"project":"presto-0.278","comment":"\/\/ segment 1: [1] | segment 2: [2 - 3] | segment 3: [4] | segment 4: [5 - 7] | segment 5: [8]","label":0,"id":406384}
{"project":"presto-0.278","comment":"\/**     * Converts the provided {@param fieldSchema} to Column     *\/","label":0,"id":406385}
{"project":"presto-0.278","comment":"\/\/ hyperparameters aren't implemented yet","label":1,"id":406386}
{"project":"presto-0.278","comment":"\/\/ only a subregion of the block should be output","label":0,"id":406387}
{"project":"presto-0.278","comment":"\/**     * Signals that transformation has produced a result. If {@code needsMoreData}, {@link #process()} will be called again     * with a new element (or with {@link Optional#empty()} if there are no more elements). If not @{code needsMoreData},     * {@link #process()} will be called again with the same element.     *\/","label":0,"id":406388}
{"project":"presto-0.278","comment":"\/\/ Therefore, we drop those listeners here by recreating the future.","label":0,"id":406389}
{"project":"presto-0.278","comment":"\/\/ group 3 should run approximately 2x the number of queries of 1 and 2","label":0,"id":406390}
{"project":"presto-0.278","comment":"\/\/ drop created partitions","label":0,"id":406391}
{"project":"presto-0.278","comment":"\/\/ both local.sf100000.nation and local.sf100000.orders don't provide stats, therefore no reordering happens","label":0,"id":406392}
{"project":"presto-0.278","comment":"\/\/ verify the input block is the expected type (this is to assure that","label":0,"id":406393}
{"project":"presto-0.278","comment":"\/\/ add pages and close the buffers","label":0,"id":406394}
{"project":"presto-0.278","comment":"\/\/ Requires connectorSplit's hash function to be set up correctly","label":0,"id":406395}
{"project":"presto-0.278","comment":"\/\/ Test cache invalidation","label":0,"id":406396}
{"project":"presto-0.278","comment":"\/** * Determines if this key property satisfies a key requirement. * This is true if any of the keys in the collection satisfies the key requirement. * * @param keyRequirement * @return True if keyRequirement is satisfied by this key property or False otherwise. *\/","label":0,"id":406397}
{"project":"presto-0.278","comment":"\/\/ algorithm, it is going to produce incorrect results after rehashing.","label":0,"id":406398}
{"project":"presto-0.278","comment":"\/\/ wait until the current batch starts","label":0,"id":406399}
{"project":"presto-0.278","comment":"\/\/fakeBucket\/fakeObject.lz4\")));","label":0,"id":406400}
{"project":"presto-0.278","comment":"\/\/ use \"original nodes\" to keep track of the plan structure and \"updates\" to keep track of the new nodes","label":0,"id":406401}
{"project":"presto-0.278","comment":"\/\/ Assumes underlying node has same output symbols as this distinct node","label":0,"id":406402}
{"project":"presto-0.278","comment":"\/\/ Only users that are granted with \"admin\" role can create, drop and list roles","label":0,"id":406403}
{"project":"presto-0.278","comment":"\/\/ Make sure to run this at the end to help clean the plan for logging\/execution and not remove info that other optimizers might need at an earlier point","label":0,"id":406404}
{"project":"presto-0.278","comment":"\/** * Returns a TupleDomain of constraints that is suitable for Explain (Type IO) * <p> * Only Hive partition columns that are used in IO planning. *\/","label":0,"id":406405}
{"project":"presto-0.278","comment":"\/\/ Failed Conversion to direct, can be invoked on column writer, as the dictionary\/\/ compression optimizer state does not change.","label":0,"id":406406}
{"project":"presto-0.278","comment":"\/\/ update parentTopLevelOffsets to take into account failed positions","label":0,"id":406407}
{"project":"presto-0.278","comment":"\/\/ Disabled for 7.5 TestNG Upgrade, the constructor takes in parameter","label":0,"id":406408}
{"project":"presto-0.278","comment":"\/**     * List of sort orders in the same order as the list of variables returned from `getOrderByVariables()`. This means for     * index i, variable `getOrderByVariables().get(i)` has order `getOrderingList().get(i)`.     *\/","label":0,"id":406409}
{"project":"presto-0.278","comment":"\/\/ When decimals are encoded with primitive types Parquet stores unscaled values","label":0,"id":406410}
{"project":"presto-0.278","comment":"\/** * Should the Parquet Reader process a file section with the specified statistics. * * @param numberOfRows the number of rows in the segment; this can be used with * Statistics to determine if a column is only null * @param columnIndexStore column index (statistics) store *\/","label":0,"id":406411}
{"project":"presto-0.278","comment":"\/\/ accurate input bytes statistics and meanwhile avoid non-negligible cost of collecting and processing","label":0,"id":406412}
{"project":"presto-0.278","comment":"\/\/ The only valid case for dataStream is null when data has nulls is that all values are nulls.","label":0,"id":406413}
{"project":"presto-0.278","comment":"\/**     * Checks if sort channel is null at the specified position     *\/","label":0,"id":406414}
{"project":"presto-0.278","comment":"\/\/ bound1 > bound2 is not symmetric with bound2 > bound1","label":0,"id":406415}
{"project":"presto-0.278","comment":"\/\/ the topological order iterator below doesn't include vertices that have self-edges, so don't add them","label":0,"id":406416}
{"project":"presto-0.278","comment":"\/\/ todo maybe make this more precise and only match base package","label":1,"id":406417}
{"project":"presto-0.278","comment":"\/\/ If there are more source updates available, attempt to reacquire the lock and process them.","label":0,"id":406418}
{"project":"presto-0.278","comment":"\/\/ Run LimitPushDown before WindowFilterPushDown","label":0,"id":406419}
{"project":"presto-0.278","comment":"\/\/ Select","label":0,"id":406420}
{"project":"presto-0.278","comment":"\/\/ if (equal(cast(first as <common type>), cast(second as <common type>))","label":0,"id":406421}
{"project":"presto-0.278","comment":"\/\/ this is equivalent to bucketing the table on a VARCHAR column containing $path","label":0,"id":406422}
{"project":"presto-0.278","comment":"\/\/ only output fields, groups and aggregation expressions should be visible from ORDER BY expression","label":0,"id":406423}
{"project":"presto-0.278","comment":"\/\/ errors encountered while evaluating filter functions; indices are positions in the batch","label":0,"id":406424}
{"project":"presto-0.278","comment":"\/**     * Returns the remaining predicates after the tuple domain push down in getTableLayout(). This doesn't have overlap with the {@code predicate} and {@code discretePredicates}.     * Note that if the predicate is fully pushed down to the connector, it may reference columns which are not in the output of the table scan if the columns are not used in the     * downstream plan.     *\/","label":0,"id":406425}
{"project":"presto-0.278","comment":"\/\/ skip from the partial values remaining in current byte","label":0,"id":406426}
{"project":"presto-0.278","comment":"\/\/ This TZ had switch in 2014","label":0,"id":406427}
{"project":"presto-0.278","comment":"\/\/ per HIVE-13040 and ORC-162, empty files are allowed","label":0,"id":406428}
{"project":"presto-0.278","comment":"\/\/example.com:8080\/example\"));","label":0,"id":406429}
{"project":"presto-0.278","comment":"\/\/ Globally constant assignments","label":0,"id":406430}
{"project":"presto-0.278","comment":"\/\/ Expect one driver factory: partial aggregation","label":0,"id":406431}
{"project":"presto-0.278","comment":"\/\/ JDK7 accepts leading plus signs. We don't want to.","label":0,"id":406432}
{"project":"presto-0.278","comment":"\/\/ ARRAY<STRUCT<s_string: STRING, s_double:DOUBLE>>","label":0,"id":406433}
{"project":"presto-0.278","comment":"\/** * Experimental: if true, the engine will invoke getLayout otherwise, getLayout will not be called. * If filter pushdown is required, use a ConnectorPlanOptimizer in the respective connector in order * to push compute into it's TableScan. *\/","label":0,"id":406434}
{"project":"presto-0.278","comment":"\/\/ (as rowsPerPartition), but underestimation of highValue may have\/\/ more severe consequences than underestimation of distinctValuesCount","label":0,"id":406435}
{"project":"presto-0.278","comment":"\/** * Drops the specified materialized view. *\/","label":0,"id":406436}
{"project":"presto-0.278","comment":"\/\/ TODO: Investigate if we can use FixedBucketNodeMap and a node to taskId map to replace NodePartitionMap","label":1,"id":406437}
{"project":"presto-0.278","comment":"\/\/ dictionarySourceIds of data block and hash block do not match","label":0,"id":406438}
{"project":"presto-0.278","comment":"\/\/ caller should close this context as it's a new context","label":0,"id":406439}
{"project":"presto-0.278","comment":"\/\/ at this point, i==high, from [start,low) are == pivot, [low,high) are < and [high,end) are >","label":0,"id":406440}
{"project":"presto-0.278","comment":"\/\/ verify we can write all input columns to the file","label":0,"id":406441}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to rename the specified table in this catalog.     *     * @throws AccessDeniedException if not allowed     *\/","label":0,"id":406442}
{"project":"presto-0.278","comment":"\/\/ If biggest data size is no more than 2x of smallest, we can break down partition","label":0,"id":406443}
{"project":"presto-0.278","comment":"\/\/ %b Abbreviated month name (Jan..Dec)","label":0,"id":406444}
{"project":"presto-0.278","comment":"\/** * Returns the corresponding wrapper type of {@code type} if it is a primitive * type; otherwise returns {@code type} itself. Idempotent. * <pre> *     wrap(int.class) == Integer.class *     wrap(Integer.class) == Integer.class *     wrap(String.class) == String.class * <\/pre> *\/","label":0,"id":406445}
{"project":"presto-0.278","comment":"\/\/ TableScanOperator requires partitioned split to be added before the first call to process","label":0,"id":406446}
{"project":"presto-0.278","comment":"\/\/ To keep track of the file counter per query per partition","label":0,"id":406447}
{"project":"presto-0.278","comment":"\/\/ submit third \"dashboard\" query","label":0,"id":406448}
{"project":"presto-0.278","comment":"\/\/ all done","label":0,"id":406449}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to truncate the specified table.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":406450}
{"project":"presto-0.278","comment":"\/\/ PATCHED_BASE encoding check","label":0,"id":406451}
{"project":"presto-0.278","comment":"\/** * Elements of {@code nulls} array determine if a value for a corresponding row is null. * Elements of {@code ints} array are values for each row. If row is null then value is ignored. *\/","label":0,"id":406452}
{"project":"presto-0.278","comment":"\/\/ no key matched","label":0,"id":406453}
{"project":"presto-0.278","comment":"\/**     * Builds the block. This method can be called multiple times.     *\/","label":0,"id":406454}
{"project":"presto-0.278","comment":"\/** * Encodes the input list into its corresponding z-address and returns a byte array, with the least significant bit at index 0. * <p\/> * <code>encode<\/code> interweaves the bit representations of the input values from the most significant bit to create the final z-address. * <p\/> * For example: for a list of (7, 128) = (0b00000111, 0b10000000), <code>encode<\/code> returns a z-address of 16426 = 0b0100000000101010. * * @param input the list of integer values to be encoded * @return the byte array representation of the z-address *\/","label":0,"id":406455}
{"project":"presto-0.278","comment":"\/\/ physically queued drivers: actual number of instantiated drivers whose execution hasn't started","label":0,"id":406456}
{"project":"presto-0.278","comment":"\/\/ max merged to null","label":0,"id":406457}
{"project":"presto-0.278","comment":"\/\/ Either adding or dropping columns from the end of the table","label":0,"id":406458}
{"project":"presto-0.278","comment":"\/\/ due to phased scheduling) and lifespan combination, if the pipeline has split lifecycle (partitioned).","label":0,"id":406459}
{"project":"presto-0.278","comment":"\/\/ if fixed runs reached max repeat length then write values","label":0,"id":406460}
{"project":"presto-0.278","comment":"\/\/ Probe and build execute independently, so their max memory allocations can be realized at the same time","label":0,"id":406461}
{"project":"presto-0.278","comment":"\/\/ The most important thing about the expected value that it is NOT TupleDomain.none() (or equivalent).","label":0,"id":406462}
{"project":"presto-0.278","comment":"\/\/ When join output layout contains new left side's hashVariable (e.g., a nested join in a single stage, the inner join's output layout possibly\/\/ carry the join hashVariable from its new probe), after removing the local exchange at the new probe, the output variables of the join node will\/\/ also change, which has to be broadcast upwards (rewriting plan nodes) until the point where this hashVariable is no longer the output.\/\/ This is against typical iterativeOptimizer behavior and given this case is rare, just abort the swapping for this scenario.","label":0,"id":406463}
{"project":"presto-0.278","comment":"\/**     * Gets the pending metadata update requests that are to be sent to the coordinator.     *     * @return List of pending metadata update requests     *\/","label":0,"id":406464}
{"project":"presto-0.278","comment":"\/\/ given subquery is already appended","label":0,"id":406465}
{"project":"presto-0.278","comment":"\/\/ TODO add dedicated test cases and remove `extends AbstractTestAggregation`","label":1,"id":406466}
{"project":"presto-0.278","comment":"\/\/ nested sparse dictionary block via constructor","label":0,"id":406467}
{"project":"presto-0.278","comment":"\/\/ write dict page if possible","label":0,"id":406468}
{"project":"presto-0.278","comment":"\/\/ TODO #7784\/\/ assertFails(\/\/ MUST_BE_AGGREGATE_OR_GROUP_BY,\/\/ \"line 1:34: Subquery uses '\\\"u.a\\\"' which must appear in GROUP BY clause\",\/\/ \"SELECT (SELECT apply(0, x -> x + u.a) from (values 1) x(a)) \" +\/\/ \"FROM t1 u GROUP BY b\");\/\/ name shadowing","label":1,"id":406469}
{"project":"presto-0.278","comment":"\/\/ 1970-01-01 00:00:00.000001","label":0,"id":406470}
{"project":"presto-0.278","comment":"\/** * We've suffered an exception and are kaput. *\/","label":0,"id":406471}
{"project":"presto-0.278","comment":"\/\/ That node will restore the shard from the backup location.","label":0,"id":406472}
{"project":"presto-0.278","comment":"\/\/ store first value to result buffer","label":0,"id":406473}
{"project":"presto-0.278","comment":"\/\/ build announcement with updated sources","label":0,"id":406474}
{"project":"presto-0.278","comment":"\/** * S3 Select uses Ion SQL++ query language. This class is used to construct a valid Ion SQL++ query * to be evaluated with S3 Select on an S3 object. *\/","label":0,"id":406475}
{"project":"presto-0.278","comment":"\/\/ Inner and right join doesn't match rows with null key column values.","label":0,"id":406476}
{"project":"presto-0.278","comment":"\/\/ EXPECTED_FOOTER_SIZE is an int, so this will never fail","label":0,"id":406477}
{"project":"presto-0.278","comment":"\/\/ 3871-04-29 10:40:00.789","label":0,"id":406478}
{"project":"presto-0.278","comment":"\/\/ around for a while in case clients come back asking for status","label":0,"id":406479}
{"project":"presto-0.278","comment":"\/\/ Sleep long enough to ensure resource exhaustion error","label":0,"id":406480}
{"project":"presto-0.278","comment":"\/\/ streaming aggregation enabled","label":0,"id":406481}
{"project":"presto-0.278","comment":"\/\/ at this point outputPositions are relative to page, e.g. they are indices into positions array\/\/ translate outputPositions to positions relative to the start of the row group,\/\/ e.g. make outputPositions a subset of positions array","label":0,"id":406482}
{"project":"presto-0.278","comment":"\/\/ the varchar type length is enough to contain the number's representation","label":0,"id":406483}
{"project":"presto-0.278","comment":"\/\/ the upper bound is between our current point and the next point","label":0,"id":406484}
{"project":"presto-0.278","comment":"\/\/ a2 = b * (b + c)","label":0,"id":406485}
{"project":"presto-0.278","comment":"\/\/ Filter based on a hash table uses up to 3 longs per value (the value itself + 1 or 2\/\/ slots in a hash table), e.g. up to 192 bits per value.\/\/ Filter based on a bitmap uses (max - min) \/ num-values bits per value.\/\/ Choose the filter that uses less bits per value.","label":0,"id":406486}
{"project":"presto-0.278","comment":"\/\/ remove all pages from the memory manager and the 1 byte that we added above","label":0,"id":406487}
{"project":"presto-0.278","comment":"\/\/ verify Presto configuration","label":0,"id":406488}
{"project":"presto-0.278","comment":"\/\/ attempt to read the trust store as a PEM file","label":0,"id":406489}
{"project":"presto-0.278","comment":"\/** * Unnester is a layer of abstraction between {@link UnnestOperator} and {@link UnnestBlockBuilder} to enable * translation of indices from input nested blocks to underlying element blocks. *\/","label":0,"id":406490}
{"project":"presto-0.278","comment":"\/\/ 1 page wad moved to the client buffer, but not acknowledged yet","label":0,"id":406491}
{"project":"presto-0.278","comment":"\/\/ add count aggregations and filter rows where any of the counts is >= 1","label":0,"id":406492}
{"project":"presto-0.278","comment":"\/\/ plan-time support for row-by-row delete so that planning doesn't fail. This is why we need","label":0,"id":406493}
{"project":"presto-0.278","comment":"\/\/ update memory usage just before producing page to cap from top","label":0,"id":406494}
{"project":"presto-0.278","comment":"\/\/ verify selecting from a view over a table requires the view owner to have special view creation privileges for the table","label":0,"id":406495}
{"project":"presto-0.278","comment":"\/\/ wait until tasks show up on the worker","label":0,"id":406496}
{"project":"presto-0.278","comment":"\/\/ record analysis time","label":0,"id":406497}
{"project":"presto-0.278","comment":"\/\/ acknowledge pages for first buffer, no space is freed","label":0,"id":406498}
{"project":"presto-0.278","comment":"\/\/ load queries","label":0,"id":406499}
{"project":"presto-0.278","comment":"\/\/ namespace_two shouldn't be visible on branchOne","label":0,"id":406500}
{"project":"presto-0.278","comment":"\/\/ We can't deduplicate expressions here because even if two expressions are equal,\/\/ the TranslationMap maps sql names to symbols, and any lambda expressions will be\/\/ resolved differently since the lambdaDeclarationToVariableMap is identity based.","label":0,"id":406501}
{"project":"presto-0.278","comment":"\/\/ high points to first value > pivotValue","label":0,"id":406502}
{"project":"presto-0.278","comment":"\/\/ test all quantile combinations","label":0,"id":406503}
{"project":"presto-0.278","comment":"\/\/ Finish early when the probe side is empty","label":0,"id":406504}
{"project":"presto-0.278","comment":"\/\/ short long -> short","label":0,"id":406505}
{"project":"presto-0.278","comment":"\/\/ The 100 positions in the dictionary block index to 10 positions in the underlying dictionary (10 each).","label":0,"id":406506}
{"project":"presto-0.278","comment":"\/\/ sort output rows in a big array in case there are too many rows","label":0,"id":406507}
{"project":"presto-0.278","comment":"\/\/ TODO: add test case for a sliced RowBlock\/\/ underlying field blocks are not compact","label":1,"id":406508}
{"project":"presto-0.278","comment":"\/\/ convert to row expression","label":0,"id":406509}
{"project":"presto-0.278","comment":"\/\/ if (2 * remainder >= divisor) - increment quotient by one","label":0,"id":406510}
{"project":"presto-0.278","comment":"\/**     *  Oracle Plugin Constructor     *\/","label":0,"id":406511}
{"project":"presto-0.278","comment":"\/** * The reader has a field that is missing from the ORC file *\/","label":0,"id":406512}
{"project":"presto-0.278","comment":"\/\/ (1) result has all required hashes","label":0,"id":406513}
{"project":"presto-0.278","comment":"\/\/ The ideal case is to have a Map<FunctionImplementationType, SqlFunctionExecutor> to handle multiple executors.\/\/ However, It is hard to create this map in Guice given SqlFunctionExecutor modules now are dynamically plugged in.\/\/ One way to solve this is to let each module initialize its own SqlFunctionExecutor during binding time and return to the current module.\/\/ Then the current module can bind the map to the collected SqlFunctionExecutor instances.\/\/ However, to initialize all these SqlFunctionExecutors requires another bunch of injected dependencies.\/\/ So we simplified the case to only allow one singleton.\/\/ The downside is that if there is a use case with two UDF services reachable by one cluster;\/\/ one UDF services is with grpc protocol and the other is thrift;\/\/ we need to come back to solve the problem.","label":0,"id":406514}
{"project":"presto-0.278","comment":"\/\/ TODO: For future cases we may want to start tracing from client. Then continuation of tracing\/\/ will be needed instead of creating a new trace here.","label":1,"id":406515}
{"project":"presto-0.278","comment":"\/\/ If analysis already contains where clause information for this node, analyzeWhere","label":0,"id":406516}
{"project":"presto-0.278","comment":"\/\/ re-type a sub-field","label":0,"id":406517}
{"project":"presto-0.278","comment":"\/\/ 5..F     29T    627M   673M     627M    627M   627M   627M","label":0,"id":406518}
{"project":"presto-0.278","comment":"\/\/ We cannot push non-deterministic predicates to filtering side. Each filtering side row have to be","label":0,"id":406519}
{"project":"presto-0.278","comment":"\/\/ Return a new future even if newDriverGroupReady has not finished.","label":0,"id":406520}
{"project":"presto-0.278","comment":"\/** * Produce a row for the current probe position, if it doesn't match any row on lookup side and this is an outer join. * * @return whether pageBuilder became full *\/","label":0,"id":406521}
{"project":"presto-0.278","comment":"\/\/ case between","label":0,"id":406522}
{"project":"presto-0.278","comment":"\/\/ No idle checks needed","label":0,"id":406523}
{"project":"presto-0.278","comment":"\/\/ Test aliased relation","label":0,"id":406524}
{"project":"presto-0.278","comment":"\/**     * Read a block encoding from the input.     *\/","label":0,"id":406525}
{"project":"presto-0.278","comment":"\/\/ line up the chunk to chunk size and flush directly to OutputStream","label":0,"id":406526}
{"project":"presto-0.278","comment":"\/**     * Pick nodes according to different strategies for a split     * @param split     * @return picked nodes     *\/","label":0,"id":406527}
{"project":"presto-0.278","comment":"\/\/ shard 3: not referenced","label":0,"id":406528}
{"project":"presto-0.278","comment":"\/** * Extracts buffered data into the provided byte[] array, starting at position bPos, up to a maximum of bAvail * bytes. Returns how many bytes were actually extracted. * <p> * Package protected for access from I\/O streams. * * @param b byte[] array to extract the buffered data into. * @param bPos position in byte[] array to start extraction at. * @param bAvail amount of bytes we're allowed to extract. We may extract fewer (if fewer are available). * @param context the context to be used * @return The number of bytes successfully extracted into the provided byte[] array. *\/","label":0,"id":406529}
{"project":"presto-0.278","comment":"\/\/ Include only columns referenced in the optimized expression. Although the expression is sent to the worker node","label":0,"id":406530}
{"project":"presto-0.278","comment":"\/\/ Default column statistics for unknown data types.","label":0,"id":406531}
{"project":"presto-0.278","comment":"\/\/ Expect twp driver factories: partial aggregation and intermediate aggregation","label":0,"id":406532}
{"project":"presto-0.278","comment":"\/**     * Group by field description     *\/","label":0,"id":406533}
{"project":"presto-0.278","comment":"\/\/ at this point all the column references are already rewritten to SymbolReference\/\/ when reference expression is not rewritten that means it cannot be satisfied within given PlaNode\/\/ see that TranslationMap only resolves (local) fields in current scope","label":0,"id":406534}
{"project":"presto-0.278","comment":"\/\/ expand * and T.*","label":0,"id":406535}
{"project":"presto-0.278","comment":"\/\/ without the ::apply below, the type system is unable to drop the R type from Optional","label":0,"id":406536}
{"project":"presto-0.278","comment":"\/\/ Partial aggregation pushdown works at the granularity of individual files","label":0,"id":406537}
{"project":"presto-0.278","comment":"\/\/ Statistics page layout:\/\/\/\/ row     fragments     context     stats1     stats2 ...\/\/ null       null          X          X          X\/\/ null       null          X          X          X\/\/ null       null          X          X          X\/\/ null       null          X          X          X\/\/ ...","label":0,"id":406538}
{"project":"presto-0.278","comment":"\/\/ Resubmitted Errors","label":0,"id":406539}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to execute SHOW SCHEMAS in a catalog. * <p> * NOTE: This method is only present to give users an error message when listing is not allowed. * The {@link #filterSchemas} method must handle filter all results for unauthorized users, * since there are multiple way to list schemas. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":406540}
{"project":"presto-0.278","comment":"\/\/ * this is where new partitions are created","label":0,"id":406541}
{"project":"presto-0.278","comment":"\/** * Create and cache ColumnStatistics for the value node(s) for cases when the there are no value * writers, but we still need to write valid column stripe statistics for all nested writers. *\/","label":0,"id":406542}
{"project":"presto-0.278","comment":"\/\/ add primary keys first","label":0,"id":406543}
{"project":"presto-0.278","comment":"\/\/ We only verify the memory usage when the batchSize reaches MAX_BATCH_SIZE as batchSize may be\/\/ increasing during the test, which will cause the StreamReader buffer sizes to increase too.","label":0,"id":406544}
{"project":"presto-0.278","comment":"\/\/ Set our scanner to fetch this family\/qualifier column\/\/ This will help us prune which data we receive from Accumulo","label":0,"id":406545}
{"project":"presto-0.278","comment":"\/\/ Infer specialization on this type parameter.\/\/ We don't do this for Object because it could match any type.","label":0,"id":406546}
{"project":"presto-0.278","comment":"\/\/ You may obtain a copy of the License at","label":0,"id":406547}
{"project":"presto-0.278","comment":"\/\/ OrcOutputBuffer). To avoid this, the streams are reallocated for every stripe.","label":0,"id":406548}
{"project":"presto-0.278","comment":"\/\/ t2.val2 is in range [0, 10)","label":0,"id":406549}
{"project":"presto-0.278","comment":"\/\/ merged pages are grouped on all partition channels","label":0,"id":406550}
{"project":"presto-0.278","comment":"\/\/ if there's and odd number of elements, just append the last one","label":0,"id":406551}
{"project":"presto-0.278","comment":"\/\/ TRUNCATE REAL -> REAL","label":0,"id":406552}
{"project":"presto-0.278","comment":"\/\/ 1. top-level primitive columns","label":0,"id":406553}
{"project":"presto-0.278","comment":"\/\/ null maps are handled by assertPositionValue","label":0,"id":406554}
{"project":"presto-0.278","comment":"\/\/ this is a source operator, so we can just terminate the output now","label":0,"id":406555}
{"project":"presto-0.278","comment":"\/\/ If not in Zip64 format, compute central directory offset by end of central directory record","label":0,"id":406556}
{"project":"presto-0.278","comment":"\/\/ ClickHouse does not support `create table tbl as select * from tbl2 where 0=1`","label":0,"id":406557}
{"project":"presto-0.278","comment":"\/** * Searches for and outputs ranges of integer addresses within certain ranges in each dimension. *\/","label":0,"id":406558}
{"project":"presto-0.278","comment":"\/\/ * Each argument is multiplied into the product exactly once. (by using prime numbers as input)","label":0,"id":406559}
{"project":"presto-0.278","comment":"\/\/ Only update statistics for successful queries","label":0,"id":406560}
{"project":"presto-0.278","comment":"\/\/ analyze for single partition","label":0,"id":406561}
{"project":"presto-0.278","comment":"\/**     * Adds a newKey to keys while enforcing the constraint that no     * key is redundant with respect to another.     * E.g. if {orderkey} was an existing key then the key {orderkey, orderpriority}     * would represent a redundant key. The inverse is true, an existing key     * can be removed by a new key it if it is redundant with respect to the newKey.     *     * @param keys     * @param newKey     *\/","label":0,"id":406562}
{"project":"presto-0.278","comment":"\/**     * Can be called only after {@link #createLookupSourceProvider()} is done and all users of {@link LookupSource}-s finished.     *\/","label":0,"id":406563}
{"project":"presto-0.278","comment":"\/** * Used for MinMaxBy aggregation states where value's native container type is Block or Slice. *\/","label":0,"id":406564}
{"project":"presto-0.278","comment":"\/**     * Replaces input source block with {@code block}. The old data structures for output have to be     * reset as well, because they are based on the source.     *\/","label":0,"id":406565}
{"project":"presto-0.278","comment":"\/** * Implementation of this interface is expected to be thread safe *\/","label":0,"id":406566}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to rename the specified table. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":406567}
{"project":"presto-0.278","comment":"\/\/ no time zone mismatch, time range covers 11 hours of day 0 and 13 hours of day 1","label":0,"id":406568}
{"project":"presto-0.278","comment":"\/\/ We can't replace one that's not done, because the task may be blocked on that future","label":0,"id":406569}
{"project":"presto-0.278","comment":"\/\/ TODO Support LZO and LZ4 compression\/\/ When using airlift LZO or LZ4 compressor, decompressing page in reader throws exception.","label":1,"id":406570}
{"project":"presto-0.278","comment":"\/\/ NOTE: the ConcatRecordCursor implementation relies on the fact that the\/\/ cursor creation in the Iterable is lazy so DO NOT materialize this into\/\/ an ImmutableList","label":0,"id":406571}
{"project":"presto-0.278","comment":"\/\/ update stats","label":0,"id":406572}
{"project":"presto-0.278","comment":"\/\/ TEST: 1 to n inner join between customers and orders with limit(6) on the right table.","label":0,"id":406573}
{"project":"presto-0.278","comment":"\/\/ remove the weak reference from the list to avoid a memory leak","label":1,"id":406574}
{"project":"presto-0.278","comment":"\/\/ PDT date","label":0,"id":406575}
{"project":"presto-0.278","comment":"\/\/ LIKE_PATTERN(pattern, escape), if escape is present","label":0,"id":406576}
{"project":"presto-0.278","comment":"\/\/ continue processing the pairs that were just built","label":0,"id":406577}
{"project":"presto-0.278","comment":"\/**     * Ensures this big array is at least the specified length.  If the array is smaller, segments     * are added until the array is larger then the specified length.     *\/","label":0,"id":406578}
{"project":"presto-0.278","comment":"\/\/ rawBytes = sum of the length of every row value (without dictionary encoding)","label":0,"id":406579}
{"project":"presto-0.278","comment":"\/\/ test statistics","label":0,"id":406580}
{"project":"presto-0.278","comment":"\/\/ Presto only uses getReflectionObjectInspector here, in a test method. Therefore, we","label":0,"id":406581}
{"project":"presto-0.278","comment":"\/\/ winter on northern hemisphere (possible DST on southern hemisphere)","label":0,"id":406582}
{"project":"presto-0.278","comment":"\/\/ returnflag,\/\/ linestatus\/\/ quantity\/\/ extendedprice\/\/ extendedprice * (1 - discount)\/\/ extendedprice * (1 - discount) * (1 + tax)\/\/ discount","label":0,"id":406583}
{"project":"presto-0.278","comment":"\/\/ In case of early termination (before operator is finished) release partition consumption to avoid a deadlock","label":0,"id":406584}
{"project":"presto-0.278","comment":"\/\/127.0.0.1:12\"), NodeVersion.UNKNOWN, false)));","label":0,"id":406585}
{"project":"presto-0.278","comment":"\/\/ Pinot uses DISTINCTCOUNTHLL to do distinct count estimation, with hyperloglog algorithm.","label":0,"id":406586}
{"project":"presto-0.278","comment":"\/** * For every row from {@link #input} a {@link #subquery} relation is calculated. * Then input row is cross joined with subquery relation and returned as a result. * <p> * INNER - does not return any row for input row when subquery relation is empty * LEFT - does return input completed with NULL values when subquery relation is empty *\/","label":0,"id":406587}
{"project":"presto-0.278","comment":"\/\/ do a copy","label":0,"id":406588}
{"project":"presto-0.278","comment":"\/\/ implementation when create after drop support is introduced for a table.","label":0,"id":406589}
{"project":"presto-0.278","comment":"\/\/ Test with prefix","label":0,"id":406590}
{"project":"presto-0.278","comment":"\/\/ add keys","label":0,"id":406591}
{"project":"presto-0.278","comment":"\/**     * Rollback the transaction. Will be called at most once and will not be called if     * {@link #commit(ConnectorTransactionHandle)} is called.     * Note: calls to this method may race with calls to the ConnectorMetadata.     *\/","label":0,"id":406592}
{"project":"presto-0.278","comment":"\/\/ For each of the arguments, the invocation convention is required to be FAIL_ON_NULL\/\/ when the  corresponding definition convention has RETURN_NULL_ON_NULL convention.\/\/ As a result, when `definitionReturnsNullable` is false, the function\/\/ can never return a null value. Therefore, the if below is sufficient.","label":0,"id":406593}
{"project":"presto-0.278","comment":"\/\/ extra trailing token after json scalar","label":0,"id":406594}
{"project":"presto-0.278","comment":"\/\/ Instead, for now we compare the existence of layout in table handles.","label":0,"id":406595}
{"project":"presto-0.278","comment":"\/\/ Sort by low marker for the range","label":0,"id":406596}
{"project":"presto-0.278","comment":"\/** * <pre> * Ex: Partition keys = ['a', 'b'] *     Partition names = ['a=1\/b=2', 'a=2\/b=2'] * <\/pre> * * @param partitionNames List of full partition names * @return Mapping of partition name to partition object *\/","label":0,"id":406597}
{"project":"presto-0.278","comment":"\/** * Merge disk ranges that are closer than {@code maxMergeDistance}. *\/","label":0,"id":406598}
{"project":"presto-0.278","comment":"\/\/ TODO: need to know if alias was quoted","label":1,"id":406599}
{"project":"presto-0.278","comment":"\/\/ adjust variable run length","label":0,"id":406600}
{"project":"presto-0.278","comment":"\/\/ Note: it does not matter which partition id the task is using, in broadcast all tasks read from the same partition","label":0,"id":406601}
{"project":"presto-0.278","comment":"\/*         *   HACK!         *         *   Currently cost model always has to compute the total cost of an operation.         *   For JOIN the total cost consist of 4 parts:         *     - Cost of exchanges that have to be introduced to execute a JOIN         *     - Cost of building a hash table         *     - Cost of probing a hash table         *     - Cost of building an output for matched rows         *         *   When output size for a JOIN cannot be estimated the cost model returns         *   UNKNOWN cost for the join.         *         *   However assuming the cost of JOIN output is always the same, we can still make         *   cost based decisions based on the input cost for different types of JOINs.         *         *   Although the side flipping can be made purely based on stats (smaller side         *   always goes to the right), determining JOIN type is not that simple. As when         *   choosing REPLICATED over REPARTITIONED join the cost of exchanging and building         *   the hash table scales with the number of nodes where the build side is replicated.         *         *   TODO Decision about the distribution should be based on LocalCostEstimate only when PlanCostEstimate cannot be calculated. Otherwise cost comparator cannot take query.max-memory into account.         *\/","label":1,"id":406602}
{"project":"presto-0.278","comment":"\/** * Manages the Redis connector specific metadata information. The Connector provides an additional set of columns * for each table that are created as hidden columns. See {@link RedisInternalFieldDescription} for a list * of additional columns. *\/","label":0,"id":406603}
{"project":"presto-0.278","comment":"\/\/ Mismatched keys checksum","label":0,"id":406604}
{"project":"presto-0.278","comment":"\/\/ Add coalesce expressions for all aggregation functions","label":0,"id":406605}
{"project":"presto-0.278","comment":"\/\/ In that case, it will be removed.","label":0,"id":406606}
{"project":"presto-0.278","comment":"\/\/ Dedup","label":0,"id":406607}
{"project":"presto-0.278","comment":"\/**     * Decode a value for the given column handle.     *     * @param value The raw value as generated by the row decoder.     * @param columnHandle The column for which the value is decoded.     * @return A {@link FieldValueProvider} instance which returns a captured value for this specific column.     *\/","label":0,"id":406608}
{"project":"presto-0.278","comment":"\/**     * 23:59:59 Dec 31st 2107. The maximum date representable in DOS format.     *\/","label":0,"id":406609}
{"project":"presto-0.278","comment":"\/\/ Splits: 1000 total, 842 done (84.20%)","label":0,"id":406610}
{"project":"presto-0.278","comment":"\/\/ Create a page with positionCount >> expected size of groupByHash","label":0,"id":406611}
{"project":"presto-0.278","comment":"\/\/ we add a coalesce function with the output of the new outer join and the aggregation performed over a single","label":0,"id":406612}
{"project":"presto-0.278","comment":"\/\/ interrupt JDBC thread that is waiting for query results","label":0,"id":406613}
{"project":"presto-0.278","comment":"\/\/ write entry count","label":0,"id":406614}
{"project":"presto-0.278","comment":"\/*     * Aliases must be collected on the way back up the tree for several reasons:     * 1) The rvalue may depend on previously bound aliases (in the case of an     *    Expression or FunctionCall)     * 2) Scope: aliases bound in a node are only in scope in nodes higher up     *    the tree, just as symbols in a node's output are only in scope in nodes     *    higher up the tree.     *\/","label":0,"id":406615}
{"project":"presto-0.278","comment":"\/**     * Converts a 32-bit DOS timestamp into a unix timestamp.     *\/","label":0,"id":406616}
{"project":"presto-0.278","comment":"\/\/test:8020\/\");","label":0,"id":406617}
{"project":"presto-0.278","comment":"\/\/ This method is called when a split that belongs to a previously unseen driver group is scheduled.","label":0,"id":406618}
{"project":"presto-0.278","comment":"\/** * Gets the Double value of the given Presto column. * * @param name Column name * @return Double value *\/","label":0,"id":406619}
{"project":"presto-0.278","comment":"\/\/ instances of TaskStatsTracker and AccumulatedTaskStatsTracker should not be passed for GC to","label":0,"id":406620}
{"project":"presto-0.278","comment":"\/\/ You should not close the container directly if you want to reuse it.\/\/ Instead you should close closeable returned by {@link this::startOrReuse}","label":0,"id":406621}
{"project":"presto-0.278","comment":"\/\/localhost:9090\");","label":0,"id":406622}
{"project":"presto-0.278","comment":"\/\/ If they use both the left and right variables, we add them to the list of joinPredicates","label":0,"id":406623}
{"project":"presto-0.278","comment":"\/\/ The zone has 'gap' on 1970-01-01","label":0,"id":406624}
{"project":"presto-0.278","comment":"\/\/ at this point, Task1 = 6 total bytes, Task2 = 2 total bytes","label":0,"id":406625}
{"project":"presto-0.278","comment":"\/\/ Check if the swapped join is valid.","label":0,"id":406626}
{"project":"presto-0.278","comment":"\/\/ exactly the value","label":0,"id":406627}
{"project":"presto-0.278","comment":"\/\/ model: is the serialized model","label":0,"id":406628}
{"project":"presto-0.278","comment":"\/\/ key type: real, double, decimal","label":0,"id":406629}
{"project":"presto-0.278","comment":"\/\/ For user supplied path like [path_exists_but_is_not_readable_or_writable]\/[paths_do_not_exist], the hadoop file system won't","label":0,"id":406630}
{"project":"presto-0.278","comment":"\/\/ Hash tables","label":0,"id":406631}
{"project":"presto-0.278","comment":"\/\/ EMPTY_SLICE has null byte buffer","label":0,"id":406632}
{"project":"presto-0.278","comment":"\/*     * TODO: the close() method will shutdown the external process     *\/","label":1,"id":406633}
{"project":"presto-0.278","comment":"\/\/ get it from the view","label":0,"id":406634}
{"project":"presto-0.278","comment":"\/** * CONNECTOR strategy will canonicalize plan according to DEFAULT strategy, and additionally * canoncialize `TableScanNode` by giving a connector specific implementation. Unlike DEFAULT strategy, * it supports all Plan nodes(like union, join etc.) * * With this approach, we call ConnectorTableLayoutHandle.getIdentifier() for all `TableScanNode`. * Each connector can have a specific implementation to canonicalize table layout handles however they want. * * For example, Hive connector removes constants from constraints on partition keys: * `SELECT * FROM table WHERE ds = '2020-01-01'` will be equivalent to `SELECT * FROM table WHERE ds = '2020-01-02'` * where `ds` is a partition column in `table` * * This is used in context of history based optimizations. *\/","label":0,"id":406635}
{"project":"presto-0.278","comment":"\/\/ It is impossible to have probe == null && !pageBuilder.isEmpty(),\/\/ because we will flush a page whenever we reach the probe end","label":0,"id":406636}
{"project":"presto-0.278","comment":"\/\/ fields do not need to be synchronized in that class.","label":0,"id":406637}
{"project":"presto-0.278","comment":"\/\/ sort ranges by start offset","label":0,"id":406638}
{"project":"presto-0.278","comment":"\/\/ 2. create table tbl1 ENGINE=<engine> as select * from tbl2","label":0,"id":406639}
{"project":"presto-0.278","comment":"\/**     * Apply the aggregation to current context and return the updated context. Throws error for invalid operations.     *\/","label":0,"id":406640}
{"project":"presto-0.278","comment":"\/\/ Queue of pending requests","label":0,"id":406641}
{"project":"presto-0.278","comment":"\/\/ Do not use this directly. Always use the other assertAggregation.","label":0,"id":406642}
{"project":"presto-0.278","comment":"\/\/ rows frame with explicit end","label":0,"id":406643}
{"project":"presto-0.278","comment":"\/\/ Primitive numbers","label":0,"id":406644}
{"project":"presto-0.278","comment":"\/\/ sent pages will have an initial reference count, so drop it","label":0,"id":406645}
{"project":"presto-0.278","comment":"\/\/ all schemas in presto have a catalog name","label":0,"id":406646}
{"project":"presto-0.278","comment":"\/\/ Ordering used to determine Expression preference when determining canonicals","label":0,"id":406647}
{"project":"presto-0.278","comment":"\/**     * @param rewriter Rewriter logic used to rewrite plans     * @param node Plan to be rewritten     * @return Rewritten plan node by using `rewriter`. Rewrites only need to specify implementation of nodes     * that are directly changed as of rewrite. All parents of rewritten nodes are automatically rewritten.     *\/","label":0,"id":406648}
{"project":"presto-0.278","comment":"\/\/ TODO: To support non-null column. (NOT_NULL_COLUMN_CONSTRAINT)","label":1,"id":406649}
{"project":"presto-0.278","comment":"\/\/ 1. If so, we replace the JoinNode to MergeJoinNode","label":0,"id":406650}
{"project":"presto-0.278","comment":"\/** * @return true if getPrecedingPositionsToFail or getSucceedingPositionsToFail may return * non-zero values *\/","label":0,"id":406651}
{"project":"presto-0.278","comment":"\/**     * Gets future info for the task after the state changes from     * {@code current state}. If the task has not been created yet, an     * uninitialized task is created and the future is returned.  If the task     * is already in a final state, the info is returned immediately.     * <p>     * NOTE: this design assumes that only tasks that will eventually exist are     * queried.     *\/","label":0,"id":406652}
{"project":"presto-0.278","comment":"\/\/ Empty left child with projections and right outer join","label":0,"id":406653}
{"project":"presto-0.278","comment":"\/\/ x <> 1.2 with nanAllowed true","label":0,"id":406654}
{"project":"presto-0.278","comment":"\/\/ task finished","label":0,"id":406655}
{"project":"presto-0.278","comment":"\/\/ thus forcing the keys from first row group to be carried over to the second row group","label":0,"id":406656}
{"project":"presto-0.278","comment":"\/**     * Stage has finished executing and all output has been consumed.     *\/","label":0,"id":406657}
{"project":"presto-0.278","comment":"\/** * Class to interact with Delta lake table APIs. *\/","label":0,"id":406658}
{"project":"presto-0.278","comment":"\/\/ MaterializedResult#Builder doesn't support null row. Coalesce null value to empty map for comparison.","label":0,"id":406659}
{"project":"presto-0.278","comment":"\/\/ grouping sets are easier to understand in terms of inputs","label":0,"id":406660}
{"project":"presto-0.278","comment":"\/\/ 1. For DictionaryBlock, getSizeInBytes() calculates the compacted size. For example a DictionaryBlock with ids [1, 1] and dictionary with 3 elements of sizes","label":0,"id":406661}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to revoke the specified roles from the specified principals.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":406662}
{"project":"presto-0.278","comment":"\/\/ With subqueries, the translation from Expression to RowExpression can happen here.","label":0,"id":406663}
{"project":"presto-0.278","comment":"\/\/ column name = variable.name","label":0,"id":406664}
{"project":"presto-0.278","comment":"\/\/ key 600 doesn't exist in the column encodings\/\/ key 500 exists in the column encodings not present in the order list","label":0,"id":406665}
{"project":"presto-0.278","comment":"\/** * Groups the field descriptions for message or key. *\/","label":0,"id":406666}
{"project":"presto-0.278","comment":"\/\/ Row(Dictionary(LongArrayBlock), Dictionary(Row(LongArrayBlock, LongArrayBlock)))","label":0,"id":406667}
{"project":"presto-0.278","comment":"\/** * Invoked when memory reservation completes successfully. * * @param memoryPool             the {@link MemoryPool} where the reservation took place * @param queryId                the {@link QueryId} of the query that reserved the memory * @param queryMemoryReservation the total amount of memory reserved by the query (revocable and regular) *\/","label":0,"id":406668}
{"project":"presto-0.278","comment":"\/**     * Returns a TupleDomain of constraints that is suitable for ExplainIO     *\/","label":0,"id":406669}
{"project":"presto-0.278","comment":"\/\/ nested arrays","label":0,"id":406670}
{"project":"presto-0.278","comment":"\/** * We create a list of tables where all columns can possibly become null, * rather than being 1-1 mapped to MV outputs. This implies that these tables * are on the outer side of a join. * <p> * For example, A LEFT JOIN (B LEFT JOIN C) has [B, C] as base tables * on the outer join side * <\/p> *\/","label":0,"id":406671}
{"project":"presto-0.278","comment":"\/\/ Union","label":0,"id":406672}
{"project":"presto-0.278","comment":"\/**         * Murmur3 64-bit variant. This is essentially MSB 8 bytes of Murmur3 128-bit variant.         *         * @param data - input byte array         * @return - hashcode         *\/","label":0,"id":406673}
{"project":"presto-0.278","comment":"\/\/ TODO: write optimized implementation","label":1,"id":406674}
{"project":"presto-0.278","comment":"\/\/ node scheduler\/\/ TODO: remove from NodePartitioningManager and move to CoordinatorModule","label":1,"id":406675}
{"project":"presto-0.278","comment":"\/\/ see AWSRequestMetrics","label":0,"id":406676}
{"project":"presto-0.278","comment":"\/\/ Account for extra overhead of objects to be around 20%.","label":0,"id":406677}
{"project":"presto-0.278","comment":"\/\/ and output buffers should not change","label":0,"id":406678}
{"project":"presto-0.278","comment":"\/\/ local dispatcher","label":0,"id":406679}
{"project":"presto-0.278","comment":"\/\/ TEST: 1 to n inner join between customers and orders with limit(1) on the right table.\/\/ Only maxcard=1 should get propagated","label":0,"id":406680}
{"project":"presto-0.278","comment":"\/\/ record the current interrupted status (and clear the flag); we'll reset it later","label":0,"id":406681}
{"project":"presto-0.278","comment":"\/\/ enqueue the parent node in order to recursively update its ancestors","label":0,"id":406682}
{"project":"presto-0.278","comment":"\/\/ coerce null to boolean","label":0,"id":406683}
{"project":"presto-0.278","comment":"\/\/ If a subquery has at most single row for any correlation values?","label":0,"id":406684}
{"project":"presto-0.278","comment":"\/\/ forward order with nulls","label":0,"id":406685}
{"project":"presto-0.278","comment":"\/** * Threshold on total distributed CPU usage after which new queries * will queue instead of starting. *\/","label":0,"id":406686}
{"project":"presto-0.278","comment":"\/\/ TestNG 6 silently ignored, TestNG 7.5 fails (correctly), disabling for now","label":0,"id":406687}
{"project":"presto-0.278","comment":"\/\/ shared between SplitRunners","label":0,"id":406688}
{"project":"presto-0.278","comment":"\/\/ TODO: temporary kill switch until we're confident the new error handling logic is","label":1,"id":406689}
{"project":"presto-0.278","comment":"\/\/ instance and periodically recalculate the stats.","label":0,"id":406690}
{"project":"presto-0.278","comment":"\/\/ NOTE: this cursor implementation relies on the fact that the\/\/ cursor creation in the Iterable is lazy so DO NOT materialize this into\/\/ an ImmutableList","label":0,"id":406691}
{"project":"presto-0.278","comment":"\/\/ Delta table commits are periodically checkpointed into a parquet file.\/\/ Test Delta connector is able to read the checkpointed commits in a parquet file.\/\/ Test table has commit files (0-10) deleted. So it has to rely on reading the Parquet file\/\/ to fetch the files latest commit (i.e > 10).","label":0,"id":406692}
{"project":"presto-0.278","comment":"\/** * Consider using {@link #createStatement(String, ParsingOptions)} *\/","label":0,"id":406693}
{"project":"presto-0.278","comment":"\/\/ a set that is missing A ( say 2, 3) is false, but A in (2, 3, NULL) is NULL.","label":0,"id":406694}
{"project":"presto-0.278","comment":"\/**     * The partitioning of the table across the worker nodes.     * <p>     * If the table is node partitioned, the connector guarantees that each combination of values for     * the distributed columns will be contained within a single worker.     *\/","label":0,"id":406695}
{"project":"presto-0.278","comment":"\/\/ each value represents multiple filters - the long value has bits corresponding to filter","label":0,"id":406696}
{"project":"presto-0.278","comment":"\/\/ Note: The following implementation is thread-safe because whenFinishedOrNewLifespanAdded can only be completed","label":0,"id":406697}
{"project":"presto-0.278","comment":"\/**     * <tt>_message_corrupt<\/tt> - True if the row converter could not read the a message. May be null if the row converter does not set a value (e.g. the dummy row converter does not).     *\/","label":0,"id":406698}
{"project":"presto-0.278","comment":"\/\/ TODO: pushdownFilter for icebergLayout","label":1,"id":406699}
{"project":"presto-0.278","comment":"\/**     * Rewrite assignments so that outputs are in terms of the input symbols.     * This operation only reliably applies to aggregation steps that take partial inputs (e.g. INTERMEDIATE and split FINALs),     * which are guaranteed to have exactly one input and one output.     * <p>     * Example:     * 'a' := sum('b') => 'b' := sum('b')     *\/","label":0,"id":406700}
{"project":"presto-0.278","comment":"\/\/ TODO: if input is grouped, create streaming join\/\/ index side is really a nested-loops plan, so don't add exchanges","label":1,"id":406701}
{"project":"presto-0.278","comment":"\/\/ calculate the total memory size.","label":0,"id":406702}
{"project":"presto-0.278","comment":"\/\/ TODO: check that rendered plan is as expected, once stats are collected in a consistent way\/\/ assertTrue(value.contains(\"Cost: \"), format(\"Expected output to contain \\\"Cost: \\\", but it is %s\", value));","label":1,"id":406703}
{"project":"presto-0.278","comment":"\/\/ which may contain recently published splits. We must not ignore those.","label":0,"id":406704}
{"project":"presto-0.278","comment":"\/\/ Merge statistics from different streams\/\/ This can happen if map is represented as struct (DWRF only)","label":0,"id":406705}
{"project":"presto-0.278","comment":"\/\/ skip ahead the present bit reader, but count the set bits","label":0,"id":406706}
{"project":"presto-0.278","comment":"\/\/ TODO Fix arbitrary flush every 100k rows","label":1,"id":406707}
{"project":"presto-0.278","comment":"\/\/ Rewrite reference to LambdaArgumentDeclaration","label":0,"id":406708}
{"project":"presto-0.278","comment":"\/\/ nanos is reversed","label":0,"id":406709}
{"project":"presto-0.278","comment":"\/\/localhost:8080?SSL=0\", \"Connection property 'SSL' value is invalid: 0\");","label":0,"id":406710}
{"project":"presto-0.278","comment":"\/\/ \"SELECT * FROM nation WHERE nationkey NOT IN (2, 33, \" + Long.MAX_VALUE + \")\"","label":0,"id":406711}
{"project":"presto-0.278","comment":"\/\/ Single boolean column","label":0,"id":406712}
{"project":"presto-0.278","comment":"\/\/ second byte of the header stores the remaining 8 bits of run length","label":0,"id":406713}
{"project":"presto-0.278","comment":"\/**     * Returns the number of positions in this block.     *\/","label":0,"id":406714}
{"project":"presto-0.278","comment":"\/\/ This can happen if map is represented as struct (DWRF only)","label":0,"id":406715}
{"project":"presto-0.278","comment":"\/\/ Set maxFileSize to 1 byte, so adding any page makes the StoragePageSink full","label":0,"id":406716}
{"project":"presto-0.278","comment":"\/\/ start transaction and create table","label":0,"id":406717}
{"project":"presto-0.278","comment":"\/\/ This can leave out cases where they're both functions of some set of common expressions and the partitioning","label":0,"id":406718}
{"project":"presto-0.278","comment":"\/\/ blocked on first data source","label":0,"id":406719}
{"project":"presto-0.278","comment":"\/\/ Build a graph where the plan fragments are vertexes and the edges represent","label":0,"id":406720}
{"project":"presto-0.278","comment":"\/\/ Generate fields, constructor, and ensureCapacity","label":0,"id":406721}
{"project":"presto-0.278","comment":"\/\/ Split the filter into 3 groups of conjuncts:","label":0,"id":406722}
{"project":"presto-0.278","comment":"\/\/ Most of the time, mockSource.isFinished() returns the same value as\/\/ the SplitBatch.noMoreSplits field of the preceding mockSource.getNextBatch() call.\/\/ However, this is NOT always the case.\/\/ In this case, the preceding getNextBatch() indicates the noMoreSplits is false,\/\/ but the next isFinished call will return true.","label":0,"id":406723}
{"project":"presto-0.278","comment":"\/\/ Scan (bucketed on key)","label":0,"id":406724}
{"project":"presto-0.278","comment":"\/** * Enforce query scan physical bytes limits *\/","label":0,"id":406725}
{"project":"presto-0.278","comment":"\/\/ schema errors","label":0,"id":406726}
{"project":"presto-0.278","comment":"\/\/ In such case, we want to fail loudly.","label":0,"id":406727}
{"project":"presto-0.278","comment":"\/**     * A requested data conversion is not supported.     *\/","label":0,"id":406728}
{"project":"presto-0.278","comment":"\/\/ always use constant as the head","label":0,"id":406729}
{"project":"presto-0.278","comment":"\/\/ compare parsed tree with parsed tree of formatted SQL","label":0,"id":406730}
{"project":"presto-0.278","comment":"\/\/ verify error messages","label":0,"id":406731}
{"project":"presto-0.278","comment":"\/\/ Ignore metadata stats. Always enable rewrite.","label":0,"id":406732}
{"project":"presto-0.278","comment":"\/\/ missing key","label":0,"id":406733}
{"project":"presto-0.278","comment":"\/** * Choose a dictionary column to convert to direct encoding.  We do this by predicting the compression ratio * of the stripe if a singe column is flipped to direct.  So for each column, we try to predict the row count * when we will hit a stripe flush limit if that column were converted to direct.  Once we know the row count, we * calculate the predicted compression ratio. * * @param totalNonDictionaryBytes current size of the stripe without non-dictionary columns * @param stripeRowCount current number of rows in the stripe * @return the column that would produce the best stripe compression ratio if converted to direct *\/","label":0,"id":406734}
{"project":"presto-0.278","comment":"\/\/localhost:8080\", new Properties());","label":0,"id":406735}
{"project":"presto-0.278","comment":"\/** * Adds a split-up page to a specific partition.  If no-more-pages has been set, the enqueue * page call is ignored.  This can happen with limit queries. *\/","label":0,"id":406736}
{"project":"presto-0.278","comment":"\/** * REMOVE_SAFE_CONSTANTS strategy is used to canonicalize plan with * CONNECTOR strategy and will additionally remove constants from plan * which are not bound to have impact on plan statistics. * * This includes removing constants from ProjectNode, but keeps constants * in FilterNode since they can have major impact on plan statistics. * * For example: * `SELECT *, 1 FROM table` will be equivalent to `SELECT *, 2 FROM table` * `SELECT * FROM table WHERE id > 1` will NOT be equivalent to `SELECT * FROM table WHERE id > 1000` * * This is used in context of history based optimizations. *\/","label":0,"id":406737}
{"project":"presto-0.278","comment":"\/\/ Filter out 50% rows","label":0,"id":406738}
{"project":"presto-0.278","comment":"\/\/ TODO the expected values here are non-sensical due to https:\/\/github.com\/prestodb\/presto\/issues\/7122","label":1,"id":406739}
{"project":"presto-0.278","comment":"\/\/ doesn't have a local buffer. All non-leaf level StreamReaders' (e.g. MapStreamReader, LongStreamReader,","label":0,"id":406740}
{"project":"presto-0.278","comment":"\/\/ goal: shard4 add delta1","label":0,"id":406741}
{"project":"presto-0.278","comment":"\/\/ use null class loader on Java 8","label":0,"id":406742}
{"project":"presto-0.278","comment":"\/\/ Make sure the branch statement contains only one instruction, so that JVM can compile to a conditional move (cmov)","label":0,"id":406743}
{"project":"presto-0.278","comment":"\/\/ if value is true, the result is true","label":0,"id":406744}
{"project":"presto-0.278","comment":"\/\/ testNestedBlock(new ArrayType(new ArrayType(new ArrayType(INTEGER))));","label":0,"id":406745}
{"project":"presto-0.278","comment":"\/\/ maximum number of executions","label":0,"id":406746}
{"project":"presto-0.278","comment":"\/\/ this is to prevent waiting for state changes that will never occur","label":0,"id":406747}
{"project":"presto-0.278","comment":"\/\/ spec.","label":0,"id":406748}
{"project":"presto-0.278","comment":"\/\/ An optional group containing a repeated anonymous group \"map\", containing","label":0,"id":406749}
{"project":"presto-0.278","comment":"\/\/ colon in subscript must be quoted","label":0,"id":406750}
{"project":"presto-0.278","comment":"\/\/ Create lookup source with new data","label":0,"id":406751}
{"project":"presto-0.278","comment":"\/\/ within the range of the cache","label":0,"id":406752}
{"project":"presto-0.278","comment":"\/\/ streaming children","label":0,"id":406753}
{"project":"presto-0.278","comment":"\/* oops *\/","label":0,"id":406754}
{"project":"presto-0.278","comment":"\/\/ We use the OLD open source DWRF writer for tests which uses UTF-16be for string stats. These are widened by the our reader.","label":0,"id":406755}
{"project":"presto-0.278","comment":"\/\/ for example, 1) an AggregationOperator, 2) a HashAggregationOperator where one of the grouping sets is ().","label":0,"id":406756}
{"project":"presto-0.278","comment":"\/\/ TODO: we should account for the memory used for collecting build-side values using MemoryContext","label":1,"id":406757}
{"project":"presto-0.278","comment":"\/** * Drops pages up to the specified sequence id *\/","label":0,"id":406758}
{"project":"presto-0.278","comment":"\/\/ update all the elements in the heaps that reference the current page","label":0,"id":406759}
{"project":"presto-0.278","comment":"\/\/ getPositionsSizeInBytes with the assumption that constructing a","label":0,"id":406760}
{"project":"presto-0.278","comment":"\/\/ We have to duplicate the toString() call because super() won't allow anything else before it","label":0,"id":406761}
{"project":"presto-0.278","comment":"\/\/ We come here if for some reason the worker did not receive the fileName and it retried the request.","label":0,"id":406762}
{"project":"presto-0.278","comment":"\/\/ This a wrapper class around Configuration object, that creates a copy of Configuration object on write","label":0,"id":406763}
{"project":"presto-0.278","comment":"\/\/ For a subtree with root `node` to be a max closure, the following conditions must hold:","label":0,"id":406764}
{"project":"presto-0.278","comment":"\/\/ With grouping expression.","label":0,"id":406765}
{"project":"presto-0.278","comment":"\/\/ Encoding name is length prefixed as are other block data encodings","label":0,"id":406766}
{"project":"presto-0.278","comment":"\/\/ dereferencing this field is safe because the field is atomic","label":0,"id":406767}
{"project":"presto-0.278","comment":"\/\/192.0.3.2\"), new NodeVersion(\"2\"), false, false, true);","label":0,"id":406768}
{"project":"presto-0.278","comment":"\/**     * @return true when the current resource manager count is greater or equals to     * minimum resource manager count for Coordinator.     *\/","label":0,"id":406769}
{"project":"presto-0.278","comment":"\/\/ are no longer visible while processing aggregations.","label":0,"id":406770}
{"project":"presto-0.278","comment":"\/\/ Mapping from dynamic filter ID to its probe variables.","label":0,"id":406771}
{"project":"presto-0.278","comment":"\/**         * This method is meant for invoking the rewrite logic on children while processing a node         *\/","label":0,"id":406772}
{"project":"presto-0.278","comment":"\/\/ Window partition key is not a super set of join key.","label":0,"id":406773}
{"project":"presto-0.278","comment":"\/\/ Use TESTING_PAGE instead of TESTING_PAGE_WITH_NULL_BLOCK's logical size to estimate the output data size, because the null Block should not be sent over the wire.","label":0,"id":406774}
{"project":"presto-0.278","comment":"\/\/ should be anyTree(LINEITEM_TABLESCAN_DOQSS) but anyTree does not handle zero nodes case correctly","label":1,"id":406775}
{"project":"presto-0.278","comment":"\/\/ ******************* statements **********************","label":0,"id":406776}
{"project":"presto-0.278","comment":"\/\/ TODO: We decrypted data before filter projection. This could send unnecessary traffic to KMS. This so far not seen a problem in production.","label":1,"id":406777}
{"project":"presto-0.278","comment":"\/\/ TODO: remove when introducing nullable comparisons (<=, <, >, >=)","label":1,"id":406778}
{"project":"presto-0.278","comment":"\/\/ Asserting on `block` is not very effective because most blocks passed to this method is compact.","label":0,"id":406779}
{"project":"presto-0.278","comment":"\/\/ create new page builder if this page is full","label":0,"id":406780}
{"project":"presto-0.278","comment":"\/\/ a mbean is already installed, try to return the already registered instance","label":0,"id":406781}
{"project":"presto-0.278","comment":"\/\/ by using a single thread executor, we don't need to worry about locking to ensure only\/\/ one revocation request per-query\/memory pool is processed at a time.","label":0,"id":406782}
{"project":"presto-0.278","comment":"\/** * Optional method for the implementations to implement if they want to be informed about the finishing * of queries (either successfully or unsuccessfully). *\/","label":0,"id":406783}
{"project":"presto-0.278","comment":"\/\/ Write row type.","label":0,"id":406784}
{"project":"presto-0.278","comment":"\/\/ the write lock guarantees that no one is operating on the partitions, fileIterators, or hiveSplitSource, or half way through doing so.","label":0,"id":406785}
{"project":"presto-0.278","comment":"\/\/ Ensure that all blocks have the same positionCount","label":0,"id":406786}
{"project":"presto-0.278","comment":"\/\/ If the engine requests that the connector provides a layout with a domain of \"none\". The connector can have two possible reactions, either:\/\/ 1. The connector can provide an empty table layout.\/\/ * There would be no unenforced predicate, i.e., unenforced predicate is TupleDomain.all().\/\/ * The predicate was successfully enforced. Enforced predicate would be same as predicate: TupleDomain.none().\/\/ 2. The connector can't\/won't.\/\/ * The connector would tell the engine to put a filter on top of the scan, i.e., unenforced predicate is TupleDomain.none().\/\/ * The connector didn't successfully enforce anything. Therefore, enforced predicate would be TupleDomain.all().","label":0,"id":406787}
{"project":"presto-0.278","comment":"\/\/ Angle brackets here are checked not for the support of ARRAY<> and MAP<>","label":0,"id":406788}
{"project":"presto-0.278","comment":"\/\/ All deterministic conjuncts that contains non-inlining targets, and non-deterministic conjuncts,","label":0,"id":406789}
{"project":"presto-0.278","comment":"\/\/ TODO: purge retryable queries slower than normal ones","label":1,"id":406790}
{"project":"presto-0.278","comment":"\/** * Returns Optional.empty() if the column could not be translated *\/","label":0,"id":406791}
{"project":"presto-0.278","comment":"\/** * Provides the logical properties for a AssignUniqueId. Adds the id variable as a key. * * @param node * @return The logical properties for a AssignUniqueId. *\/","label":0,"id":406792}
{"project":"presto-0.278","comment":"\/\/ Enabling filter push down would extract partition column predicate from domainPredicate, which would\/\/ make partition column predicates irrelevant for canonical plan.","label":0,"id":406793}
{"project":"presto-0.278","comment":"\/\/ Regular nodes have only 1 ColumnStatistics in the ROW_INDEX, flattened nodes","label":0,"id":406794}
{"project":"presto-0.278","comment":"\/\/ Start new driver groups on the first scheduler if necessary,","label":0,"id":406795}
{"project":"presto-0.278","comment":"\/\/ no splits for empty buckets if zero row file is not created","label":0,"id":406796}
{"project":"presto-0.278","comment":"\/\/ We never access the native container for UNKNOWN because its null check is always true.","label":0,"id":406797}
{"project":"presto-0.278","comment":"\/\/ mappedScenario1.result 1","label":0,"id":406798}
{"project":"presto-0.278","comment":"\/\/ 10 points in polygon A (x0...x9)\/\/ 10 points in polygons A and B (y0...y9)\/\/ 10 points in polygon B (z0...z9)\/\/ 40 total matches","label":0,"id":406799}
{"project":"presto-0.278","comment":"\/\/ construct a simulator that will hit the dictionary (low) memory limit by estimating the number of rows at the memory limit, and then setting large limits around this value","label":0,"id":406800}
{"project":"presto-0.278","comment":"\/\/ add base to patched value","label":0,"id":406801}
{"project":"presto-0.278","comment":"\/\/ associated time durations with a query.","label":0,"id":406802}
{"project":"presto-0.278","comment":"\/**     * Iterate over position links. When there are no more position -1 is returned.     *\/","label":0,"id":406803}
{"project":"presto-0.278","comment":"\/\/ read all positions; extract selected positions","label":0,"id":406804}
{"project":"presto-0.278","comment":"\/** * <tt>_key<\/tt> - Represents the key as a text column. Format is UTF-8 which may be wrong for topics. TODO: make charset configurable. *\/","label":1,"id":406805}
{"project":"presto-0.278","comment":"\/\/ The timeout logic will set the timeout for the query as 605s (Actual timeout + waitTime)","label":0,"id":406806}
{"project":"presto-0.278","comment":"\/\/ We can support some columns having dictionary sharing while others don't, because dictionary sharing is only","label":0,"id":406807}
{"project":"presto-0.278","comment":"\/** * Print error to standard error and exit JVM. * * @apiNote A TestNG listener cannot throw an exception, as this are not currently properly handled by TestNG. *\/","label":0,"id":406808}
{"project":"presto-0.278","comment":"\/\/ We are given multiple routing tables for a table, each with different segment to host assignments","label":0,"id":406809}
{"project":"presto-0.278","comment":"\/** * This class encapsulates metadata regarding an Accumulo table in Presto. *\/","label":0,"id":406810}
{"project":"presto-0.278","comment":"\/\/ Repeat test on a DictionaryBlock over different content to make sure that cached results are not reused.","label":0,"id":406811}
{"project":"presto-0.278","comment":"\/** * Return a writer to the current entry. The caller can operate on the returned caller to incrementally build the object. This is generally more efficient than * building the object elsewhere and call writeObject afterwards because a large chunk of memory could potentially be unnecessarily copied in this process. *\/","label":0,"id":406812}
{"project":"presto-0.278","comment":"\/\/ alternatively use identity expression rowExpression(\"varchar\" + i, type) or\/\/ rowExpression(\"substr(varchar\" + i + \", 1, 1)\", type)","label":0,"id":406813}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to drop the specified role.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":406814}
{"project":"presto-0.278","comment":"\/** * Elements of {@code nulls} array determine if a value for a corresponding row is null. * Each elements of {@code sizes} array contains the length in bytes for the corresponding element. * If row is null then the corresponding element in {@code sizes} is ignored. * {@code bytes} array contains encoded byte values for HyperLogLog representation as defined in * Airlift specification: href=\"https:\/\/github.com\/airlift\/airlift\/blob\/master\/stats\/docs\/hll.md * Values for all rows are written to {@code bytes} array one after another. * The total number of bytes must be equal to the sum of all sizes. *\/","label":0,"id":406815}
{"project":"presto-0.278","comment":"\/\/ Bob needs SELECT on the table to create the view","label":0,"id":406816}
{"project":"presto-0.278","comment":"\/\/ missing closing `\"`","label":0,"id":406817}
{"project":"presto-0.278","comment":"\/\/ render with the fixed offset of the Presto server","label":0,"id":406818}
{"project":"presto-0.278","comment":"\/\/ For remote stage, pass identity projection for local parameters","label":0,"id":406819}
{"project":"presto-0.278","comment":"\/\/ read.  Therefore, we abort the existing read since it was most likely abandoned by the client.","label":0,"id":406820}
{"project":"presto-0.278","comment":"\/\/ determine the size of the currently written stripe if we were convert this column to direct","label":0,"id":406821}
{"project":"presto-0.278","comment":"\/\/ invariant:  values[order[k]] > pivotValue for k in [high..end)","label":0,"id":406822}
{"project":"presto-0.278","comment":"\/\/ Say if all values are less than 256 there is no space savings. Instead, it makes","label":0,"id":406823}
{"project":"presto-0.278","comment":"\/\/ it is not possible for the Presto Metadata system to create the handles","label":0,"id":406824}
{"project":"presto-0.278","comment":"\/\/ 4:15","label":0,"id":406825}
{"project":"presto-0.278","comment":"\/\/ seekKey() can take non-trivial time when key is complicated value, such as a long VARCHAR or ROW.","label":0,"id":406826}
{"project":"presto-0.278","comment":"\/\/ VARCHAR type will store the file handle, if present","label":0,"id":406827}
{"project":"presto-0.278","comment":"\/\/ second LIKE argument is:","label":0,"id":406828}
{"project":"presto-0.278","comment":"\/\/ TODO: include all equivalent columns in partitioning properties","label":1,"id":406829}
{"project":"presto-0.278","comment":"\/\/ get dataSource for table","label":0,"id":406830}
{"project":"presto-0.278","comment":"\/\/ Coercion on function type is not supported yet.","label":0,"id":406831}
{"project":"presto-0.278","comment":"\/\/ Only the positions for nested level need to be recycled.","label":0,"id":406832}
{"project":"presto-0.278","comment":"\/\/ if the stripe is larger than the minimum stripe size, we are not required to convert any more dictionary columns to direct","label":0,"id":406833}
{"project":"presto-0.278","comment":"\/**     * Notify buffer that no more pages will be added for the given lifespan.     * Any future calls to enqueue a page of that lifespan are ignored.     * @see OutputBuffer#setNoMorePages()     *\/","label":0,"id":406834}
{"project":"presto-0.278","comment":"\/** * Returns the top N rows from the source sorted according to the specified ordering in the keyChannelIndex channel. *\/","label":0,"id":406835}
{"project":"presto-0.278","comment":"\/**     * Get the upstream PlanNodes (i.e., children) of the current PlanNode.     *\/","label":0,"id":406836}
{"project":"presto-0.278","comment":"\/\/ check if only declared typeParameters and literalParameters are used","label":0,"id":406837}
{"project":"presto-0.278","comment":"\/\/ for the entire operation.  Therefore, split the inputs and operators by dimension, and then union","label":0,"id":406838}
{"project":"presto-0.278","comment":"\/** * Filter the list of schemas in a catalog to those visible to the identity. *\/","label":0,"id":406839}
{"project":"presto-0.278","comment":"\/\/ assertOptimizedEquals(\"case true \" +","label":0,"id":406840}
{"project":"presto-0.278","comment":"\/\/ iterator should fail if underlying work has yielded","label":0,"id":406841}
{"project":"presto-0.278","comment":"\/\/ Directly copy instead of building hashtable if providedHashTable is not null","label":0,"id":406842}
{"project":"presto-0.278","comment":"\/**     * @return the underlying rowIsNull array, or null when all rows are guaranteed to be non-null     *\/","label":0,"id":406843}
{"project":"presto-0.278","comment":"\/** * Returns an immutable set of all eight primitive-wrapper types * * @since 3.0 *\/","label":0,"id":406844}
{"project":"presto-0.278","comment":"\/\/ column is the logical columns index for a table with n columns","label":0,"id":406845}
{"project":"presto-0.278","comment":"\/\/ skip name and extra field","label":0,"id":406846}
{"project":"presto-0.278","comment":"\/\/ there were too many rows to collect min\/max range\/\/ dynamicPredicateConsumer was notified with 'all' in handleTooLargePredicate if there are no orderable types,\/\/ else it was notified with 'all' in handleMinMaxCollectionLimitExceeded","label":0,"id":406847}
{"project":"presto-0.278","comment":"\/\/ The current semantics returns NOT equal for millis and micros timestamp,\/\/ even though they represent the same time. (ex. same second, millis\/micros set to 0).","label":0,"id":406848}
{"project":"presto-0.278","comment":"\/** * Translates Presto type that is incompatible (cannot be stored in a Hive table) to a compatible type with the same physical layout. * This allows to store more data types in a Hive temporary table than the Hive permanent tables support. *\/","label":0,"id":406849}
{"project":"presto-0.278","comment":"\/** * Swaps the element of the given big array of specified indices. * * @param array a big array. * @param first a position in the big array. * @param second a position in the big array. *\/","label":0,"id":406850}
{"project":"presto-0.278","comment":"\/\/ NOTE: there is no need to acquire a lock here. The buffer is concurrent\/\/ and buffered bytes is not expected to be consistent with the buffer (only\/\/ best effort).","label":0,"id":406851}
{"project":"presto-0.278","comment":"\/\/ compare the result with original input","label":0,"id":406852}
{"project":"presto-0.278","comment":"\/\/ driverBlockedFuture will be completed as soon as the sourceBlockedFuture is completed","label":0,"id":406853}
{"project":"presto-0.278","comment":"\/\/ In this method, all operations are best-effort clean up operations.\/\/ If any operation fails, the error will be logged and ignored.\/\/ Additionally, other clean up operations should still be attempted.\/\/ Execute deletion tasks","label":0,"id":406854}
{"project":"presto-0.278","comment":"\/\/ replace shard assignment to another node","label":0,"id":406855}
{"project":"presto-0.278","comment":"\/**     * Provides partitioning handle for exchange.     *\/","label":0,"id":406856}
{"project":"presto-0.278","comment":"\/\/ TODO: extract to its own optimization after AddLocalExchanges once the","label":1,"id":406857}
{"project":"presto-0.278","comment":"\/\/ check if we have exceeded the global limit","label":0,"id":406858}
{"project":"presto-0.278","comment":"\/\/ INTEGER - DECIMAL","label":0,"id":406859}
{"project":"presto-0.278","comment":"\/\/ errors encountered while evaluating filter functions; indices are positions in the batch\/\/ of rows being processed by getNextPage (errors[outputPositions[i]] is valid)","label":0,"id":406860}
{"project":"presto-0.278","comment":"\/\/ if the argumentProperties is not set yet. We assume it is set to the default value.","label":0,"id":406861}
{"project":"presto-0.278","comment":"\/\/ fieldBlockOffsets is positionCount + 1 in length","label":0,"id":406862}
{"project":"presto-0.278","comment":"\/** * Dumps the inference equalities as equality expressions that are partitioned by the variableScope. * All stored equalities are returned in a compact set and will be classified into three groups as determined by the symbol scope: * <ol> * <li>equalities that fit entirely within the symbol scope<\/li> * <li>equalities that fit entirely outside of the symbol scope<\/li> * <li>equalities that straddle the symbol scope<\/li> * <\/ol> * <pre> * Example: *   Stored Equalities: *     a = b = c *     d = e = f = g * *   Symbol Scope: *     a, b, d, e * *   Output EqualityPartition: *     Scope Equalities: *       a = b *       d = e *     Complement Scope Equalities *       f = g *     Scope Straddling Equalities *       a = c *       d = f * <\/pre> *\/","label":0,"id":406863}
{"project":"presto-0.278","comment":"\/\/ Since this method is being called on all nodes in the cluster, we must ensure (by sorting)\/\/ that attributes are in the same order on all of them.","label":0,"id":406864}
{"project":"presto-0.278","comment":"\/**     * Query execution failed.     *\/","label":0,"id":406865}
{"project":"presto-0.278","comment":"\/\/ double and float","label":0,"id":406866}
{"project":"presto-0.278","comment":"\/\/ This covers also stats calculation for unpartitioned table","label":0,"id":406867}
{"project":"presto-0.278","comment":"\/**     * Compares the values at the specified positions.     *\/","label":0,"id":406868}
{"project":"presto-0.278","comment":"\/\/ To replace the JoinNode to MergeJoin ahead of AddLocalExchange to avoid adding extra local exchange","label":0,"id":406869}
{"project":"presto-0.278","comment":"\/\/ Let's not assume when PREPARE actually happens","label":0,"id":406870}
{"project":"presto-0.278","comment":"\/\/ modulus can be 0-7, and we excluded 0,1 already","label":0,"id":406871}
{"project":"presto-0.278","comment":"\/\/ skip null keys","label":0,"id":406872}
{"project":"presto-0.278","comment":"\/** * Connectors can use error codes starting at the range 0x0100_0000 * See https:\/\/github.com\/prestodb\/presto\/wiki\/Error-Codes * * @see com.facebook.presto.spi.StandardErrorCode *\/","label":0,"id":406873}
{"project":"presto-0.278","comment":"\/** * A snapshot of {@link LookupJoinOperator#joinPosition} \"de-partitioned\", i.e. {@link LookupJoinOperator#joinPosition} is a join position * with respect to (potentially) partitioned lookup source, while this value is a join position with respect to containing partition. *\/","label":0,"id":406874}
{"project":"presto-0.278","comment":"\/\/ the column value will be null\/\/ -> only isNull method will be called\/\/ -> the original filter will work just fine","label":0,"id":406875}
{"project":"presto-0.278","comment":"\/** * Renames the index tables (if applicable) for the old table to the new table. * * @param oldTable Old AccumuloTable * @param newTable New AccumuloTable *\/","label":0,"id":406876}
{"project":"presto-0.278","comment":"\/\/ table properties","label":0,"id":406877}
{"project":"presto-0.278","comment":"\/\/ initially the driverBlockedFuture is not blocked (it is completed)","label":0,"id":406878}
{"project":"presto-0.278","comment":"\/\/ we expect TupleDomain.all here().","label":0,"id":406879}
{"project":"presto-0.278","comment":"\/\/ column 3: MAP<INT, LIST<INT> \/\/ flat map","label":0,"id":406880}
{"project":"presto-0.278","comment":"\/**     * When {@link #canResolveFunction()} returns true, this function is called to resolve the function to a function handle.     * This is useful for plugins like Hive functions because the function resolution logic is defined with the function itself.     *\/","label":0,"id":406881}
{"project":"presto-0.278","comment":"\/\/ Initialize all entries to zero","label":0,"id":406882}
{"project":"presto-0.278","comment":"\/\/ node1 shard1 \/ node2 shard2 \/ node3 shard3\/\/ replace shard1 with two new shard","label":0,"id":406883}
{"project":"presto-0.278","comment":"\/\/ if we can get the lock, attempt a clean shutdown; otherwise someone else will shutdown","label":0,"id":406884}
{"project":"presto-0.278","comment":"\/\/ Must run before AddExchanges","label":0,"id":406885}
{"project":"presto-0.278","comment":"\/\/ 3. Update shard and delta relationship","label":0,"id":406886}
{"project":"presto-0.278","comment":"\/\/ If the first row and last row are both not null,","label":0,"id":406887}
{"project":"presto-0.278","comment":"\/\/ - if not same, then convert the literal time type to the field time type.","label":0,"id":406888}
{"project":"presto-0.278","comment":"\/**     * Helper function to add an aggregation to the aggregation map builder.     *\/","label":0,"id":406889}
{"project":"presto-0.278","comment":"\/** * 10^18 fits in 2^63. *\/","label":0,"id":406890}
{"project":"presto-0.278","comment":"\/** * Perform a sanity check to make sure that the year is reasonably current, to guard against * issues in third party libraries. *\/","label":0,"id":406891}
{"project":"presto-0.278","comment":"\/\/ CPU Time: 56.5s total, 36.4K rows\/s, 4.44MB\/s, 60% active","label":0,"id":406892}
{"project":"presto-0.278","comment":"\/\/ todo add a dummy resource to airlift jaxrs in this case","label":1,"id":406893}
{"project":"presto-0.278","comment":"\/\/ there is no way to induce finishing time without a transaction and connector","label":0,"id":406894}
{"project":"presto-0.278","comment":"\/\/ configuration is done using Hadoop configuration files","label":0,"id":406895}
{"project":"presto-0.278","comment":"\/\/ There should be exactly one column","label":0,"id":406896}
{"project":"presto-0.278","comment":"\/\/ We can use either the getRegionSizeInBytes or getPositionsSizeInBytes","label":0,"id":406897}
{"project":"presto-0.278","comment":"\/\/ Below first","label":0,"id":406898}
{"project":"presto-0.278","comment":"\/\/ expose it in the document. Here we skip it if it's present.","label":0,"id":406899}
{"project":"presto-0.278","comment":"\/\/ observe submitted before getting the state, to ensure a failed query stat is visible","label":0,"id":406900}
{"project":"presto-0.278","comment":"\/\/ ActualProperties, so we hold on to the whole object","label":0,"id":406901}
{"project":"presto-0.278","comment":"\/\/ Values in weird order","label":0,"id":406902}
{"project":"presto-0.278","comment":"\/\/ bigint, short decimal","label":0,"id":406903}
{"project":"presto-0.278","comment":"\/** * The class is a pointer to a row in a page. * The actual position in the page is mutable because as pages are compacted, the position will change. *\/","label":0,"id":406904}
{"project":"presto-0.278","comment":"\/\/ make sure we have all 4 entries","label":0,"id":406905}
{"project":"presto-0.278","comment":"\/\/ For example: when we have a plan that looks like:","label":0,"id":406906}
{"project":"presto-0.278","comment":"\/**     * True if the column should be hidden.     *\/","label":0,"id":406907}
{"project":"presto-0.278","comment":"\/**     * Returns a projected version of this key.     * Variables in the key are mapped to output variables in the context beyond the project operation.     * If a key attribute does not have an assignment in the new attribute context, it is mapped to the assignment of     * an equivalent attribute whenever possible. For example, assume A is a key attribute and there is no new assignment     * for A. Assume further that A and B are in the same equivalence class and there is an assignment from B to B\u2019.     * Consequently, A can be assigned to B' rather than get projected. If any of the variables are not mapped then an     * empty result is returned signaling that the key is effectively uninteresting beyond the project operation and hence is not propagated.     *     * @param inverseVariableMappings     * @return A projected version of this key or empty if any variables are not propagated.     *\/","label":0,"id":406908}
{"project":"presto-0.278","comment":"\/\/ methods below are not used for the test","label":0,"id":406909}
{"project":"presto-0.278","comment":"\/\/ insert session argument","label":0,"id":406910}
{"project":"presto-0.278","comment":"\/\/ B,D is swapped, resulting in D,B,A,C, then B and A are in correct order, lastly A and C is swapped resulting in","label":0,"id":406911}
{"project":"presto-0.278","comment":"\/\/ the leak detector should report exactly one leaked query since the coordinator doesn't know of any query","label":1,"id":406912}
{"project":"presto-0.278","comment":"\/** * Canonicalize the plan, and return statistics of input tables. Output order is consistent with * plan canonicalization. * @param session Session for query being run * @param planNode Plan node to hash * @return Statistics of leaf input tables to plan node, ordered by a consistent canonicalization strategy. *\/","label":0,"id":406913}
{"project":"presto-0.278","comment":"\/\/ predicate consist of the bigint_0 = 1234","label":0,"id":406914}
{"project":"presto-0.278","comment":"\/** * Pushes RemoteExchange node down through GroupId node when GroupId node contains non-empty * set of common grouping columns. * * As an example this rule will change following plan * Aggregation [final] *   - RemoteExchange [repartition] *     - Aggregation [partial] *       - GroupId *         - TableScan * To * Aggregation *   - GroupId *     - RemoteExchange [repartition] *       - TableScan * * We can leverage this optimization rule to rewrite plan to be more efficient * if following conditions are true: * * 1. There are large number of grouping sets in query. * 2. Partial aggregation reduction ratio is not great. * 3. There is least one common grouping key among grouping sets. * * Note: This rule is disabled by default. Session property * PUSH_REMOTE_EXCHANGE_THROUGH_GROUP_ID can be used to enable it. *\/","label":0,"id":406915}
{"project":"presto-0.278","comment":"\/\/ 100th percentile is used to compute the max patch width","label":0,"id":406916}
{"project":"presto-0.278","comment":"\/** * targetPath and writePath will be root directory of all partition and table paths * that may be returned by {@link #getTableWriteInfo(LocationHandle)} and {@link #getPartitionWriteInfo(LocationHandle, Optional, String)} method. *\/","label":0,"id":406917}
{"project":"presto-0.278","comment":"\/\/ Intuition is: get the stored hashes' density, and extrapolate to the whole Hash output range.","label":0,"id":406918}
{"project":"presto-0.278","comment":"\/\/ Accumulate pending positions for small pages","label":0,"id":406919}
{"project":"presto-0.278","comment":"\/\/ have splits to be considered for running on a thread).","label":0,"id":406920}
{"project":"presto-0.278","comment":"\/\/ if partitioning columns are not a subset of grouping keys,","label":0,"id":406921}
{"project":"presto-0.278","comment":"\/\/ Test for https:\/\/github.com\/prestodb\/presto\/issues\/7496\/\/ Cast varchar(1) -> varchar(4) for orderstatus in first source of union was not added. It was not done for type-only coercions.\/\/ Then as a result of predicate pushdown orderstatus (without cast) was compared with CAST('aaa' AS varchar(4)) which trigger checkArgument that\/\/ both types of comparison should be equal in DomainTranslator.","label":0,"id":406922}
{"project":"presto-0.278","comment":"\/**     * It writes the field value to the Parquet RecordConsumer. It detects the field type, and calls     * the correct write function.     *     * @param value The writable object that contains the value.     * @param inspector The object inspector used to get the correct value type.     * @param type Type that contains information about the type schema.     *\/","label":0,"id":406923}
{"project":"presto-0.278","comment":"\/\/ were a duplicate notification, which shouldn't happen","label":0,"id":406924}
{"project":"presto-0.278","comment":"\/\/ we need to come back to solve the problem.","label":0,"id":406925}
{"project":"presto-0.278","comment":"\/\/ This assertAggregation does not try to split up the page to test the correctness of combine function.","label":0,"id":406926}
{"project":"presto-0.278","comment":"\/\/ and are directly mapped to some other base table which is not on outer join side.","label":0,"id":406927}
{"project":"presto-0.278","comment":"\/\/ abort that buffer, and verify the future is complete and buffer is finished","label":0,"id":406928}
{"project":"presto-0.278","comment":"\/\/ if a node has been updated, it will occur in `updates`; otherwise, just use the original node","label":0,"id":406929}
{"project":"presto-0.278","comment":"\/\/ will be needed instead of creating a new trace here.","label":0,"id":406930}
{"project":"presto-0.278","comment":"\/\/ If so, create a mutation using the following mapping:\/\/ Row ID = column value\/\/ Column Family = columnqualifier_columnfamily\/\/ Column Qualifier = row ID\/\/ Value = empty","label":0,"id":406931}
{"project":"presto-0.278","comment":"\/\/ The output buffer depends on the task id starting from 0 and being sequential, since each\/\/ task is assigned a private buffer based on task id.","label":0,"id":406932}
{"project":"presto-0.278","comment":"\/\/ Scale Functions","label":0,"id":406933}
{"project":"presto-0.278","comment":"\/** * Runs during both logical and physical phases of connector-aided plan optimization. * In most cases filter pushdown will occur during logical phase. However, in cases * when new filter is added between logical and physical phases, e.g. a filter on a join * key from one side of a join is added to the other side, the new filter will get * merged with the one already pushed down. *\/","label":0,"id":406934}
{"project":"presto-0.278","comment":"\/\/ we cannot convert to disjunctive form because nd is non-deterministic","label":0,"id":406935}
{"project":"presto-0.278","comment":"\/**     * Similar to `mappedBaseColumns`, but ignores EQ clauses from outer joins.     * <p>     * For example, given SELECT column_a FROM table_a LEFT JOIN table_b ON (table_a.column_a = table_b.column_b),     * produces no mappings.     * <\/p>     *\/","label":0,"id":406936}
{"project":"presto-0.278","comment":"\/\/ Too short, casted back would be padded with ' ' and thus made greater (VarcharOperators.lessThan), so last character needs decrementing","label":0,"id":406937}
{"project":"presto-0.278","comment":"\/\/ TODO migrate this to RowExpressionMatcher","label":1,"id":406938}
{"project":"presto-0.278","comment":"\/\/ Avoid extending ParsingException due to cost of filling in a stacktrace on creation","label":0,"id":406939}
{"project":"presto-0.278","comment":"\/\/ Just return a sample table name, which is always same","label":0,"id":406940}
{"project":"presto-0.278","comment":"\/\/ node1 shard1 shard4\/\/ node2 shard2\/\/ node3 shard3\/\/ goal: shard4 add delta1\/\/ Initial data","label":0,"id":406941}
{"project":"presto-0.278","comment":"\/\/ delete any file that starts or ends with the query ID","label":0,"id":406942}
{"project":"presto-0.278","comment":"\/\/ We need to check for that specifically\/\/ Otherwise calculating the bearing is not deterministic","label":0,"id":406943}
{"project":"presto-0.278","comment":"\/\/ Randomize in [T\/2, T], so wait is not near zero and the client-supplied max wait time is respected","label":0,"id":406944}
{"project":"presto-0.278","comment":"\/\/ Create a cache, instead of a LoadingCache, because we can load multiple keys at once.\/\/ For weight, we only consider size of hash, as PlanNodes are already in memory for running queries.\/\/ We use length of hash + 20 bytes as overhead for storing references, string size and strategy.","label":0,"id":406945}
{"project":"presto-0.278","comment":"\/\/ The equals implementation is not atomic. So  this can remove","label":0,"id":406946}
{"project":"presto-0.278","comment":"\/** * Stage tasks are being scheduled on nodes. *\/","label":0,"id":406947}
{"project":"presto-0.278","comment":"\/\/ however, to get the correct size we'd need to make an additional request to get","label":0,"id":406948}
{"project":"presto-0.278","comment":"\/**         * Sets a catalog property for the session.  The property name and value must         * only contain characters from US-ASCII and must not be for '='.         *\/","label":0,"id":406949}
{"project":"presto-0.278","comment":"\/\/ do not prune nested joins output since it is not supported\/\/ TODO: remove this \"if\" branch when output symbols selection is supported by nested loop join","label":1,"id":406950}
{"project":"presto-0.278","comment":"\/\/uri\"), new ResourceGroupId(\"test\"), Optional.empty(), false, transactionManager, accessControl, executorService, metadata, WarningCollector.NOOP);","label":0,"id":406951}
{"project":"presto-0.278","comment":"\/**     * Union the set by adding the elements of the block, eliminating duplicates.     *\/","label":0,"id":406952}
{"project":"presto-0.278","comment":"\/** * Ensures the given Accumulo namespace exist, creating it if necessary * * @param schema Presto schema (Accumulo namespace) *\/","label":0,"id":406953}
{"project":"presto-0.278","comment":"\/\/ verify the futures are completed","label":0,"id":406954}
{"project":"presto-0.278","comment":"\/\/ range spans two days, return the day that has the larger time range","label":0,"id":406955}
{"project":"presto-0.278","comment":"\/\/ add initial pages","label":0,"id":406956}
{"project":"presto-0.278","comment":"\/\/ Load constants","label":0,"id":406957}
{"project":"presto-0.278","comment":"\/\/ test addPage","label":0,"id":406958}
{"project":"presto-0.278","comment":"\/\/ if there is no key value separator, the key is all the data and the value is null","label":0,"id":406959}
{"project":"presto-0.278","comment":"\/\/ test failure case","label":0,"id":406960}
{"project":"presto-0.278","comment":"\/\/ (i.e. AbstractVariableWidthBlock.hash(...))","label":0,"id":406961}
{"project":"presto-0.278","comment":"\/\/ whole segment","label":0,"id":406962}
{"project":"presto-0.278","comment":"\/\/ Jayway will respect Jackson mappings as provided in the configuration and return a JsonNode for simple cases.\/\/ But for JsonPath functions ($.avg, ...), it will return a Java boxed type (Double, String etc.) instead\/\/ of a properly formed JsonNode. This is why we need to re-create a JsonNode in that case","label":0,"id":406963}
{"project":"presto-0.278","comment":"\/\/ The ordering is critical because the stream only contain a length with no offset.\/\/ if the previous stream was part of a different encryption group, need to specify an offset so we know the column order","label":0,"id":406964}
{"project":"presto-0.278","comment":"\/\/ add corner cases for parametrized types","label":0,"id":406965}
{"project":"presto-0.278","comment":"\/\/\/\/ Table Writer\/\/","label":0,"id":406966}
{"project":"presto-0.278","comment":"\/\/ wait for a grace period to start the shutdown sequence","label":0,"id":406967}
{"project":"presto-0.278","comment":"\/\/ Multiple partition updates for a single partition are produced when writing into a bucketed table.","label":0,"id":406968}
{"project":"presto-0.278","comment":"\/\/ Creates 10 pages with 10 rows each","label":0,"id":406969}
{"project":"presto-0.278","comment":"\/**     * Read the end of central directory record from the input stream and parse {@link ZipFileData}     * from it.     *\/","label":0,"id":406970}
{"project":"presto-0.278","comment":"\/\/ Setting the flag as false since TaskUpdateRequest is not on thrift yet.","label":0,"id":406971}
{"project":"presto-0.278","comment":"\/\/ Handle limit query","label":0,"id":406972}
{"project":"presto-0.278","comment":"\/\/ Restore the state to the best valid parse.","label":0,"id":406973}
{"project":"presto-0.278","comment":"\/\/\");","label":0,"id":406974}
{"project":"presto-0.278","comment":"\/\/ to simplify the testing:","label":0,"id":406975}
{"project":"presto-0.278","comment":"\/** * The default behavior to perform when visiting a PlanNode *\/","label":0,"id":406976}
{"project":"presto-0.278","comment":"\/\/ Validate the DDL is something we can handle","label":0,"id":406977}
{"project":"presto-0.278","comment":"\/**     * Whether this node corresponds to a DISTINCT operation in SQL     *\/","label":0,"id":406978}
{"project":"presto-0.278","comment":"\/\/ Should not be rate limited when allowing 100\/s, using 6 seconds to avoid flakiness","label":0,"id":406979}
{"project":"presto-0.278","comment":"\/\/ CREATE TABLE AS SELECT partitioned table, or","label":0,"id":406980}
{"project":"presto-0.278","comment":"\/\/ %V Week (01..53), where Sunday is the first day of the week; used with %X","label":0,"id":406981}
{"project":"presto-0.278","comment":"\/\/ Note that different drivers in a task may have different pipelineExecutionStrategy.","label":0,"id":406982}
{"project":"presto-0.278","comment":"\/\/ clause separately because stats estimates would be way off. Instead we choose so called","label":0,"id":406983}
{"project":"presto-0.278","comment":"\/\/ and throwing away totally disjoint ones is cheap (envelope check),","label":0,"id":406984}
{"project":"presto-0.278","comment":"\/\/ whereas for the STRING type decoders are optional","label":0,"id":406985}
{"project":"presto-0.278","comment":"\/\/ Overwriting an existing partition","label":0,"id":406986}
{"project":"presto-0.278","comment":"\/\/ * `splitSource.isFinished` invocation may fail after `splitSource.close` has been invoked.\/\/ If state is NO_MORE_SPLITS\/FINISHED, splitSource.isFinished has previously returned true, and splitSource is closed now.\/\/ * Even if `splitSource.isFinished()` return true, it is not necessarily safe to tear down the split source.\/\/ * If anyBlockedOnNextSplitBatch is true, it means we have not checked out the recently completed nextSplitBatch futures,\/\/ which may contain recently published splits. We must not ignore those.\/\/ * If any scheduleGroup is still in DISCOVERING_SPLITS state, it means it hasn't realized that there will be no more splits.\/\/ Next time it invokes getNextBatch, it will realize that. However, the invocation will fail we tear down splitSource now.\/\/\/\/ Since grouped execution is going to support failure recovery, and scheduled splits might have to be rescheduled during retry,\/\/ we can no longer claim schedule is complete after all splits are scheduled.\/\/ Splits schedule can only be considered as finished when all lifespan executions are done\/\/ (by calling `notifyAllLifespansFinishedExecution`)","label":0,"id":406987}
{"project":"presto-0.278","comment":"\/\/ Since SetBuilderOperator doesn't produce any output, the getOutput()","label":0,"id":406988}
{"project":"presto-0.278","comment":"\/\/ If we have seen the expression before and if it is deterministic","label":0,"id":406989}
{"project":"presto-0.278","comment":"\/**     * Powers of 10 which can be represented exactly in float.     *\/","label":0,"id":406990}
{"project":"presto-0.278","comment":"\/\/ estimate is a way to understand how many bytes would be required, if it was encoded","label":0,"id":406991}
{"project":"presto-0.278","comment":"\/\/ MergeJoinOptimizer can avoid the local exchange for a join operation\/\/ Should be placed after AddExchanges, but before AddLocalExchange\/\/ To replace the JoinNode to MergeJoin ahead of AddLocalExchange to avoid adding extra local exchange","label":0,"id":406992}
{"project":"presto-0.278","comment":"\/**     * Calculate the row sizes in bytes and write them to serializedRowSizes.     *\/","label":0,"id":406993}
{"project":"presto-0.278","comment":"\/\/ count in subquery","label":0,"id":406994}
{"project":"presto-0.278","comment":"\/\/ transform streams to OrcInputStream","label":0,"id":406995}
{"project":"presto-0.278","comment":"\/\/ read each interface name","label":0,"id":406996}
{"project":"presto-0.278","comment":"\/** * Converts a sortable long to double. * * @see #sortableLongToDouble(long) *\/","label":0,"id":406997}
{"project":"presto-0.278","comment":"\/\/ delete files marked earlier than the clean interval","label":0,"id":406998}
{"project":"presto-0.278","comment":"\/\/ block thread in operator close","label":0,"id":406999}
{"project":"presto-0.278","comment":"\/** * Gets the Timestamp value of the given Presto column. * * @param name Column name * @return Timestamp value *\/","label":0,"id":407000}
{"project":"presto-0.278","comment":"\/\/ if we are partitioned on empty set, we must say multiple of unknown partitioning, because","label":0,"id":407001}
{"project":"presto-0.278","comment":"\/\/ p_varchar = 'p3', p_bigint = BIGINT '8'","label":0,"id":407002}
{"project":"presto-0.278","comment":"\/\/ TODO if jdbcExpression is not present, walk through translated subtree to find out which parts can be pushed down","label":1,"id":407003}
{"project":"presto-0.278","comment":"\/** * Represents a provable maximum number of rows in a final or intermediate result by a PlanNode. * For example if a unique key is fully bound to constants by predicates the maxcard property * can be set to one. A limit or top operation might set maxcard to the value of their count argument. * The value is unknown until determined and set. *\/","label":0,"id":407004}
{"project":"presto-0.278","comment":"\/**     * Logical properties are a function of source properties and the operation performed by the plan node     *\/","label":0,"id":407005}
{"project":"presto-0.278","comment":"\/\/ step backwards through string","label":0,"id":407006}
{"project":"presto-0.278","comment":"\/\/ Sleep for the polling duration to allow concurrent tasks to run for this time","label":0,"id":407007}
{"project":"presto-0.278","comment":"\/\/ For Parquet","label":0,"id":407008}
{"project":"presto-0.278","comment":"\/\/ Now if we fetch any or both of them, they should hit the cache","label":0,"id":407009}
{"project":"presto-0.278","comment":"\/**     * Truncates the specified table     *\/","label":0,"id":407010}
{"project":"presto-0.278","comment":"\/\/ does slice contain escape byte","label":0,"id":407011}
{"project":"presto-0.278","comment":"\/\/ Prune (Only examine output expressions that have been referenced)","label":0,"id":407012}
{"project":"presto-0.278","comment":"\/\/ local merge source must have a single driver","label":0,"id":407013}
{"project":"presto-0.278","comment":"\/\/ argument count limit","label":0,"id":407014}
{"project":"presto-0.278","comment":"\/* not 3 *\/","label":0,"id":407015}
{"project":"presto-0.278","comment":"\/\/ sort partitions","label":0,"id":407016}
{"project":"presto-0.278","comment":"\/\/ 10 means 1 - 10\/1000 = 99\/100 positions will be filtered out","label":0,"id":407017}
{"project":"presto-0.278","comment":"\/** * Operator accepts input *\/","label":0,"id":407018}
{"project":"presto-0.278","comment":"\/\/ Skip locations which are only shallower than this level","label":0,"id":407019}
{"project":"presto-0.278","comment":"\/\/proxy.presto.fbinfra.net:7778?SSL=true&SSLTrustStorePath=trust-store&SSLKeyStorePath=key-store\", \"jdbc:presto:\/\/proxy2.presto.fbinfra.net:7778?SSL=true&SSLTrustStorePath=trust-store&SSLKeyStorePath=key-store\"));","label":0,"id":407020}
{"project":"presto-0.278","comment":"\/\/ Then get the value for this range using the single-value cache lookup","label":0,"id":407021}
{"project":"presto-0.278","comment":"\/**     * Optimize a RowExpression to     *\/","label":0,"id":407022}
{"project":"presto-0.278","comment":"\/\/ TODO: Remove when we fix intermediate types on aggregations.","label":1,"id":407023}
{"project":"presto-0.278","comment":"\/\/ value match","label":0,"id":407024}
{"project":"presto-0.278","comment":"\/\/ (or there is a duplicate column in the table DDL, which is also an issue but has been checked before in validateColumns).","label":0,"id":407025}
{"project":"presto-0.278","comment":"\/\/ As a result, when `definitionReturnsNullable` is false, the function","label":0,"id":407026}
{"project":"presto-0.278","comment":"\/\/ Session zone could have policy change on\/around 1970-01-01, so we cannot use UTC","label":0,"id":407027}
{"project":"presto-0.278","comment":"\/\/ building channel info","label":0,"id":407028}
{"project":"presto-0.278","comment":"\/** * Returns a subset of conjuncts matching one the following shapes: * - ST_Distance(...) <= ... * - ST_Distance(...) < ... * - ... >= ST_Distance(...) * - ... > ST_Distance(...) * <p> * Doesn't check or guarantee anything about ST_Distance functions arguments * or the other side of the comparison. *\/","label":0,"id":407029}
{"project":"presto-0.278","comment":"\/\/ != and NOT IN filters should return true when applied to NaN\/\/ E.g. NaN != 1.0 as well as NaN NOT IN (1.0, 2.5, 3.6) should return true; otherwise false.","label":0,"id":407030}
{"project":"presto-0.278","comment":"\/\/ Row(LongArrayBlock, LongArrayBlock)","label":0,"id":407031}
{"project":"presto-0.278","comment":"\/\/ account memory used by values, nulls and outputPositions","label":0,"id":407032}
{"project":"presto-0.278","comment":"\/\/ Optimal order of stream readers\/\/ elements are indices into hiveColumnIndices array","label":0,"id":407033}
{"project":"presto-0.278","comment":"\/\/ break early for delta overflows or for shorter runs","label":0,"id":407034}
{"project":"presto-0.278","comment":"\/\/ _to_ row sort channel value might be null. However, in such\/\/ case it will be the only element in the chain, so sorted position\/\/ links enumeration will produce correct results.","label":0,"id":407035}
{"project":"presto-0.278","comment":"\/**     * Add streams that are in includedOrcColumns to the includedStreams map,     * and return whether there were any rowGroupDictionaries     *\/","label":0,"id":407036}
{"project":"presto-0.278","comment":"\/\/ This method is left unimplemented since it is not invoked from anywhere within code.","label":0,"id":407037}
{"project":"presto-0.278","comment":"\/\/ version byte +\/\/ maxSize + hllBuckets + minhashSize + totalHllSize +\/\/ minhash keys + individual HLL sizes +\/\/ HLLs size sum","label":0,"id":407038}
{"project":"presto-0.278","comment":"\/\/ offset 1","label":0,"id":407039}
{"project":"presto-0.278","comment":"\/\/ Avro only supports String for Map keys, and doesn't support smallint or tinyint.","label":0,"id":407040}
{"project":"presto-0.278","comment":"\/\/ number of values for the complex value types","label":0,"id":407041}
{"project":"presto-0.278","comment":"\/\/ create a generic long function that yields for projection on every row\/\/ verify we will yield #row times totally\/\/ create a table with 15 rows","label":0,"id":407042}
{"project":"presto-0.278","comment":"\/\/ constant == variable","label":0,"id":407043}
{"project":"presto-0.278","comment":"\/\/ group by output","label":0,"id":407044}
{"project":"presto-0.278","comment":"\/\/ Let's say there are 10 splits left, and max number of splits per batch is 5.","label":0,"id":407045}
{"project":"presto-0.278","comment":"\/\/ ReorderJoins can move predicates between `criteria` and `filters`, so we put all equalities","label":0,"id":407046}
{"project":"presto-0.278","comment":"\/**     * A general purpose utility function to invoke runtime cost-based optimizer.     * (right now there is only one plan optimizer which determines if the probe and build side of a JoinNode should be swapped     * based on the statistics of the temporary table holding materialized exchange outputs from finished children sections)     *\/","label":0,"id":407047}
{"project":"presto-0.278","comment":"\/\/ one UDF services is with grpc protocol and the other is thrift;","label":0,"id":407048}
{"project":"presto-0.278","comment":"\/\/ Both sides cut unknownRange","label":0,"id":407049}
{"project":"presto-0.278","comment":"\/** * Converts a double value to a sortable long. The value is converted by getting their IEEE 754 * floating-point bit layout. Some bits are swapped to be able to compare the result as long. *\/","label":0,"id":407050}
{"project":"presto-0.278","comment":"\/\/ metrics is a mapping of row ID to column family","label":0,"id":407051}
{"project":"presto-0.278","comment":"\/** * Creates the preferred block builder for this type. This is the builder used to * store values after an expression projection within the query. *\/","label":0,"id":407052}
{"project":"presto-0.278","comment":"\/\/ Each rowgroup has roughly 10K rows, and each batch reads 1K rows. So there're about 10 batches in a rowgroup.","label":0,"id":407053}
{"project":"presto-0.278","comment":"\/\/ End of Text","label":0,"id":407054}
{"project":"presto-0.278","comment":"\/\/ the timezone of the session is Pacific\/Apia UTC+13","label":0,"id":407055}
{"project":"presto-0.278","comment":"\/**     * Stripe index streams slices by the stripe offset.     *\/","label":0,"id":407056}
{"project":"presto-0.278","comment":"\/\/ namespace_one shouldn't be visible on branchTwo","label":0,"id":407057}
{"project":"presto-0.278","comment":"\/\/ Separate first warnings from previous output","label":0,"id":407058}
{"project":"presto-0.278","comment":"\/\/ This class is Forked from class org.apache.hive.common.util.BloomFilter from the com.facebook.presto.hive:hive-apache","label":0,"id":407059}
{"project":"presto-0.278","comment":"\/**     * Add a single trace point with current time to the main block     * @param annotation message associated with the trace point     *\/","label":0,"id":407060}
{"project":"presto-0.278","comment":"\/** * This method should be called before {@link #appendAtChannel(int, Block, int)} to update the internal linked list, where * {@link #appendAtChannel(int, Block, int)} is called for each channel that has a new entry to be added. *\/","label":0,"id":407061}
{"project":"presto-0.278","comment":"\/\/ Recursively sort non-partition-elements","label":0,"id":407062}
{"project":"presto-0.278","comment":"\/\/ 1. Row count (BIGINT)","label":0,"id":407063}
{"project":"presto-0.278","comment":"\/\/ Be aware of the CallExpression handling.","label":0,"id":407064}
{"project":"presto-0.278","comment":"\/\/ data to it, and exported it through metastore. Therefore it may be argued that cleanup of staging","label":0,"id":407065}
{"project":"presto-0.278","comment":"\/\/ turn this into a query that has a new table writer node on top.","label":0,"id":407066}
{"project":"presto-0.278","comment":"\/**     * Finds the closest available fixed bit width match and returns its encoded     * value (ordinal)     *     * @param n - fixed bit width to encode     * @return encoded fixed bit width     *\/","label":0,"id":407067}
{"project":"presto-0.278","comment":"\/\/ Complex types should return null","label":0,"id":407068}
{"project":"presto-0.278","comment":"\/\/ 1 byte to denote if null + 4 bytes for the value (date is of integer type)","label":0,"id":407069}
{"project":"presto-0.278","comment":"\/\/ TestNG may or may not propagate listener's exception as test execution exception.","label":0,"id":407070}
{"project":"presto-0.278","comment":"\/** * @note If count is negative, the value of the aggregation will be null; if * count is 0, this is a no-op (since, in the context of entropy, 0 log(0) = 0; if count is null, * this is a no op. *\/","label":0,"id":407071}
{"project":"presto-0.278","comment":"\/\/ Will merge the BitSet from oldDeltaDeleteShardUuid to rowsToDelete","label":0,"id":407072}
{"project":"presto-0.278","comment":"\/\/ replaces invalid UTF-8 sequences with the unicode replacement character.  This can cause the min value to be","label":0,"id":407073}
{"project":"presto-0.278","comment":"\/\/ Test newBlockBuilderLike with expectedEntries","label":0,"id":407074}
{"project":"presto-0.278","comment":"\/\/ So with or without precise memory accounting, the output page is small anyway.","label":0,"id":407075}
{"project":"presto-0.278","comment":"\/\/ memoryManager should still return a blocked future as the buffer is still full","label":0,"id":407076}
{"project":"presto-0.278","comment":"\/\/ orders is effectively distributed on order key due the","label":0,"id":407077}
{"project":"presto-0.278","comment":"\/\/ replace qualified names with input references since row expressions do not support these","label":0,"id":407078}
{"project":"presto-0.278","comment":"\/\/ else use delta encoding","label":0,"id":407079}
{"project":"presto-0.278","comment":"\/\/ delete local file to force restore","label":0,"id":407080}
{"project":"presto-0.278","comment":"\/\/ MergeJoinOptimizer can avoid the local exchange for a join operation","label":0,"id":407081}
{"project":"presto-0.278","comment":"\/**     * Gets a Boolean value indicating whether or not the Presto column is a null value.     *     * @param name Column name     * @return True if null, false otherwise.     *\/","label":0,"id":407082}
{"project":"presto-0.278","comment":"\/\/ We work around that by using a dummy location when creating the","label":0,"id":407083}
{"project":"presto-0.278","comment":"\/\/ TODO: this will technically cause an NPE in httpClient, but it's not triggered because\/\/ we never call get() on the response future. This behavior needs to be fixed in airlift","label":1,"id":407084}
{"project":"presto-0.278","comment":"\/\/ This is because the AbstractBlockEncodingBuffer is only created once, while position mapping for Dictionary\/RLE blocks","label":0,"id":407085}
{"project":"presto-0.278","comment":"\/\/ add three items to each buffer","label":0,"id":407086}
{"project":"presto-0.278","comment":"\/\/ If we found a direct column reference, and we will put it in tableColumnReferencesWithSubFields","label":0,"id":407087}
{"project":"presto-0.278","comment":"\/\/ noinspection FloatingPointEquality","label":0,"id":407088}
{"project":"presto-0.278","comment":"\/**     * No more pages or buffers can be added, and buffer is waiting     * for the final pages to be consumed.     * Next state is {@link #FINISHED}.     *\/","label":0,"id":407089}
{"project":"presto-0.278","comment":"\/\/ - readers with integer equality","label":0,"id":407090}
{"project":"presto-0.278","comment":"\/\/ Only include the key if it is not already in the index","label":0,"id":407091}
{"project":"presto-0.278","comment":"\/\/ analyze only column types in subquery if column alias exists","label":0,"id":407092}
{"project":"presto-0.278","comment":"\/\/ Block copies the HashMap, so block builder's hash table is still not present.","label":0,"id":407093}
{"project":"presto-0.278","comment":"\/** * Get the position of an element in the cacheOffsets that can be used to * get the offset for the stripe footer slice for a given stripe. *\/","label":0,"id":407094}
{"project":"presto-0.278","comment":"\/\/ bucket filtering is only supported for tables bucketed with HIVE_COMPATIBLE hash function","label":0,"id":407095}
{"project":"presto-0.278","comment":"\/\/ TODO Implement me","label":1,"id":407096}
{"project":"presto-0.278","comment":"\/\/ two source plan nodes","label":0,"id":407097}
{"project":"presto-0.278","comment":"\/\/ This method should only be called by LocationService","label":0,"id":407098}
{"project":"presto-0.278","comment":"\/\/ before beginning of string","label":0,"id":407099}
{"project":"presto-0.278","comment":"\/\/ TODO: support stored procedure escape syntax","label":1,"id":407100}
{"project":"presto-0.278","comment":"\/\/ Otherwise, `queue.finish` may not be invoked if `finished` is set while the lambda above is being evaluated.","label":0,"id":407101}
{"project":"presto-0.278","comment":"\/\/ B = subset (J)","label":0,"id":407102}
{"project":"presto-0.278","comment":"\/\/ All Java 10+ are on later versions","label":0,"id":407103}
{"project":"presto-0.278","comment":"\/\/ verify worker have arrived but haven't processed yet","label":0,"id":407104}
{"project":"presto-0.278","comment":"\/\/ LIMIT node will stop the operator once it gets 5 rows. Hence, we cannot reuse these stats for other queries.","label":0,"id":407105}
{"project":"presto-0.278","comment":"\/\/ add local union for all unpartitioned inputs","label":0,"id":407106}
{"project":"presto-0.278","comment":"\/** * Transforms: * <pre> * - Offset (row count = x) *    - Source * <\/pre> * Into: * <pre> * - Project (prune rowNumber symbol) *    - Filter (rowNumber > x) *       - RowNumber *          - Source * <\/pre> * Relies on RowNumberNode's property of keeping order of its input. * If the query contains an ORDER BY clause, the sorted order * will be respected when leading rows are removed. *\/","label":0,"id":407107}
{"project":"presto-0.278","comment":"\/\/ isNull flags for all positions up to the last positions requested in read()","label":0,"id":407108}
{"project":"presto-0.278","comment":"\/\/ Available for Jackson serialization only!","label":0,"id":407109}
{"project":"presto-0.278","comment":"\/\/ and if not all aggregation functions on same distinct mask symbol (this case handled by SingleDistinctOptimizer)","label":0,"id":407110}
{"project":"presto-0.278","comment":"\/\/ column 1 (int) = Integer.MAX_VALUE","label":0,"id":407111}
{"project":"presto-0.278","comment":"\/\/ preserve base name case","label":0,"id":407112}
{"project":"presto-0.278","comment":"\/\/ is there a specific preference","label":0,"id":407113}
{"project":"presto-0.278","comment":"\/\/ Older versions of ElasticSearch supported multiple \"type\" mappings","label":0,"id":407114}
{"project":"presto-0.278","comment":"\/\/ TODO(pranjalssh): Support plan statistics tracking for other query managers","label":1,"id":407115}
{"project":"presto-0.278","comment":"\/\/ mutate apache partition to Presto partition","label":0,"id":407116}
{"project":"presto-0.278","comment":"\/\/ X+Y as CSE","label":0,"id":407117}
{"project":"presto-0.278","comment":"\/\/ todo format as graphviz","label":1,"id":407118}
{"project":"presto-0.278","comment":"\/\/ initialize data columns","label":0,"id":407119}
{"project":"presto-0.278","comment":"\/** * Extracts values from JSON * <p\/> * Supports the following JSON path primitives: * <pre> *    $ : Root object *    . or [] : Child operator *   [] : Subscript operator for array * <\/pre> * <p\/> * Supported JSON Path Examples: * <pre> *    { \"store\": { *        \"book\": [ *          { \"category\": \"reference\", *            \"author\": \"Nigel Rees\", *            \"title\": \"Sayings of the Century\", *            \"price\": 8.95, *            \"contributors\": [[\"Adam\", \"Levine\"], [\"Bob\", \"Strong\"]] *          }, *          { \"category\": \"fiction\", *            \"author\": \"Evelyn Waugh\", *            \"title\": \"Sword of Honour\", *            \"price\": 12.99, *            \"isbn\": \"0-553-21311-3\", *            \"last_owner\": null *          } *        ], *        \"bicycle\": { *          \"color\": \"red\", *          \"price\": 19.95 *        } *      } *    } * <\/pre> * <p\/> * With only scalar values using dot-notation of path: * <pre> *    $.store.book[0].author => Nigel Rees *    $.store.bicycle.price => 19.95 *    $.store.book[0].isbn => NULL (Doesn't exist becomes java null) *    $.store.book[1].last_owner => NULL (json null becomes java null) *    $.store.book[0].contributors[0][1] => Levine * <\/pre> * <p\/> * With json values using dot-notation of path: * <pre> *    $.store.book[0].author => \"Nigel Rees\" *    $.store.bicycle.price => 19.95 *    $.store.book[0].isbn => NULL (Doesn't exist becomes java null) *    $.store.book[1].last_owner => null (json null becomes the string \"null\") *    $.store.book[0].contributors[0] => [\"Adam\", \"Levine\"] *    $.store.bicycle => {\"color\": \"red\", \"price\": 19.95} * <\/pre> * With only scalar values using bracket-notation of path: * <pre> *    $[\"store\"][\"book\"][0][\"author\"] => Nigel Rees *    $[\"store\"][\"bicycle\"][\"price\"] => 19.95 *    $[\"store\"][\"book\"][0][\"isbn\"] => NULL (Doesn't exist becomes java null) *    $[\"store\"][\"book\"][1][\"last_owner\"] => NULL (json null becomes java null) *    $[\"store\"][\"book\"][0][\"contributors\"][0][1] => Levine * <\/pre> * <p\/> * With json values using bracket-notation of path: * <pre> *    $[\"store\"][\"book\"][0][\"author\"] => \"Nigel Rees\" *    $[\"store\"][\"bicycle\"][\"price\"] => 19.95 *    $[\"store\"][\"book\"][0][\"isbn\"] => NULL (Doesn't exist becomes java null) *    $[\"store\"][\"book\"][1][\"last_owner\"] => null (json null becomes the string \"null\") *    $[\"store\"][\"book\"][0][\"contributors\"][0] => [\"Adam\", \"Levine\"] *    $[\"store\"][\"bicycle\"] => {\"color\": \"red\", \"price\": 19.95} * <\/pre> *\/","label":0,"id":407120}
{"project":"presto-0.278","comment":"\/\/ set no more pages","label":0,"id":407121}
{"project":"presto-0.278","comment":"\/\/ * Table schema and storage format is used for the new partition (instead of existing partition schema and storage format).","label":0,"id":407122}
{"project":"presto-0.278","comment":"\/\/ Time between task creation and start.","label":0,"id":407123}
{"project":"presto-0.278","comment":"\/\/ verify that the target directory for the partition does not already exist","label":0,"id":407124}
{"project":"presto-0.278","comment":"\/\/ write fragments","label":0,"id":407125}
{"project":"presto-0.278","comment":"\/\/ Visits as few types as possible, in order to avoid network calls to fetch the types.","label":0,"id":407126}
{"project":"presto-0.278","comment":"\/\/ Benchmark results show using hash maps with primitive arrays perform way better than object arrays.","label":0,"id":407127}
{"project":"presto-0.278","comment":"\/\/localhost:8080\/0 - 3 failures, failure duration 31.00s, total failed request time 31.00s)\");","label":0,"id":407128}
{"project":"presto-0.278","comment":"\/\/ decrease the heartbeat interval so we detect failed nodes faster","label":0,"id":407129}
{"project":"presto-0.278","comment":"\/\/ Validate no column is mapped to the reserved entry","label":0,"id":407130}
{"project":"presto-0.278","comment":"\/\/ full mismatch","label":0,"id":407131}
{"project":"presto-0.278","comment":"\/\/ TODO: when min == max (i.e., singleton ranges, the construction of Domains can be done more efficiently","label":1,"id":407132}
{"project":"presto-0.278","comment":"\/\/ FIXME Add tests for more complex scenario with more stats","label":1,"id":407133}
{"project":"presto-0.278","comment":"\/**     * If this DereferenceExpression looks like a QualifiedName, return QualifiedName.     * Otherwise return null     *\/","label":0,"id":407134}
{"project":"presto-0.278","comment":"\/\/\", \"select * from t\", \";\"));","label":0,"id":407135}
{"project":"presto-0.278","comment":"\/\/ Populate the first group","label":0,"id":407136}
{"project":"presto-0.278","comment":"\/**     * Get the physical layout for a new table.     *\/","label":0,"id":407137}
{"project":"presto-0.278","comment":"\/\/ Hash table capacity has increased","label":0,"id":407138}
{"project":"presto-0.278","comment":"\/\/ Prepare the open slice for next write.","label":0,"id":407139}
{"project":"presto-0.278","comment":"\/\/ TODO: verify the parametric types too","label":1,"id":407140}
{"project":"presto-0.278","comment":"\/\/ if modulus < 2, nothing to do","label":0,"id":407141}
{"project":"presto-0.278","comment":"\/\/ TODO: verify this","label":1,"id":407142}
{"project":"presto-0.278","comment":"\/\/ new dictionary is compact","label":0,"id":407143}
{"project":"presto-0.278","comment":"\/\/ See com.facebook.presto.spark.SparkErrorCode","label":0,"id":407144}
{"project":"presto-0.278","comment":"\/\/ Avro specific properties","label":0,"id":407145}
{"project":"presto-0.278","comment":"\/** * Provides the logical properties for a SortNode. The properties of the source are propagated without change. * * @param node An instance of SortNode. * @return The logical properties for a SortNode. *\/","label":0,"id":407146}
{"project":"presto-0.278","comment":"\/\/ Sample both sides if at least one side is not already sampled","label":0,"id":407147}
{"project":"presto-0.278","comment":"\/\/ no leftovers to process and not using chunking","label":0,"id":407148}
{"project":"presto-0.278","comment":"\/\/ a3 = a1 * (b + c)","label":0,"id":407149}
{"project":"presto-0.278","comment":"\/** * Unnester for a nested column with array type, only when array elements are NOT of type {@code RowType}. * Maintains a {@link ColumnarArray} object to get underlying elements block from the array block. * <p> * All protected methods implemented here assume that they are being invoked when {@code columnarArray} is non-null. *\/","label":0,"id":407150}
{"project":"presto-0.278","comment":"\/\/ %M Month name (January..December)","label":0,"id":407151}
{"project":"presto-0.278","comment":"\/** * @return the index of the first row in this page if the related data is available (the optional column-index *         contains this value) *\/","label":0,"id":407152}
{"project":"presto-0.278","comment":"\/\/ Copy the previous slice contents into the new buffer","label":0,"id":407153}
{"project":"presto-0.278","comment":"\/\/ This means there is a second VInt present that specifies additional bits of the timestamp.","label":0,"id":407154}
{"project":"presto-0.278","comment":"\/\/ TODO implement logic for other node types and return LocalCostEstimate.unknown() here (or throw)","label":1,"id":407155}
{"project":"presto-0.278","comment":"\/\/ EXISTS predicates are contradictory","label":0,"id":407156}
{"project":"presto-0.278","comment":"\/\/ Once we add the difference into `completedDriverGroups`, the view will be empty.","label":0,"id":407157}
{"project":"presto-0.278","comment":"\/\/ convert the output record set of the index into the column ordering\/\/ expect by the query","label":0,"id":407158}
{"project":"presto-0.278","comment":"\/**     * Encode the given String value into the given Text object.     *     * @param text Text object to set     * @param value Value to encode     *\/","label":0,"id":407159}
{"project":"presto-0.278","comment":"\/\/ Create a new Page that only have channels which will be consumed by the aggregate","label":0,"id":407160}
{"project":"presto-0.278","comment":"\/\/ adding a new slice will increase the size","label":0,"id":407161}
{"project":"presto-0.278","comment":"\/\/ reschedule","label":0,"id":407162}
{"project":"presto-0.278","comment":"\/\/ some tables bucketed","label":0,"id":407163}
{"project":"presto-0.278","comment":"\/\/ unknown schema","label":0,"id":407164}
{"project":"presto-0.278","comment":"\/** * Called by SpatialJoinOperatorFactory to indicate that all * {@link SpatialJoinOperator} have been created. *\/","label":0,"id":407165}
{"project":"presto-0.278","comment":"\/\/ column 3","label":0,"id":407166}
{"project":"presto-0.278","comment":"\/\/ if all row groups are skipped, return null","label":0,"id":407167}
{"project":"presto-0.278","comment":"\/\/www.googleapis.com\/auth\/cloud-platform\"), CLOUD_PLATFORM_READ_ONLY(\"https:\/\/www.googleapis.com\/auth\/cloud-platform.read-only\"), DEVSTORAGE_FULL_CONTROL(\"https:\/\/www.googleapis.com\/auth\/devstorage.full_control\"), DEVSTORAGE_READ_ONLY(\"https:\/\/www.googleapis.com\/auth\/devstorage.read_only\"), DEVSTORAGE_READ_WRITE(\"https:\/\/www.googleapis.com\/auth\/devstorage.read_write\");","label":0,"id":407168}
{"project":"presto-0.278","comment":"\/\/ reset loaded flags","label":0,"id":407169}
{"project":"presto-0.278","comment":"\/\/ Trying to add another cache entry which will fail due to total size limit.","label":0,"id":407170}
{"project":"presto-0.278","comment":"\/** * Determines if one key property is more general than another. * A key property is more general than another if it can satisfy any key requirement the other can satisfy. * * @param otherKeyProperty * @return True keyProperty is more general than otherKeyProperty or False otherwise. *\/","label":0,"id":407171}
{"project":"presto-0.278","comment":"\/** * 10^x. All unsigned values. *\/","label":0,"id":407172}
{"project":"presto-0.278","comment":"\/\/ INVARIANT. DistinctLimit with nationkey as distinct symbol.\/\/ Filter binds nationkey to a constant before grouping. Result should have maxcard=1;","label":0,"id":407173}
{"project":"presto-0.278","comment":"\/**     * Returns the name of this type that should be displayed to end-users.     *\/","label":0,"id":407174}
{"project":"presto-0.278","comment":"\/**     * @note If count is negative, the value of the aggregation will be null; if     * count is 0, this is a no-op (since, in the context of entropy, 0 log(0) = 0; if count is null,     * this is a no op.     *\/","label":0,"id":407175}
{"project":"presto-0.278","comment":"\/\/ skip static metadata added by the writer framework","label":0,"id":407176}
{"project":"presto-0.278","comment":"\/\/ TODO: fix DictionaryBlock so that dictionaryIsCompacted can be set to true when the underlying block over-retains memory.","label":1,"id":407177}
{"project":"presto-0.278","comment":"\/** * Creates a new {@link Row} from the given delimited string based on the given {@link RowSchema} * * @param schema Row's schema * @param str String to parse * @param delimiter Delimiter of the string * @return A new Row * @throws PrestoException If the length of the split string is not equal to the length of the schema * @throws PrestoException If the schema contains an unsupported type *\/","label":0,"id":407178}
{"project":"presto-0.278","comment":"\/\/ update memory tracking","label":0,"id":407179}
{"project":"presto-0.278","comment":"\/\/ 28, 4, 5, 29, 31, 10 (corresponding indices from left to right in the above fortyLetterSequence)","label":0,"id":407180}
{"project":"presto-0.278","comment":"\/\/ First extract all hashes from blocks to native array.","label":0,"id":407181}
{"project":"presto-0.278","comment":"\/\/ Map from the aggregation reference to the IF result reference. This only contains the aggregates where the IF can be safely unwrapped.","label":0,"id":407182}
{"project":"presto-0.278","comment":"\/** * Gets the number of input rows processed by this page source so far. * If number is not available, this method should return zero. *\/","label":0,"id":407183}
{"project":"presto-0.278","comment":"\/\/ This column is already a pushed down subfield column","label":0,"id":407184}
{"project":"presto-0.278","comment":"\/\/ we need to revoke 3 and 6","label":0,"id":407185}
{"project":"presto-0.278","comment":"\/\/ They will be casted to BIGINT or INTEGER to avoid timezone conversion.","label":0,"id":407186}
{"project":"presto-0.278","comment":"\/\/ BCrypt password created with cost of 7 --> \"htpasswd -n -B -C 7 test\"","label":0,"id":407187}
{"project":"presto-0.278","comment":"\/\/ TODO #7122 assertQuery(chicago, \"SELECT TIME '3:04:05'\");\/\/ TODO #7122 assertQuery(kathmandu, \"SELECT TIME '3:04:05'\");","label":1,"id":407188}
{"project":"presto-0.278","comment":"\/\/ filters per subscript: subscriptFilters[subscript - 1] = {\"> 3\", \"= 10\"}\/\/ individual subscripts may have multiple filters\/\/ for example, consider this filter: a[1][2] > 3 and a[1][4] = 10 and a[3][2] < 100\/\/ - at level 0, subscript 1 has 2 filters (> 3, = 10) and subscript 3 has one filter (< 100)\/\/ - at level 2, subscript 2 has 2 filters (> 3, < 100), subscript 4 has one filter (= 10)\/\/ each value represents multiple filters - the long value has bits corresponding to filter\/\/ indices in tupleDomainFilters array set","label":0,"id":407189}
{"project":"presto-0.278","comment":"\/\/ plan","label":0,"id":407190}
{"project":"presto-0.278","comment":"\/\/ c[1] IS NULL","label":0,"id":407191}
{"project":"presto-0.278","comment":"\/\/ notify listeners if the buffer is not full","label":0,"id":407192}
{"project":"presto-0.278","comment":"\/\/ into temporaryBuffer, advance by numBytes and return -1.","label":0,"id":407193}
{"project":"presto-0.278","comment":"\/\/ shared across multiple operators\/drivers","label":0,"id":407194}
{"project":"presto-0.278","comment":"\/**         * Returns materialized view status, considering filter conditions from query         *\/","label":0,"id":407195}
{"project":"presto-0.278","comment":"\/**     * Called by {@link SpatialJoinOperator}.     * <p>     * {@link SpatialJoinOperator} must call {@link #probeOperatorFinished()} on completion     * to signal that spatial index is no longer needed.     *\/","label":0,"id":407196}
{"project":"presto-0.278","comment":"\/\/ get all parameters in query","label":0,"id":407197}
{"project":"presto-0.278","comment":"\/\/ This class gives the overall status when multiple status are seen from different parts.\/\/ The logic is simple and can be summarized as finding the right most item (based on the list below) seen so far:\/\/ UNCHANGED_SATISFIED, UNCHANGED_NOT_SATISFIED, CHANGED, UNSOLVABLE\/\/ If no item was seen ever, it provides UNCHANGED_SATISFIED.","label":0,"id":407198}
{"project":"presto-0.278","comment":"\/\/ if temporal, partition into days first","label":0,"id":407199}
{"project":"presto-0.278","comment":"\/**     * Returns a table handle for the specified table name, or null if the connector does not contain the table.     *\/","label":0,"id":407200}
{"project":"presto-0.278","comment":"\/\/ Do not want to use Guava LongMath.checkedSubtract() here as it will throw","label":0,"id":407201}
{"project":"presto-0.278","comment":"\/\/ Optimizers above this do not need to care about aggregations with the type other than SINGLE\/\/ This optimizer must be run after all exchange-related optimizers","label":0,"id":407202}
{"project":"presto-0.278","comment":"\/\/ TODO compressedDataSize > bytes.length?","label":1,"id":407203}
{"project":"presto-0.278","comment":"\/\/ X           X","label":0,"id":407204}
{"project":"presto-0.278","comment":"\/\/ the code assumes getNextBatch is called by a single thread","label":0,"id":407205}
{"project":"presto-0.278","comment":"\/\/ HIVE-7148 proposed change to bucketing hash algorithms. If that gets implemented, this function will need to change significantly.","label":0,"id":407206}
{"project":"presto-0.278","comment":"\/\/ system connector","label":0,"id":407207}
{"project":"presto-0.278","comment":"\/\/ In OGC (which JTS follows): Polygons, MultiPolygons, Geometry Collections are simple.","label":0,"id":407208}
{"project":"presto-0.278","comment":"\/\/ TODO: this class does not yield wrt memory limit; enable it","label":1,"id":407209}
{"project":"presto-0.278","comment":"\/\/ validate table location","label":0,"id":407210}
{"project":"presto-0.278","comment":"\/\/ In such case, the expression might still be resolvable with plan.getScope() but we should not resolve it.","label":0,"id":407211}
{"project":"presto-0.278","comment":"\/\/ If value is already Expression, literal values contained inside should already have been made serializable. Otherwise, we make sure the object is small and serializable.","label":0,"id":407212}
{"project":"presto-0.278","comment":"\/\/ Field Instructions","label":0,"id":407213}
{"project":"presto-0.278","comment":"\/\/ short decimal, bigint","label":0,"id":407214}
{"project":"presto-0.278","comment":"\/** * Constructs standard (non-legacy) TIMESTAMP value corresponding to argument *\/","label":0,"id":407215}
{"project":"presto-0.278","comment":"\/\/ we consider a request to be \"new\" if there are no current failures","label":0,"id":407216}
{"project":"presto-0.278","comment":"\/\/ of a data set.","label":0,"id":407217}
{"project":"presto-0.278","comment":"\/\/ indices in tupleDomainFilters array set","label":0,"id":407218}
{"project":"presto-0.278","comment":"\/\/ Except","label":0,"id":407219}
{"project":"presto-0.278","comment":"\/\/ 1. Their stats are not used by Apache Iceberg to filter out data files","label":0,"id":407220}
{"project":"presto-0.278","comment":"\/\/ Column 7L","label":0,"id":407221}
{"project":"presto-0.278","comment":"\/\/ add 1 byte for null flag","label":0,"id":407222}
{"project":"presto-0.278","comment":"\/\/ backward compatibility @AggregationState annotation didn't exists before","label":0,"id":407223}
{"project":"presto-0.278","comment":"\/\/ NOTE: Full outer join doesn't use hash variables","label":0,"id":407224}
{"project":"presto-0.278","comment":"\/\/ An alternative is calling getLongValue and then BigintOperators.castToReal.\/\/ It doesn't work as well because it can result in overflow and underflow exceptions for large integral numbers.","label":1,"id":407225}
{"project":"presto-0.278","comment":"\/**     * Returns true if no tuple could ever satisfy this TupleDomain     *\/","label":0,"id":407226}
{"project":"presto-0.278","comment":"\/\/ Decimal","label":0,"id":407227}
{"project":"presto-0.278","comment":"\/\/ * In the case of grouped test, this covers:","label":0,"id":407228}
{"project":"presto-0.278","comment":"\/\/ SELECT f(a) GROUP BY a","label":0,"id":407229}
{"project":"presto-0.278","comment":"\/** * Creates a new block builder of the same type based on the current usage statistics of this block builder. *\/","label":0,"id":407230}
{"project":"presto-0.278","comment":"\/*             * Then sqlTask2 should be asked to revoke its memory too             *\/","label":0,"id":407231}
{"project":"presto-0.278","comment":"\/\/ metadata.getCatalogHandle() registers the catalog for the transaction","label":0,"id":407232}
{"project":"presto-0.278","comment":"\/\/ out of order","label":0,"id":407233}
{"project":"presto-0.278","comment":"\/\/ Compile the scope straddling equality expressions","label":0,"id":407234}
{"project":"presto-0.278","comment":"\/**     * Returns true only if there exists a strict intersection between the TupleDomains.     * i.e. there exists some potential tuple that would be allowable in both TupleDomains.     *\/","label":0,"id":407235}
{"project":"presto-0.278","comment":"\/\/ this sequence begins the file range, the start position is returned","label":0,"id":407236}
{"project":"presto-0.278","comment":"\/\/ Assuming 1st line is always header","label":0,"id":407237}
{"project":"presto-0.278","comment":"\/\/ second stripe","label":0,"id":407238}
{"project":"presto-0.278","comment":"\/\/127.0.0.2\/\"), NodeVersion.UNKNOWN, false);","label":0,"id":407239}
{"project":"presto-0.278","comment":"\/**     * Quick sort using an index array.  On return,     * values[order[i]] is in order as i goes start..n     *  @param key    Values to sort on     * @param start  The first element to sort     * @param n      The number of values to sort     * @param values The auxiliary values to sort.     *\/","label":0,"id":407240}
{"project":"presto-0.278","comment":"\/\/ with a Values node","label":0,"id":407241}
{"project":"presto-0.278","comment":"\/\/ TODO: Decouple and remove: required by LocalExecutionPlanner, PlanFragmenter","label":1,"id":407242}
{"project":"presto-0.278","comment":"\/\/ Produce a table with a partition with bucket count different but compatible with the table bucket count","label":0,"id":407243}
{"project":"presto-0.278","comment":"\/** * Gets a little endian short at value at {@code internalPosition - getOffsetBase()}. *\/","label":0,"id":407244}
{"project":"presto-0.278","comment":"\/\/ TODO: will be used to deserialize the  {@link SerializedPage}","label":1,"id":407245}
{"project":"presto-0.278","comment":"\/\/ recompute the dictionary memory usage","label":0,"id":407246}
{"project":"presto-0.278","comment":"\/**         * zigzag encode the given value         *\/","label":0,"id":407247}
{"project":"presto-0.278","comment":"\/\/ rollback delete","label":0,"id":407248}
{"project":"presto-0.278","comment":"\/\/ 7 digits after the dot","label":0,"id":407249}
{"project":"presto-0.278","comment":"\/\/ TODO: inline","label":1,"id":407250}
{"project":"presto-0.278","comment":"\/\/ list all files in the partition","label":0,"id":407251}
{"project":"presto-0.278","comment":"\/*        Designed to simulate a somewhat overloaded Hive cluster.        The following data is a point-in-time snapshot representative production cluster:            - 60 running queries => 45 queries\/node            - 80 tasks\/node            - 600 splits scheduled\/node (80% intermediate => ~480, 20% leaf => 120)            - Only 60% intermediate splits will ever get data (~300)        Desired result:        This experiment should demonstrate the trade-offs that will be made during periods when a        node is under heavy load. Ideally, the different classes of tasks should each accumulate        scheduled time, and not spend disproportionately long waiting.        *\/","label":0,"id":407252}
{"project":"presto-0.278","comment":"\/\/ After this point, all planNodes should not contain OriginalExpression","label":0,"id":407253}
{"project":"presto-0.278","comment":"\/\/ However, it could happen, for example, if connector throws exception.","label":0,"id":407254}
{"project":"presto-0.278","comment":"\/\/\/\/ Control Flow\/\/","label":0,"id":407255}
{"project":"presto-0.278","comment":"\/\/ equals is super expensive for the currently supported types: Block","label":0,"id":407256}
{"project":"presto-0.278","comment":"\/\/ Legacy anonymous row field ordinal access","label":0,"id":407257}
{"project":"presto-0.278","comment":"\/\/ * SET_CONTAINS performs worst when smaller than but close to power of 2","label":0,"id":407258}
{"project":"presto-0.278","comment":"\/**     * Describes statistics that must be collected during a write.     *\/","label":0,"id":407259}
{"project":"presto-0.278","comment":"\/\/ The above outer join queries will produce the same result even if they are inner join.\/\/ The below query uses \"orderkey = custkey\" as join condition.","label":0,"id":407260}
{"project":"presto-0.278","comment":"\/\/ keys are indices into hiveColumnIndices array; values are filter scores","label":0,"id":407261}
{"project":"presto-0.278","comment":"\/\/ %j Day of year (001..366)","label":0,"id":407262}
{"project":"presto-0.278","comment":"\/**     * Returns a block containing the specified positions.     * Positions to copy are stored in a subarray within {@code positions} array     * that starts at {@code offset} and has length of {@code length}.     * All specified positions must be valid for this block.     * <p>     * The returned block must be a compact representation of the original block.     *\/","label":0,"id":407263}
{"project":"presto-0.278","comment":"\/\/ This is a hack for performance reasons.","label":1,"id":407264}
{"project":"presto-0.278","comment":"\/\/ It is safe to delete the whole meta directory for external tables and views","label":0,"id":407265}
{"project":"presto-0.278","comment":"\/** * This page builder creates pages with dictionary blocks: * normal dictionary blocks for the probe side and the original blocks for the build side. * <p> * TODO use dictionary blocks (probably extended kind) to avoid data copying for build side *\/","label":1,"id":407266}
{"project":"presto-0.278","comment":"\/\/ b. appear only once across all expressions","label":0,"id":407267}
{"project":"presto-0.278","comment":"\/\/ Create \"orders\" table in a different schema","label":0,"id":407268}
{"project":"presto-0.278","comment":"\/\/ mark all files that are not assigned","label":0,"id":407269}
{"project":"presto-0.278","comment":"\/\/ This is convenient for types such as DATE, TIMESTAMP, etc, which have multiple possible","label":0,"id":407270}
{"project":"presto-0.278","comment":"\/\/ clear the sign bit","label":0,"id":407271}
{"project":"presto-0.278","comment":"\/** * A wrapper around CostCalculator that estimates ExchangeNodes cost. * <p> * Certain rules (e.g. {@link ReorderJoins} and {@link DetermineJoinDistributionType}) are run before exchanges * are added to a plan. This cost calculator adds the implied costs for the exchanges that will be added later. * It is needed to account for the differences in exchange costs for different types of joins. *\/","label":0,"id":407272}
{"project":"presto-0.278","comment":"\/\/ Casting is safe here, since we have verified at analysis time that the actual type of the body is coercible to declared return type.","label":0,"id":407273}
{"project":"presto-0.278","comment":"\/\/ FIXME, weights to average. left and right should be equal in most cases anyway","label":1,"id":407274}
{"project":"presto-0.278","comment":"\/\/ for debugging heap dump","label":0,"id":407275}
{"project":"presto-0.278","comment":"\/\/ 2. Sort based on canonical aggregation expression","label":0,"id":407276}
{"project":"presto-0.278","comment":"\/\/ Expected Values\/\/ (999L, MICROSECONDS),        \"1970-01-01 00:00:00.999\"\/\/ (1L, MICROSECONDS),          \"1970-01-01 00:00:00:001\"","label":0,"id":407277}
{"project":"presto-0.278","comment":"\/\/ this test does use hidden at_timezone function as it is equivalent of using SQL syntax AT TIME ZONE\/\/ but our test framework doesn't support that syntax directly.","label":0,"id":407278}
{"project":"presto-0.278","comment":"\/\/localhost:8080?socksProxy=localhost:1080&httpProxy=localhost:8888\", \"Connection property 'socksProxy' is not allowed\");","label":0,"id":407279}
{"project":"presto-0.278","comment":"\/\/ We cannot use Optional given escape could exist and its value is null","label":0,"id":407280}
{"project":"presto-0.278","comment":"\/\/ instead of separate ApplyDynamicFilters rule we derive dynamic filters within PredicatePushdown itself.","label":0,"id":407281}
{"project":"presto-0.278","comment":"\/\/ No Criteria","label":0,"id":407282}
{"project":"presto-0.278","comment":"\/\/ mixed","label":0,"id":407283}
{"project":"presto-0.278","comment":"\/\/ Just return the last one here if control reaches here.","label":0,"id":407284}
{"project":"presto-0.278","comment":"\/\/ run TPCH Q6 with smile enabled to smoke test smile support","label":0,"id":407285}
{"project":"presto-0.278","comment":"\/\/ outstanding request?","label":0,"id":407286}
{"project":"presto-0.278","comment":"\/\/ an out of order request","label":0,"id":407287}
{"project":"presto-0.278","comment":"\/\/ Copy from parquet-mr","label":0,"id":407288}
{"project":"presto-0.278","comment":"\/** * LOWER UNBOUNDED is specified with an empty value and an ABOVE bound * UPPER UNBOUNDED is specified with an empty value and a BELOW bound *\/","label":0,"id":407289}
{"project":"presto-0.278","comment":"\/\/ cases: uncompressed, aircompressor, and hadoop compression","label":0,"id":407290}
{"project":"presto-0.278","comment":"\/\/ the current group has produced all its rows","label":0,"id":407291}
{"project":"presto-0.278","comment":"\/\/ Make two passes over the aggregationColumnNodes: In the first pass identify all the variables that will be used","label":0,"id":407292}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to show roles on the specified catalog.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":407293}
{"project":"presto-0.278","comment":"\/\/ reverse order with nulls","label":0,"id":407294}
{"project":"presto-0.278","comment":"\/\/ we add a new block builder to each list.","label":0,"id":407295}
{"project":"presto-0.278","comment":"\/\/ is our fixed size per position","label":0,"id":407296}
{"project":"presto-0.278","comment":"\/\/ legitimately needs more.","label":0,"id":407297}
{"project":"presto-0.278","comment":"\/\/ if 1-to-n inner or right join then propagate right source keys and maxcard","label":0,"id":407298}
{"project":"presto-0.278","comment":"\/\/ verify this is a supported version","label":0,"id":407299}
{"project":"presto-0.278","comment":"\/** * OriginalExpression is a RowExpression container holding an {@param Expression} object * that cannot be translated directly while constructing PlanNode. * Typical examples are cases with `WITH` clauses or alias that the type or arguments information * are not directly available given the substrees are not formed yet. * OriginalExpression should not exist after optimization or serialized over the wire. * All OriginalExpression should be translated to other corresponding RowExpression objects ultimately. *\/","label":0,"id":407300}
{"project":"presto-0.278","comment":"\/\/ 2. add sorted-by columns to localPropertyBuilder","label":0,"id":407301}
{"project":"presto-0.278","comment":"\/** * returns a List of StageExecutionAndSchedulers in a postorder representation of the tree *\/","label":0,"id":407302}
{"project":"presto-0.278","comment":"\/\/ partition is adding a column in the middle","label":0,"id":407303}
{"project":"presto-0.278","comment":"\/\/ Dummy values for fake QueryStateInfo","label":0,"id":407304}
{"project":"presto-0.278","comment":"\/\/ stripe dictionary","label":0,"id":407305}
{"project":"presto-0.278","comment":"\/\/ Sorted keys and groupby keys","label":0,"id":407306}
{"project":"presto-0.278","comment":"\/** * A set containing zero or more Ranges of the same type over a continuous space of possible values. * Ranges are coalesced into the most compact representation of non-overlapping Ranges. * This structure is used with comparable and orderable types like bigint, integer, double, varchar, etc. *\/","label":0,"id":407307}
{"project":"presto-0.278","comment":"\/\/ TEST: 1 to n inner join between customers and orders with limit(6) on the right table.\/\/ orders key property and maxcard=6 and equivalence classes(o_custkey=c_custkey),(shippriority=10) and\/\/ (mktsegment='BUILDING') should be propagated.","label":0,"id":407308}
{"project":"presto-0.278","comment":"\/\/ TODO: arguments will be pure RowExpression once we introduce subquery expression for RowExpression.","label":1,"id":407309}
{"project":"presto-0.278","comment":"\/**     * Stage tasks are being scheduled on nodes.     *\/","label":0,"id":407310}
{"project":"presto-0.278","comment":"\/**     * Finds, reads and parses ZIP file entries from the central directory.     *\/","label":0,"id":407311}
{"project":"presto-0.278","comment":"\/\/ test getPositions for block","label":0,"id":407312}
{"project":"presto-0.278","comment":"\/\/ We can always enable streaming aggregation for partial aggregations. But if the table is not pre-group by the groupby columns, it may have regressions.\/\/ This session property is just a solution to force enabling when we know the execution would benefit from partial streaming aggregation.\/\/ We can work on determining it based on the input table properties later.","label":1,"id":407313}
{"project":"presto-0.278","comment":"\/** * Merges {@code metric} into this object. *\/","label":0,"id":407314}
{"project":"presto-0.278","comment":"\/\/ delete ds=2015-07-03","label":0,"id":407315}
{"project":"presto-0.278","comment":"\/\/ * Under new semantics, timestamp is agnostic to the session zone.","label":0,"id":407316}
{"project":"presto-0.278","comment":"\/\/ offset 32","label":0,"id":407317}
{"project":"presto-0.278","comment":"\/\/ Callee of the constructor guarantees dynamic bucket node map will only be","label":0,"id":407318}
{"project":"presto-0.278","comment":"\/\/ Second traversal will use the newOffsets and total element positions to\/\/ populate a correctly sized values position selection array","label":0,"id":407319}
{"project":"presto-0.278","comment":"\/\/ deadline for retrieving range partitions in milliseconds","label":0,"id":407320}
{"project":"presto-0.278","comment":"\/** * @deprecated Connectors should not access the HTTP endpoints of other nodes. *\/","label":1,"id":407321}
{"project":"presto-0.278","comment":"\/\/%s\/hive\/default?%s\", server.getAddress(), extra);","label":0,"id":407322}
{"project":"presto-0.278","comment":"\/** * We create a undirected graph where each node corresponds to a base table column. * Edges represent mapping by JOIN criteria, UNION, INTERSECT etc. * <p> * For example, given SELECT column_a AS column_x FROM table_a JOIN table_b ON (table_a.column_a = table_b.column_b), * (table_a.column_a, table_b.column_b) is an edge in the graph. * <\/p> *\/","label":0,"id":407323}
{"project":"presto-0.278","comment":"\/\/ create equality inference on available variables\/\/ TODO: make generateEqualitiesPartitionedBy take left and right scope","label":1,"id":407324}
{"project":"presto-0.278","comment":"\/\/ general errors","label":0,"id":407325}
{"project":"presto-0.278","comment":"\/\/ Implement method","label":0,"id":407326}
{"project":"presto-0.278","comment":"\/\/ * if any child is \"not recovery eligible\", this node is \"not recovery eligible\"","label":0,"id":407327}
{"project":"presto-0.278","comment":"\/\/ Expected Values\/\/ (999_999L, MICROSECONDS),    \"1970-01-01 00:00:00.999999\"\/\/ (1L, MICROSECONDS),          \"1970-01-01 00:00:00:000001\"","label":0,"id":407328}
{"project":"presto-0.278","comment":"\/\/ The assumption that `noMoreSplitsNotification.size() <= 1` currently holds.\/\/ If this assumption no longer holds, we should consider calling task.noMoreSplits with multiple entries in one shot.\/\/ These kind of methods can be expensive since they are grabbing locks and\/or sending HTTP requests on change.","label":0,"id":407329}
{"project":"presto-0.278","comment":"\/\/ Numerical stability tests","label":0,"id":407330}
{"project":"presto-0.278","comment":"\/** * Returns an array of addresses from {@link PagesIndex#getValueAddresses()} corresponding * to rows with matching geometries. * <p> * The caller is responsible for calling {@link #isJoinPositionEligible(int, int, Page)} * for each of these addresses to apply additional join filters. *\/","label":0,"id":407331}
{"project":"presto-0.278","comment":"\/\/ execute the slow query on another thread","label":0,"id":407332}
{"project":"presto-0.278","comment":"\/\/ The queuedDrivers field in PipelineStatus is supposed to represent this.","label":0,"id":407333}
{"project":"presto-0.278","comment":"\/\/\/\/ Null comparison operations\/\/","label":0,"id":407334}
{"project":"presto-0.278","comment":"\/\/ subscript","label":0,"id":407335}
{"project":"presto-0.278","comment":"\/** * Prune extraneous info from old queries *\/","label":0,"id":407336}
{"project":"presto-0.278","comment":"\/\/ Filter based on a hash table uses up to 3 longs per value (the value itself + 1 or 2","label":0,"id":407337}
{"project":"presto-0.278","comment":"\/** * The class overrides some inefficient methods from local file system *\/","label":0,"id":407338}
{"project":"presto-0.278","comment":"\/\/ If expression is nested with multiple dereferences and subscripts, we only look at the topmost one.","label":0,"id":407339}
{"project":"presto-0.278","comment":"\/\/ Rule is not applied, so the distinct should be true for both aggregations.","label":0,"id":407340}
{"project":"presto-0.278","comment":"\/** * Class to assist the Presto connector, and maybe external applications, * leverage the secondary * index built by the {@link Indexer}. * Leverages {@link ColumnCardinalityCache} to assist in * retrieving row IDs. * Currently pretty bound to the Presto connector APIs. *\/","label":0,"id":407341}
{"project":"presto-0.278","comment":"\/\/ count the rows based on the filter","label":0,"id":407342}
{"project":"presto-0.278","comment":"\/\/ Make sure subfield pruning doesn't interfere with cost-based optimizer","label":0,"id":407343}
{"project":"presto-0.278","comment":"\/**     * Rebuild the host:port string, including brackets if necessary.     *\/","label":0,"id":407344}
{"project":"presto-0.278","comment":"\/\/ This means there is a second VInt present that specifies additional bits of the timestamp.\/\/ The reversed nanoseconds value is still encoded in this VInt.","label":0,"id":407345}
{"project":"presto-0.278","comment":"\/** * Decodes a given set of bytes into field values. * * @param data The row data to decode. * @param dataMap The row data as fields map * @return Returns mapping from column handle to decoded value. Unmapped columns will be reported as null. Optional.empty() signals decoding error. *\/","label":0,"id":407346}
{"project":"presto-0.278","comment":"\/\/ - It is based on 4 tables which are a denormalized version of the 7 tables in TPC-H.","label":0,"id":407347}
{"project":"presto-0.278","comment":"\/\/ verify we did not modify the table target directory","label":0,"id":407348}
{"project":"presto-0.278","comment":"\/\/\/\/ Invoke Dynamic\/\/","label":0,"id":407349}
{"project":"presto-0.278","comment":"\/\/ Delete returns number of rows deleted, or null if obtaining the number is hard or impossible.","label":0,"id":407350}
{"project":"presto-0.278","comment":"\/\/ Ensure the slice covers the entire metadata range","label":0,"id":407351}
{"project":"presto-0.278","comment":"\/\/ 8 - 11","label":0,"id":407352}
{"project":"presto-0.278","comment":"\/**     * For an identifier of the form \"a.b.c.d\", returns \"a.b.c\"     * For an identifier of the form \"a\", returns absent     *\/","label":0,"id":407353}
{"project":"presto-0.278","comment":"\/\/ we should be able to add 3 more pages (the third will be queued)","label":0,"id":407354}
{"project":"presto-0.278","comment":"\/** * <p> * Decodes all of the provided data, starting at inPos, for inAvail bytes. Should be called at least twice: once * with the data to decode, and once with inAvail set to \"-1\" to alert decoder that EOF has been reached. The \"-1\" * call is not necessary when decoding, but it doesn't hurt, either. * <\/p> * <p> * Ignores all non-Base32 characters. This is how chunked (e.g. 76 character) data is handled, since CR and LF are * silently ignored, but has implications for other bytes, too. This method subscribes to the garbage-in, * garbage-out philosophy: it will not check the provided data for validity. * <\/p> * * @param in byte[] array of ascii data to Base32 decode. * @param inPos Position to start reading data from. * @param inAvail Amount of bytes available from input for encoding. * @param context the context to be used * <p> * Output is written to {@link Context#buffer} as 8-bit octets, using {@link Context#pos} as the buffer position *\/","label":0,"id":407355}
{"project":"presto-0.278","comment":"\/\/ Capture column in GROUP BY","label":0,"id":407356}
{"project":"presto-0.278","comment":"\/\/ BIGINT is chosen arbitrarily here. Any type will do.","label":0,"id":407357}
{"project":"presto-0.278","comment":"\/\/ dictionaryBytes = sum of the length of every entry in the dictionary","label":0,"id":407358}
{"project":"presto-0.278","comment":"\/\/ that points to the nullRow. Map the symbols from the aggregations in referenceAggregation to the","label":0,"id":407359}
{"project":"presto-0.278","comment":"\/\/ Two forms of EOF as far as Base32 decoder is concerned: actual\/\/ EOF (-1) and first time '=' character is encountered in stream.\/\/ This approach makes the '=' padding characters completely optional.","label":0,"id":407360}
{"project":"presto-0.278","comment":"\/\/ Outer JOIN (that involves LookupOuterOperator)","label":0,"id":407361}
{"project":"presto-0.278","comment":"\/\/ Add the section of the page that contains values for the current group","label":0,"id":407362}
{"project":"presto-0.278","comment":"\/** * two types of oldShardUuidsMap entry * a. shard1         -> delete shard * b. shard2 delta2  -> delete shard and delta * * see replaceDeltaUuids * a is essentially equal to A * b is essentially equal to B * * @param tableSupportsDeltaDelete table table_supports_delta_delete properties *\/","label":0,"id":407363}
{"project":"presto-0.278","comment":"\/\/ Even though Hadoop is accessed by proxy, Hadoop still tries to resolve hadoop-master","label":0,"id":407364}
{"project":"presto-0.278","comment":"\/\/ the buffer is in the NO_MORE_BUFFERS state now","label":0,"id":407365}
{"project":"presto-0.278","comment":"\/** * Creates a schema. *\/","label":0,"id":407366}
{"project":"presto-0.278","comment":"\/**     * mock Prometheus instant query     *\/","label":0,"id":407367}
{"project":"presto-0.278","comment":"\/\/ reset memory revocation listener so that OperatorContext doesn't hold any references to Driver instance","label":0,"id":407368}
{"project":"presto-0.278","comment":"\/\/ shard boundary time zone shifted -8h from input timezone, time range covers 8h of day 0 and full day of day 1","label":0,"id":407369}
{"project":"presto-0.278","comment":"\/\/ fetch no data and verify","label":0,"id":407370}
{"project":"presto-0.278","comment":"\/\/ One value in range","label":0,"id":407371}
{"project":"presto-0.278","comment":"\/\/ set symbol stats to unknown, so the join cardinality cannot be estimated","label":0,"id":407372}
{"project":"presto-0.278","comment":"\/\/ If this becomes the actual cause of a failed query there is a bug in the task state machine.","label":0,"id":407373}
{"project":"presto-0.278","comment":"\/\/ comparison case","label":0,"id":407374}
{"project":"presto-0.278","comment":"\/\/ OUTER joins into NestedLoopsJoin and remove \"type == INNER\" condition in LocalExecutionPlanner.visitJoin()","label":0,"id":407375}
{"project":"presto-0.278","comment":"\/\/ This also checks that the query in the general pool is successfully moved to the reserved pool.","label":0,"id":407376}
{"project":"presto-0.278","comment":"\/\/ drop all symbols in property because delete doesn't pass on any of the columns","label":0,"id":407377}
{"project":"presto-0.278","comment":"\/\/ New filters may be created in between logical optimization and physical optimization.","label":0,"id":407378}
{"project":"presto-0.278","comment":"\/* anychar '.' *\/","label":0,"id":407379}
{"project":"presto-0.278","comment":"\/\/ revoke 2 bytes in operator11","label":0,"id":407380}
{"project":"presto-0.278","comment":"\/\/ if source is a table scan and project is local we fold it directly into the filter and project\/\/ otherwise we plan it as a normal operator","label":0,"id":407381}
{"project":"presto-0.278","comment":"\/\/ the simulator should advance until the stripe is full","label":0,"id":407382}
{"project":"presto-0.278","comment":"\/\/ When joining to subquery, prune unused columns from subquery","label":0,"id":407383}
{"project":"presto-0.278","comment":"\/\/ We can't make those inferences if the unprocessableExpressions are non-deterministic","label":0,"id":407384}
{"project":"presto-0.278","comment":"\/** * Json description to parse a single field from a Kafka topic message. See {@link com.facebook.presto.kafka.KafkaTopicDescription} for more details. *\/","label":0,"id":407385}
{"project":"presto-0.278","comment":"\/\/ Convert it to a ~midnight in UTC.","label":0,"id":407386}
{"project":"presto-0.278","comment":"\/\/ test out of order fields in nested Row type","label":0,"id":407387}
{"project":"presto-0.278","comment":"\/\/ * Conjuncts in non-deterministic expressions and non-TupleDomain-expressible expressions should","label":0,"id":407388}
{"project":"presto-0.278","comment":"\/\/ This exception is an API response and not a server error","label":0,"id":407389}
{"project":"presto-0.278","comment":"\/\/ fetchFunctionMetadataDirect does not produce the same metadata reference","label":0,"id":407390}
{"project":"presto-0.278","comment":"\/\/ We had previous results buffered, but the remaining page starts with new group values","label":0,"id":407391}
{"project":"presto-0.278","comment":"\/** * The minimum average value sizes. * The actual average value size is no less than the return value. * It provides a lower bound of the size of data to be loaded *\/","label":0,"id":407392}
{"project":"presto-0.278","comment":"\/\/ Convert user defined type to base type","label":0,"id":407393}
{"project":"presto-0.278","comment":"\/\/ Assert that mockClient is used to fetch data since its a cache miss","label":0,"id":407394}
{"project":"presto-0.278","comment":"\/\/ Each element has 1 character and 1 offset so (1 + Integer.BYTES)","label":0,"id":407395}
{"project":"presto-0.278","comment":"\/\/ Only grouped symbols projected symbols are passed through","label":0,"id":407396}
{"project":"presto-0.278","comment":"\/\/ Single value overlap","label":0,"id":407397}
{"project":"presto-0.278","comment":"\/\/ Therefore we can end up with this implicit cast, and have to move it into a post-projection","label":0,"id":407398}
{"project":"presto-0.278","comment":"\/\/ noinspection Duplicates","label":0,"id":407399}
{"project":"presto-0.278","comment":"\/\/ and they should stay blocked until more memory becomes available","label":0,"id":407400}
{"project":"presto-0.278","comment":"\/\/ 2            0b001        123456700       (1234567 << 3) | 0b001","label":0,"id":407401}
{"project":"presto-0.278","comment":"\/\/localhost\").setUserBindSearchPattern(\"uid=${USER},ou=org,dc=test,dc=com\").setUserBaseDistinguishedName(\"dc=test,dc=com\").setGroupAuthorizationSearchPattern(\"&(objectClass=user)(memberOf=cn=group)(user=username)\"));","label":0,"id":407402}
{"project":"presto-0.278","comment":"\/\/ used position.","label":0,"id":407403}
{"project":"presto-0.278","comment":"\/**     * Tests information schema predicate pushdown when both schema and table name are specified.     *\/","label":0,"id":407404}
{"project":"presto-0.278","comment":"\/\/ Invoke Special","label":0,"id":407405}
{"project":"presto-0.278","comment":"\/\/ Access denied to columns other than name & comment {user - maria, group - etldev, role - etl_role}","label":0,"id":407406}
{"project":"presto-0.278","comment":"\/\/ single int divisor","label":0,"id":407407}
{"project":"presto-0.278","comment":"\/\/ Since we don't have stats for cardinality about the unnest column, we cannot estimate the row count.","label":0,"id":407408}
{"project":"presto-0.278","comment":"\/\/ blockingPageSink that will return blocked future","label":0,"id":407409}
{"project":"presto-0.278","comment":"\/\/ dictionary columns and one does not compress well, so if we convert it to direct we can continue to use the existing dictionaries","label":0,"id":407410}
{"project":"presto-0.278","comment":"\/\/ update our record of sources and schedule drivers for new partitioned splits","label":0,"id":407411}
{"project":"presto-0.278","comment":"\/\/ constant == coalesce","label":0,"id":407412}
{"project":"presto-0.278","comment":"\/\/ Extract the static ones","label":0,"id":407413}
{"project":"presto-0.278","comment":"\/\/ (-42 - 1)*1000 + 999 = -42001","label":0,"id":407414}
{"project":"presto-0.278","comment":"\/\/ randomly pick a existing value","label":0,"id":407415}
{"project":"presto-0.278","comment":"\/** * @return cache quota requirement for a given schema and table * * @param schema * @param table *\/","label":0,"id":407416}
{"project":"presto-0.278","comment":"\/** * TupleDomain is internally represented as a normalized map of each column to its * respective allowable value Domain. Conceptually, these Domains can be thought of * as being AND'ed together to form the representative predicate. * <p> * This map is normalized in the following ways: * 1) The map will not contain Domain.none() as any of its values. If any of the Domain * values are Domain.none(), then the whole map will instead be null. This enforces the fact that * any single Domain.none() value effectively turns this TupleDomain into \"none\" as well. * 2) The map will not contain Domain.all() as any of its values. Our convention here is that * any unmentioned column is equivalent to having Domain.all(). To normalize this structure, * we remove any Domain.all() values from the map. *\/","label":0,"id":407417}
{"project":"presto-0.278","comment":"\/\/ by operator factories (e.g., duplicate and noMoreSinkFactories).","label":0,"id":407418}
{"project":"presto-0.278","comment":"\/** * Provides the logical properties for a FilterNode. These properties reflect the effects of applying predicates to the source properties. * * @param filterNode * @return The logical properties for a FilterNode. *\/","label":0,"id":407419}
{"project":"presto-0.278","comment":"\/\/ staging = \/tmp\/testXXX\/staging","label":0,"id":407420}
{"project":"presto-0.278","comment":"\/\/ this effectively disables the retries","label":0,"id":407421}
{"project":"presto-0.278","comment":"\/\/ we never call get() on the response future. This behavior needs to be fixed in airlift","label":0,"id":407422}
{"project":"presto-0.278","comment":"\/\/ let's split in the middle; this way objects from the larger set with values","label":0,"id":407423}
{"project":"presto-0.278","comment":"\/\/ parse metadata types","label":0,"id":407424}
{"project":"presto-0.278","comment":"\/\/ - inputType is timeFieldExpression type,","label":0,"id":407425}
{"project":"presto-0.278","comment":"\/\/ 0            0b000        123456789     (123456789 << 3) | 0b000","label":0,"id":407426}
{"project":"presto-0.278","comment":"\/\/ fetchFunctionsDirect does not produce the same function reference","label":0,"id":407427}
{"project":"presto-0.278","comment":"\/\/ TODO: Extend metastore cache scope to the entire transaction","label":1,"id":407428}
{"project":"presto-0.278","comment":"\/\/\/\/ Field Instructions\/\/","label":0,"id":407429}
{"project":"presto-0.278","comment":"\/\/ \/   \\","label":0,"id":407430}
{"project":"presto-0.278","comment":"\/\/ a mapping from remote file `F` to a range map `M`; the corresponding local cache file for each range in `M` represents the cached chunk of `F`","label":0,"id":407431}
{"project":"presto-0.278","comment":"\/\/ testingPagesSerde();","label":0,"id":407432}
{"project":"presto-0.278","comment":"\/\/ If a query has requested resource overcommit, only kill it if the cluster has run out of memory","label":0,"id":407433}
{"project":"presto-0.278","comment":"\/\/ FilePath is a unique identifier for a file, however it can be a long string","label":0,"id":407434}
{"project":"presto-0.278","comment":"\/**     * Given a logical expression, the goal is to convert to conjunctive normal form (CNF).     * This requires making a call to `pushNegationToLeaves`. There is no guarantee as to     * the balance of the resulting expression tree.     *     * This only applies to propositional logic. this utility cannot be applied to high-order logic.     * Examples of non-applicable cases could be f(a AND b) > 5     *     * NOTE: This may exponentially increase the number of RowExpressions in the expression.     *     * An applicable example:     *     *        NOT     *         |     *      ___OR_                          AND     *     \/      \\                      \/      \\     *    NOT     OR        ==>        OR      AND     *     |     \/  \\                 \/  \\     \/   \\     *    OR   c   NOT              a    b   NOT  d     *   \/  \\        |                         |     *  a    b       d                         c     *\/","label":0,"id":407435}
{"project":"presto-0.278","comment":"\/\/ Recursive listing of object keys only","label":0,"id":407436}
{"project":"presto-0.278","comment":"\/\/ TODO: Use linear regression to predict stats if we have only 1 table.","label":1,"id":407437}
{"project":"presto-0.278","comment":"\/\/ so a new PageBuilder is constructed (instead of using PageBuilder.reset)","label":0,"id":407438}
{"project":"presto-0.278","comment":"\/\/ the default positions array for top level BlockEncodingBuffer","label":0,"id":407439}
{"project":"presto-0.278","comment":"\/\/ If present, this means the resource manager is determining the largest query, so do not make this determination locally","label":0,"id":407440}
{"project":"presto-0.278","comment":"\/\/localhost:8080?customHeaders=\" + encodedCustomHeaders);","label":0,"id":407441}
{"project":"presto-0.278","comment":"\/\/ TODO: support path override in Iceberg table creation","label":1,"id":407442}
{"project":"presto-0.278","comment":"\/\/ select sum(extendedprice * discount) as revenue\/\/ from lineitem\/\/ where shipdate >= '1994-01-01'\/\/ and shipdate < '1995-01-01'\/\/ and discount >= 0.05\/\/ and discount <= 0.07\/\/ and quantity < 24;","label":0,"id":407443}
{"project":"presto-0.278","comment":"\/\/ inline the expressions","label":0,"id":407444}
{"project":"presto-0.278","comment":"\/\/ eagerly send authentication if possible","label":0,"id":407445}
{"project":"presto-0.278","comment":"\/\/\/\/ Normalize fixed offset time zones.\/\/\/\/ In some zones systems, these will start with UTC, GMT or UT.","label":0,"id":407446}
{"project":"presto-0.278","comment":"\/\/ Was present and now it's spilled","label":0,"id":407447}
{"project":"presto-0.278","comment":"\/\/ move task 0 to next level","label":0,"id":407448}
{"project":"presto-0.278","comment":"\/\/ Non-negotiable if we require a specific partitioning","label":0,"id":407449}
{"project":"presto-0.278","comment":"\/**     * Additional buffers can be added.     * Any next state is allowed.     *\/","label":0,"id":407450}
{"project":"presto-0.278","comment":"\/\/ listeners should not be added if we are in a terminal state, but listener should fire","label":0,"id":407451}
{"project":"presto-0.278","comment":"\/\/ A set of points such that:","label":0,"id":407452}
{"project":"presto-0.278","comment":"\/\/ Therefore, such data won't round trip. The data read back is expected to be 1 second later than the original value.","label":0,"id":407453}
{"project":"presto-0.278","comment":"\/\/ due to https:\/\/github.com\/facebook\/presto\/issues\/4571 MIN_VALUE solely cannot be used","label":0,"id":407454}
{"project":"presto-0.278","comment":"\/** * append the index for the probe and append nulls for the build *\/","label":0,"id":407455}
{"project":"presto-0.278","comment":"\/\/ analyze finish requires that all data be in one stream\/\/ this node changes the input organization completely, so we do not pass through parent preferences","label":0,"id":407456}
{"project":"presto-0.278","comment":"\/** * Cross joins don't support output symbol selection, so push the project-off through the node. *\/","label":0,"id":407457}
{"project":"presto-0.278","comment":"\/**     * Drops the specified role in the specified catalog.     *\/","label":0,"id":407458}
{"project":"presto-0.278","comment":"\/\/ root.maxRunningQueries = 10, root.a.maxRunningQueries = 2, root.b.maxRunningQueries = 10. Will have 10 running queries and 26 left queued.","label":0,"id":407459}
{"project":"presto-0.278","comment":"\/\/ null map keys are not supported","label":0,"id":407460}
{"project":"presto-0.278","comment":"\/\/ Convert revocable memory to user memory as inMemoryPagesIndexWithHashStrategies holds on to memory so we no longer can revoke","label":0,"id":407461}
{"project":"presto-0.278","comment":"\/\/ just duplicate the comprehensive limit tests but also do negative tests for the case where TopN is not final","label":0,"id":407462}
{"project":"presto-0.278","comment":"\/**     * @return the number of borrowed arrays which have not been returned     *\/","label":0,"id":407463}
{"project":"presto-0.278","comment":"\/\/ We have not scheduled a single split so far.\/\/ But this shouldn't be possible. See usage of EmptySplit in this method.","label":0,"id":407464}
{"project":"presto-0.278","comment":"\/\/ Any readers added after finish will simply receive no data.","label":0,"id":407465}
{"project":"presto-0.278","comment":"\/\/ This function mirrors the behavior of function hashCode in","label":0,"id":407466}
{"project":"presto-0.278","comment":"\/**     * This method signifies a contract to callers that as an optimization, they can encode BooleanType blocks as a byte[] directly     * and potentially bypass the BlockBuilder \/ BooleanType abstraction in the name of efficiency. If in the future BooleanType     * encoding changes such that {@link ByteArrayBlock} is not always a valid or efficient representation, then this method must be     * removed and any usages changed     *\/","label":1,"id":407467}
{"project":"presto-0.278","comment":"\/**     * Performs one pass of generating more equivalences by rewriting sub-expressions in terms of known equivalences.     *\/","label":0,"id":407468}
{"project":"presto-0.278","comment":"\/\/ constant filter function errors","label":0,"id":407469}
{"project":"presto-0.278","comment":"\/\/ delete random UUID","label":0,"id":407470}
{"project":"presto-0.278","comment":"\/**     * Get the result once the unit of work is done and the processor hasn't finished.     *\/","label":0,"id":407471}
{"project":"presto-0.278","comment":"\/**     * @return a MethodHandle field that represents the lambda expression     *\/","label":0,"id":407472}
{"project":"presto-0.278","comment":"\/\/ As comparing blocks is messy, we just sort by block hash hoping for the best","label":0,"id":407473}
{"project":"presto-0.278","comment":"\/\/ functions that take null as input","label":0,"id":407474}
{"project":"presto-0.278","comment":"\/\/ It is safe to set extraFileContext as empty because downstream code always checks if its present before proceeding.","label":0,"id":407475}
{"project":"presto-0.278","comment":"\/\/ Set our value to the row ID","label":0,"id":407476}
{"project":"presto-0.278","comment":"\/\/ ColumnarRow is used to get the column blocks represents each state, this allows to","label":0,"id":407477}
{"project":"presto-0.278","comment":"\/** * Unwraps {@link java.nio.ByteBuffer} instances backed by arrays that are exact matches in size to * their buffer. This is expected during wrapped encrypt \/ decrypt buffers and those buffers are * not externally visible (and therefore safe to unwrap without copies) *\/","label":0,"id":407478}
{"project":"presto-0.278","comment":"\/\/ Query should succeed since broadcast join will be disabled on retry","label":0,"id":407479}
{"project":"presto-0.278","comment":"\/\/ add pages:\/\/ addPages must be called regardless of whether pages is an empty list because\/\/ clientCallback can keep stats of requests and responses. For example, it may\/\/ keep track of how often a client returns empty response and adjust request\/\/ frequency or buffer size.","label":0,"id":407480}
{"project":"presto-0.278","comment":"\/\/ write value element","label":0,"id":407481}
{"project":"presto-0.278","comment":"\/\/ fails.","label":0,"id":407482}
{"project":"presto-0.278","comment":"\/\/ already in same equivalence class, nothing to do\/\/ note that we do not check head1.equal(head2) so that two different variable reference objects\/\/ referencing the same reference are both added to the equivalence class","label":0,"id":407483}
{"project":"presto-0.278","comment":"\/\/ we don't want to lose any trailing bits","label":0,"id":407484}
{"project":"presto-0.278","comment":"\/\/ Two matches: [\"new\"] and [\"\"]","label":0,"id":407485}
{"project":"presto-0.278","comment":"\/\/ We run it again to mark this for intermediate join nodes.","label":0,"id":407486}
{"project":"presto-0.278","comment":"\/**     * Adds otherKeys to thisKeys.     *     * @param thisKeys     * @param otherKeys     *\/","label":0,"id":407487}
{"project":"presto-0.278","comment":"\/** * Current position for writing in buffer. *\/","label":0,"id":407488}
{"project":"presto-0.278","comment":"\/\/ Each fragment has a partitioning handle, which is derived from leaf nodes in the fragment.\/\/ Leaf nodes with different partitioning handle are not allowed to share a single fragment\/\/ (except for special cases as detailed in addSourceDistribution).\/\/ As a result, it is not necessary to check the compatibility between node.getSources because\/\/ they are guaranteed to be compatible.\/\/ * If any child is \"not capable\", return \"not capable\"\/\/ * When all children are capable (\"capable and useful\" or \"capable but not useful\")\/\/ * Usefulness:\/\/ * if any child is \"useful\", this node is \"useful\"\/\/ * if no children is \"useful\", this node is \"not useful\"\/\/ * Recovery Eligibility:\/\/ * if all children is \"recovery eligible\", this node is \"recovery eligible\"\/\/ * if any child is \"not recovery eligible\", this node is \"not recovery eligible\"","label":0,"id":407489}
{"project":"presto-0.278","comment":"\/**     * Compute split-per-shard (separate split for each shard).     *\/","label":0,"id":407490}
{"project":"presto-0.278","comment":"\/** * This is mainly used to get Kafka cluster metadata such as broker list so that Kafka Connector can communicate with Kafka cluster *\/","label":0,"id":407491}
{"project":"presto-0.278","comment":"\/** * Recreates partition schema based on the table schema and the column * coercions map. * <p> * partitionColumnCount is needed to handle cases when the partition * has less columns than the table. * <p> * If the partition has more columns than the table does, the partitionSchemaDifference * map is expected to contain information for the missing columns. *\/","label":0,"id":407492}
{"project":"presto-0.278","comment":"\/\/ there can be a race where finished is set between the check above and here\/\/ it is expected that the exchanger ignores pages after finish","label":0,"id":407493}
{"project":"presto-0.278","comment":"\/** * Gets the Short value of the given Presto column. * * @param name Column name * @return Short value *\/","label":0,"id":407494}
{"project":"presto-0.278","comment":"\/\/ Test when the materialized view is fully materialized","label":0,"id":407495}
{"project":"presto-0.278","comment":"\/\/ use all optimizers, including AddExchanges","label":0,"id":407496}
{"project":"presto-0.278","comment":"\/\/ Generate same test case","label":0,"id":407497}
{"project":"presto-0.278","comment":"\/\/ invisible to others","label":0,"id":407498}
{"project":"presto-0.278","comment":"\/**     * If this object is passed as one of the columns for {@code createPageSource},     * it will be populated as an additional column containing the index of each     * row read.     *\/","label":0,"id":407499}
{"project":"presto-0.278","comment":"\/\/ The only reason we created it is to wait until lookup source is ready.","label":0,"id":407500}
{"project":"presto-0.278","comment":"\/\/ TODO remove this when double statistics are changed to correctly deal with NaNs\/\/ if either min, max, or sum is NaN, ignore the stat","label":1,"id":407501}
{"project":"presto-0.278","comment":"\/**         * Separate JoinFilterFunctions have to be created and supplied for each thread using PositionLinks         * since JoinFilterFunction is not thread safe...         *\/","label":0,"id":407502}
{"project":"presto-0.278","comment":"\/\/ Ignore the first two lines, as they are an event since boot (RESET followed by event line)","label":0,"id":407503}
{"project":"presto-0.278","comment":"\/**     * Utility method that takes an iterator of {@link AddFile}s and a predicate and returns an iterator of {@link AddFile}s     * that satisfy the predicate (predicate evaluates to a deterministic NO)     *\/","label":0,"id":407504}
{"project":"presto-0.278","comment":"\/\/ range frame with default end","label":0,"id":407505}
{"project":"presto-0.278","comment":"\/\/ Prune fields that are not referenced in any outer scope","label":0,"id":407506}
{"project":"presto-0.278","comment":"\/\/ there is a single sample at min so we interpolate with less weight","label":0,"id":407507}
{"project":"presto-0.278","comment":"\/\/ Don't use coordinator as worker","label":0,"id":407508}
{"project":"presto-0.278","comment":"\/\/ sum and minAverageValueSizeInBytes are not used in this test; they could be arbitrary numbers","label":0,"id":407509}
{"project":"presto-0.278","comment":"\/\/ TEST: 1 to n inner join between customers and orders with limit(1) on the right table.","label":0,"id":407510}
{"project":"presto-0.278","comment":"\/\/ Test CTE aliased twice for self-join","label":0,"id":407511}
{"project":"presto-0.278","comment":"\/\/ check if keys are supplied in a zset\/\/ via the table description doc","label":0,"id":407512}
{"project":"presto-0.278","comment":"\/\/ remove the previous or following file as well","label":0,"id":407513}
{"project":"presto-0.278","comment":"\/\/ Create a partitioned table","label":0,"id":407514}
{"project":"presto-0.278","comment":"\/** * Compares sort channel (if applicable) values at the specified positions. *\/","label":0,"id":407515}
{"project":"presto-0.278","comment":"\/\/ add source for pipeline 2 driver group 3, and mark driver group 3 as no more splits","label":0,"id":407516}
{"project":"presto-0.278","comment":"\/\/ write an 8-bucket partition","label":0,"id":407517}
{"project":"presto-0.278","comment":"\/** * Only retains rows that have identical values for each respective fieldSet. *\/","label":0,"id":407518}
{"project":"presto-0.278","comment":"\/\/ the memory revocation request listeners are added here in a separate initialize() method","label":0,"id":407519}
{"project":"presto-0.278","comment":"\/** * Update memory reservation. * * @return false if the caller should yield because requested memory reservation cannot be satisfied *\/","label":0,"id":407520}
{"project":"presto-0.278","comment":"\/\/ log node that are no longer active (but not shutting down)","label":0,"id":407521}
{"project":"presto-0.278","comment":"\/\/ write repetition levels","label":0,"id":407522}
{"project":"presto-0.278","comment":"\/\/ removes the 8% of the objects for faster GC and object overhead.","label":0,"id":407523}
{"project":"presto-0.278","comment":"\/\/ That's why a copy must be made here.","label":0,"id":407524}
{"project":"presto-0.278","comment":"\/\/ This variable acts as a staging area. When new splits (encapsulated in TaskSource) are","label":0,"id":407525}
{"project":"presto-0.278","comment":"\/\/ add the pages to this buffer, which will increase the reference count","label":0,"id":407526}
{"project":"presto-0.278","comment":"\/\/ Only right side cut","label":0,"id":407527}
{"project":"presto-0.278","comment":"\/\/\"));","label":0,"id":407528}
{"project":"presto-0.278","comment":"\/\/ Linear hash table size is the highest power of two less than or equal to number of values * 4. This means that the\/\/ table is under half full, e.g. 127 elements gets 256 slots.","label":0,"id":407529}
{"project":"presto-0.278","comment":"\/\/ this is the left-most true predicate. So return it.","label":0,"id":407530}
{"project":"presto-0.278","comment":"\/\/ runtime overflow","label":0,"id":407531}
{"project":"presto-0.278","comment":"\/\/ Wrap them in a FunctionCall that will throw the exception if the expression is actually executed","label":0,"id":407532}
{"project":"presto-0.278","comment":"\/** * Lookup up a function with name and fully bound types. This can only be used for builtin functions. {@link #resolveFunction(Optional, Optional, QualifiedObjectName, List)} * should be used for dynamically registered functions. * * @throws PrestoException if function could not be found *\/","label":0,"id":407533}
{"project":"presto-0.278","comment":"\/\/ only retry on waiting for lock exception","label":0,"id":407534}
{"project":"presto-0.278","comment":"\/\/ HACK: bigint grouped aggregation has special operators that do not use precomputed hash, so we can skip hash generation","label":1,"id":407535}
{"project":"presto-0.278","comment":"\/\/ JDBI returns 0 as the column_id when the temporal_column_id is set to NULL\/\/ jdbi issue https:\/\/github.com\/jdbi\/jdbi\/issues\/154","label":0,"id":407536}
{"project":"presto-0.278","comment":"\/\/ Remove nodes that don't exist anymore\/\/ Make a copy to materialize the set difference","label":0,"id":407537}
{"project":"presto-0.278","comment":"\/\/ 1 byte to denote if null + 8 bytes for the value (integer is of long type)","label":0,"id":407538}
{"project":"presto-0.278","comment":"\/\/ Map with varchar keys","label":0,"id":407539}
{"project":"presto-0.278","comment":"\/\/ and expression be:","label":0,"id":407540}
{"project":"presto-0.278","comment":"\/\/ the output from a filter or aggregation due to lack of estimates.","label":0,"id":407541}
{"project":"presto-0.278","comment":"\/\/ parse column mappings from column handles","label":0,"id":407542}
{"project":"presto-0.278","comment":"\/\/ Therefore, we use concatenation of identity hash code and size of the object to identify an object.","label":0,"id":407543}
{"project":"presto-0.278","comment":"\/\/ TEST: 1 to n left join between customers and orders - no keys are propagated","label":0,"id":407544}
{"project":"presto-0.278","comment":"\/** * Hive Metastore Cache *\/","label":0,"id":407545}
{"project":"presto-0.278","comment":"\/\/ No need to inherit from DomainTranslator; the class will be deprecated in the long term","label":0,"id":407546}
{"project":"presto-0.278","comment":"\/\/ rename foo.txt to foo.txt when foo.txt does not exist","label":0,"id":407547}
{"project":"presto-0.278","comment":"\/** * Returns a projected version of this equivalence class property. * Variables in each class are mapped to output variables in the context beyond the project operation. * It is possible that this operation projects all members of a particular class. * * @param inverseVariableMappings * @return A projected version of this equivalence class property. *\/","label":0,"id":407548}
{"project":"presto-0.278","comment":"\/\/ check top level","label":0,"id":407549}
{"project":"presto-0.278","comment":"\/**     * Size of a single segment of a BigArray     *\/","label":0,"id":407550}
{"project":"presto-0.278","comment":"\/\/ verifyJvmRequirements();","label":0,"id":407551}
{"project":"presto-0.278","comment":"\/\/ Due to the way MemoryRevokingScheduler works, revoking tasks one by one, simultaneous revoke of two tasks is impossible\/\/ This is why updating this static member is safe","label":0,"id":407552}
{"project":"presto-0.278","comment":"\/** * @param columns columns that should show up in the output page, in this order *\/","label":0,"id":407553}
{"project":"presto-0.278","comment":"\/**     * Gets an object value.     *     * @param channel argument number     * @param position row within the partition, starting at zero     *\/","label":0,"id":407554}
{"project":"presto-0.278","comment":"\/\/ Add an empty block to test the handling of empty intermediates","label":0,"id":407555}
{"project":"presto-0.278","comment":"\/**     * Calculate the indices for each level.     *     * A given level contains a certain number of items.  We give it a capacity     * equal to the next multiple of `degree`, so that each parent will have     * an equal number (`degree`) of children.  This means the next level will     * have `capacity\/degree` nodes, which yields a capacity equal to the next     * multiple, and so on, until the number of items is 1.     *     * Since we are storing each node as 4 doubles, we will actually multiply     * every index by 4.     *\/","label":0,"id":407556}
{"project":"presto-0.278","comment":"\/\/ make sure that from value is the smaller one","label":0,"id":407557}
{"project":"presto-0.278","comment":"\/**     * Return the subset of shard uuids that exist     *\/","label":0,"id":407558}
{"project":"presto-0.278","comment":"\/\/ Skip the row ID ordinal","label":0,"id":407559}
{"project":"presto-0.278","comment":"\/\/ equality filter","label":0,"id":407560}
{"project":"presto-0.278","comment":"\/\/ A mix of domain and remaining predicates","label":0,"id":407561}
{"project":"presto-0.278","comment":"\/\/ partitions in metastore but not in file system","label":0,"id":407562}
{"project":"presto-0.278","comment":"\/\/ test try with invalid JSON","label":0,"id":407563}
{"project":"presto-0.278","comment":"\/\/ remove all remaining pages from first queue, should not be finished","label":0,"id":407564}
{"project":"presto-0.278","comment":"\/\/ test reading second and fourth stripes","label":0,"id":407565}
{"project":"presto-0.278","comment":"\/**     * Create a map block directly without per element validations.     * <p>     * Internal use by com.facebook.presto.spi.Block only.     *\/","label":0,"id":407566}
{"project":"presto-0.278","comment":"\/\/ If the table definition in the metastore is different than what this tx wants to create\/\/ then there is a conflict (e.g., current tx wants to create T(a: bigint),\/\/ but another tx already created T(a: varchar)).\/\/ This may be a problem if there is an insert after this step.","label":1,"id":407567}
{"project":"presto-0.278","comment":"\/\/ right now we would only remove partitions y >= 20. We should eventually consider y <= 5 as well.","label":0,"id":407568}
{"project":"presto-0.278","comment":"\/\/ add reference for shard 3","label":0,"id":407569}
{"project":"presto-0.278","comment":"\/\/ Initialize inputChannels fields","label":0,"id":407570}
{"project":"presto-0.278","comment":"\/\/ 256 rows left in this row group, then the nextBatchSize should be 1024 instead of 512. So we need to grow the","label":0,"id":407571}
{"project":"presto-0.278","comment":"\/\/ Assume that one parameter will be set for each group of labels","label":0,"id":407572}
{"project":"presto-0.278","comment":"\/\/ and is more of a safety check than a guarantee","label":0,"id":407573}
{"project":"presto-0.278","comment":"\/\/ Use JSON as the default format for EXPLAIN (TYPE IO).","label":0,"id":407574}
{"project":"presto-0.278","comment":"\/\/\/\/ Invoke Interface\/\/","label":0,"id":407575}
{"project":"presto-0.278","comment":"\/\/ If expression with subquery","label":0,"id":407576}
{"project":"presto-0.278","comment":"\/\/ updating variable and fixed runs","label":0,"id":407577}
{"project":"presto-0.278","comment":"\/**     * Returns the unique index of each position value.     *\/","label":0,"id":407578}
{"project":"presto-0.278","comment":"\/\/some-fake-location\";","label":0,"id":407579}
{"project":"presto-0.278","comment":"\/\/ lambda method information","label":0,"id":407580}
{"project":"presto-0.278","comment":"\/** * Returns {@link RelationType#indexOf(Field) field index} of the field in the containing relation. *\/","label":0,"id":407581}
{"project":"presto-0.278","comment":"\/\/ zero distance","label":0,"id":407582}
{"project":"presto-0.278","comment":"\/** * Write the specified block to the specified output *\/","label":0,"id":407583}
{"project":"presto-0.278","comment":"\/\/ TODO : Add e2e tests for this class","label":1,"id":407584}
{"project":"presto-0.278","comment":"\/\/ remove 1 split","label":0,"id":407585}
{"project":"presto-0.278","comment":"\/** * Signals that process has produced a result. {@link #process()} will be called again. *\/","label":0,"id":407586}
{"project":"presto-0.278","comment":"\/\/ propagate it at split level so the parquet pushdown can leverage it.","label":0,"id":407587}
{"project":"presto-0.278","comment":"\/\/ ORDER BY should \"see\" both output and FROM fields during initial analysis and non-aggregation query planning","label":0,"id":407588}
{"project":"presto-0.278","comment":"\/\/ Separate static method to avoid embedding references to \"this\"","label":0,"id":407589}
{"project":"presto-0.278","comment":"\/\/ basic sanity check to provide a better error message","label":0,"id":407590}
{"project":"presto-0.278","comment":"\/** * Base class for all providers that return values for a selected column. *\/","label":0,"id":407591}
{"project":"presto-0.278","comment":"\/\/ If file handle is valid, read the rows back for the spilled file","label":0,"id":407592}
{"project":"presto-0.278","comment":"\/\/ set DwrfStripeCacheData only if the stripe cache feature is enabled and the file has the stripe cache","label":0,"id":407593}
{"project":"presto-0.278","comment":"\/** * Writer is closing the file. *\/","label":0,"id":407594}
{"project":"presto-0.278","comment":"\/\/ Too many items in the map to call ImmutableMap.of() :-(","label":0,"id":407595}
{"project":"presto-0.278","comment":"\/\/ TODO: verify contents","label":1,"id":407596}
{"project":"presto-0.278","comment":"\/\/ get the next batch of completed deletes","label":0,"id":407597}
{"project":"presto-0.278","comment":"\/** * This exception is for stopping retries for S3 calls that shouldn't be retried. * For example, \"Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403 ...\" *\/","label":0,"id":407598}
{"project":"presto-0.278","comment":"\/** * Compares the hashed columns in this PagesHashStrategy to the hashed columns in the Page. * The values are compared positionally under \"not distinct from\" semantics. * {@code rightChannels} must have the same number of entries as the hashed columns * and each entry is expected to be the same type. *\/","label":0,"id":407599}
{"project":"presto-0.278","comment":"\/\/ output is recycled on first use which requires output to be closed","label":0,"id":407600}
{"project":"presto-0.278","comment":"\/\/ Locate the column family mapping via the Handle\/\/ We already validated this earlier, so it'll exist","label":0,"id":407601}
{"project":"presto-0.278","comment":"\/\/ TODO Adjust statistics to take into account required subfields","label":1,"id":407602}
{"project":"presto-0.278","comment":"\/\/ This is a very conservative way on estimating stats after unnest. We assume each symbol","label":0,"id":407603}
{"project":"presto-0.278","comment":"\/\/ output the key","label":0,"id":407604}
{"project":"presto-0.278","comment":"\/** * Creates {@link WorkProcessor} from {@link Process}. {@link Process} instance will be dereferenced immediately after {@link WorkProcessor} is finished. *\/","label":0,"id":407605}
{"project":"presto-0.278","comment":"\/** * Converts the provided {@param column} to FieldSchema *\/","label":0,"id":407606}
{"project":"presto-0.278","comment":"\/\/ NOT case","label":0,"id":407607}
{"project":"presto-0.278","comment":"\/\/ no time zone mismatch, time range covers 11 hours of day 1 and 13 hours of day 2","label":0,"id":407608}
{"project":"presto-0.278","comment":"\/\/ they are guaranteed to be compatible.","label":0,"id":407609}
{"project":"presto-0.278","comment":"\/\/ the metastore may store an estimate, so the value stored may be higher than the total number of rows","label":0,"id":407610}
{"project":"presto-0.278","comment":"\/**     * Creates a schema.     *\/","label":0,"id":407611}
{"project":"presto-0.278","comment":"\/\/ Null Keys","label":0,"id":407612}
{"project":"presto-0.278","comment":"\/\/ Split","label":0,"id":407613}
{"project":"presto-0.278","comment":"\/\/ Verify the query cannot be submitted","label":0,"id":407614}
{"project":"presto-0.278","comment":"\/\/ by using a single thread executor, we don't need to worry about locking to ensure only","label":0,"id":407615}
{"project":"presto-0.278","comment":"\/\/ todo rewrite without BigInteger","label":1,"id":407616}
{"project":"presto-0.278","comment":"\/\/ normal case","label":0,"id":407617}
{"project":"presto-0.278","comment":"\/\/ filter functions on array columns","label":0,"id":407618}
{"project":"presto-0.278","comment":"\/\/ assert that pipeline 2 driver group [3, 7] will have no more drivers","label":0,"id":407619}
{"project":"presto-0.278","comment":"\/\/ TODO: use import when Java 7 compiler bug is fixed","label":1,"id":407620}
{"project":"presto-0.278","comment":"\/\/ Ordering is needed to make sure serialized plans are consistent for the same map","label":0,"id":407621}
{"project":"presto-0.278","comment":"\/\/ to accessing values in blocks. We use bytes to reduce memory foot print","label":0,"id":407622}
{"project":"presto-0.278","comment":"\/**     * OriginalExpression is a RowExpression container holding an {@param Expression} object     * that cannot be translated directly while constructing PlanNode.     * Typical examples are cases with `WITH` clauses or alias that the type or arguments information     * are not directly available given the substrees are not formed yet.     * OriginalExpression should not exist after optimization or serialized over the wire.     * All OriginalExpression should be translated to other corresponding RowExpression objects ultimately.     *\/","label":1,"id":407623}
{"project":"presto-0.278","comment":"\/\/ if there an overlap in null values, the bloom filter can not eliminate the overlap","label":0,"id":407624}
{"project":"presto-0.278","comment":"\/\/ create an empty partition","label":0,"id":407625}
{"project":"presto-0.278","comment":"\/\/ runs are one off","label":0,"id":407626}
{"project":"presto-0.278","comment":"\/\/ need to register coercions in case when join criteria requires coercion (e.g. join on char(1) = char(2))","label":0,"id":407627}
{"project":"presto-0.278","comment":"\/\/ i21 and i22 have overlapping low and high values and unknown distinct values","label":0,"id":407628}
{"project":"presto-0.278","comment":"\/\/ this shouldn't happen but could if another user added a partition during the write","label":0,"id":407629}
{"project":"presto-0.278","comment":"\/\/ they are serialized as json otherwise (value will be a LinkedHashMap).","label":0,"id":407630}
{"project":"presto-0.278","comment":"\/** * Return the shard nodes for a bucketed table. *\/","label":0,"id":407631}
{"project":"presto-0.278","comment":"\/\/ If the smallest cardinality is present and below the threshold, set the earlyReturn flag","label":0,"id":407632}
{"project":"presto-0.278","comment":"\/** * Rewrite network related exception to Presto exception *\/","label":0,"id":407633}
{"project":"presto-0.278","comment":"\/\/ represents the underlying data type of the distribution","label":0,"id":407634}
{"project":"presto-0.278","comment":"\/** * visitor returns true if all expressions are constant with respect to the group. *\/","label":0,"id":407635}
{"project":"presto-0.278","comment":"\/\/ The number of positions (rows) buffered so far","label":0,"id":407636}
{"project":"presto-0.278","comment":"\/\/ testNestedBlock(new ArrayType(new ArrayType(new ArrayType(createDecimalType(MAX_SHORT_PRECISION + 1)))));","label":0,"id":407637}
{"project":"presto-0.278","comment":"\/**     * Is the byte sequences at {@code offset} in the value at {@code position} equal     * to the byte sequence at {@code otherOffset} in {@code otherSlice}.     * This method must be implemented if @{code getSlice} is implemented.     *\/","label":0,"id":407638}
{"project":"presto-0.278","comment":"\/**     * Decodes the ordinal fixed bit value to actual fixed bit width value.     *\/","label":0,"id":407639}
{"project":"presto-0.278","comment":"\/\/ Shallow listing of files AND directories","label":0,"id":407640}
{"project":"presto-0.278","comment":"\/\/ todo this should be checked in analysis","label":1,"id":407641}
{"project":"presto-0.278","comment":"\/\/ lookup the columns","label":0,"id":407642}
{"project":"presto-0.278","comment":"\/\/ 2. references to complex expressions that appear only once","label":0,"id":407643}
{"project":"presto-0.278","comment":"\/\/ unpack the patch blob","label":0,"id":407644}
{"project":"presto-0.278","comment":"\/\/\/\/ Note: this code does not use the Java 8 stream APIs to avoid any extra object allocation\/\/\/\/ split disk ranges into \"big\" and \"small\"","label":0,"id":407645}
{"project":"presto-0.278","comment":"\/\/ Preserve order when creating assignments, so it's consistent when printed\/iterated. Some\/\/ optimizations create variable names by iterating over it, and this will make plan more consistent\/\/ in future runs.","label":0,"id":407646}
{"project":"presto-0.278","comment":"\/\/ TOTAL_VALUES_SIZE_IN_BYTES","label":0,"id":407647}
{"project":"presto-0.278","comment":"\/\/ In the worst case scenario, assume one Pinot table has 100 segments, then one presto query will be split into one segment per split,","label":0,"id":407648}
{"project":"presto-0.278","comment":"\/\/ mapping from current ProjectNode to new ProjectNode, used to identify the output layout","label":0,"id":407649}
{"project":"presto-0.278","comment":"\/\/ if (filter(cursor))","label":0,"id":407650}
{"project":"presto-0.278","comment":"\/\/ This way, if the partition is accessed in an ongoing transaction, staged data","label":0,"id":407651}
{"project":"presto-0.278","comment":"\/\/ numServersResponded < numServersQueried","label":0,"id":407652}
{"project":"presto-0.278","comment":"\/** * Gets the number of columns appended by this PagesHashStrategy. *\/","label":0,"id":407653}
{"project":"presto-0.278","comment":"\/\/ retain only hash variables preferred by parent nodes","label":0,"id":407654}
{"project":"presto-0.278","comment":"\/\/ that the CacheKeys will all contain the same combination of schema\/table\/family\/qualifier","label":0,"id":407655}
{"project":"presto-0.278","comment":"\/\/ 1. add partition columns and bucketed-by columns to streamPartitionColumns","label":0,"id":407656}
{"project":"presto-0.278","comment":"\/\/ zero means no timeout, so use a huge value that is effectively unlimited","label":0,"id":407657}
{"project":"presto-0.278","comment":"\/\/ If there is enough driver slots to deplete pending splits, one of the below would happen.","label":0,"id":407658}
{"project":"presto-0.278","comment":"\/\/ 2.a. Rewrite aggregate arguments","label":0,"id":407659}
{"project":"presto-0.278","comment":"\/\/ the same IN subquery used twice","label":0,"id":407660}
{"project":"presto-0.278","comment":"\/** * Check to see if this ORC file is from a future version and if so, * warn the user that we may not be able to read all of the column encodings. *\/","label":0,"id":407661}
{"project":"presto-0.278","comment":"\/**     * Call this method from your application whenever you     * want to dump the heap snapshot into a file.     *     * @param fileName name of the heap dump file     *\/","label":0,"id":407662}
{"project":"presto-0.278","comment":"\/\/ In this case we have 4GB - 1GB = 3GB available memory for the general pool\/\/ and the heap headroom and the config is more than that.","label":0,"id":407663}
{"project":"presto-0.278","comment":"\/\/ don't print a stack for a known errors","label":0,"id":407664}
{"project":"presto-0.278","comment":"\/\/ anything else is an input column to copy","label":0,"id":407665}
{"project":"presto-0.278","comment":"\/** * Connectors can choose to return ConnectorOutputMetadata from finishInsert or finishCreate. * <p> * The getInfo method must return a JSON-serializable object *\/","label":0,"id":407666}
{"project":"presto-0.278","comment":"\/\/ in this test. Triggering spilling based on differences of thousands of bytes rather than hundreds","label":0,"id":407667}
{"project":"presto-0.278","comment":"\/\/ Based on PluginClassLoader","label":0,"id":407668}
{"project":"presto-0.278","comment":"\/\/ Add the join clauses which are not supported back","label":0,"id":407669}
{"project":"presto-0.278","comment":"\/\/ Generate random size from each power of ten in [10, 100,000,000]","label":0,"id":407670}
{"project":"presto-0.278","comment":"\/\/ Per-column estimate left and right output size for complex plans or when size statistics is unavailable.","label":0,"id":407671}
{"project":"presto-0.278","comment":"\/** * Returns tables for the given schema name. * * @param schemaNameOrNull a structure containing schema name or {@literal null} * @return a list of table names with corresponding schemas. If schema name is null then returns * a list of tables for all schemas. Returns an empty list if a schema does not exist *\/","label":0,"id":407672}
{"project":"presto-0.278","comment":"\/** * This method can be expensive for complex types. *\/","label":0,"id":407673}
{"project":"presto-0.278","comment":"\/\/ read the lengths","label":0,"id":407674}
{"project":"presto-0.278","comment":"\/\/ by returning matching keys","label":0,"id":407675}
{"project":"presto-0.278","comment":"\/** * Gets the default value for this property. *\/","label":0,"id":407676}
{"project":"presto-0.278","comment":"\/\/ first operand in group by","label":0,"id":407677}
{"project":"presto-0.278","comment":"\/** * Add the values for corresponding keys from other to this. *\/","label":0,"id":407678}
{"project":"presto-0.278","comment":"\/\/ Partition 1 is untouched","label":0,"id":407679}
{"project":"presto-0.278","comment":"\/**     * Signals that this is the last batch in this page, so that the internal buffers in BlockEncodingBuffers can recycled.     *\/","label":0,"id":407680}
{"project":"presto-0.278","comment":"\/\/ positions with non-nulls allowed, e.g. positions with no filter or with IS NOT NULL filter; used to setup nullsFilter","label":0,"id":407681}
{"project":"presto-0.278","comment":"\/\/ PrestoSparkMutableRow is expected to be serialized only during shuffle.","label":0,"id":407682}
{"project":"presto-0.278","comment":"\/\/ group id column","label":0,"id":407683}
{"project":"presto-0.278","comment":"\/\/ patch length","label":0,"id":407684}
{"project":"presto-0.278","comment":"\/\/ Group separator","label":0,"id":407685}
{"project":"presto-0.278","comment":"\/\/ TEST: n to 1 left join between orders and customers with limit(7) on the left table.\/\/ orders keys and maxcard=7 are propagated","label":0,"id":407686}
{"project":"presto-0.278","comment":"\/**     * Flattens {@code RunLengthEncodedBlock} and {@code DictionaryBlock} into the top-level type     * such that the inner block is not itself a run length encoded block or dictionary block.     * For example, a dictionary block which consists of another dictionary block would be flattened     * to just a dictionary block which has an inner data block of the child dictionary, with all of     * the ids remapped accordingly.     *\/","label":0,"id":407687}
{"project":"presto-0.278","comment":"\/\/ TODO(spershin): Need to add use cases with non-numeric types when implemented.\/\/ We use filters to make queries deterministic.","label":1,"id":407688}
{"project":"presto-0.278","comment":"\/\/ TODO: add adaptations so these will pass\/\/ assertFunction(\"test_block_position(null)\", UNKNOWN, null);\/\/ assertFalse(FunctionWithBlockAndPositionConvention.hitBlockPositionObject.get());","label":1,"id":407689}
{"project":"presto-0.278","comment":"\/\/ todo this should asynchronously wait a standard timeout period before failing","label":1,"id":407690}
{"project":"presto-0.278","comment":"\/\/ https:\/\/github.com\/prestodb\/presto\/issues\/10592","label":0,"id":407691}
{"project":"presto-0.278","comment":"\/**     * Increases our buffer by the {@link #DEFAULT_BUFFER_RESIZE_FACTOR}.     *     * @param context the context to be used     *\/","label":0,"id":407692}
{"project":"presto-0.278","comment":"\/** * Finish statistics collection *\/","label":0,"id":407693}
{"project":"presto-0.278","comment":"\/\/ There can still be a race condition where some of these allocations are made when the total memory is above","label":0,"id":407694}
{"project":"presto-0.278","comment":"\/\/ Only display organization and table_supports_delta_delete property if set","label":0,"id":407695}
{"project":"presto-0.278","comment":"\/\/ Create buffers has to be done after seeing the first page.","label":0,"id":407696}
{"project":"presto-0.278","comment":"\/** * Sets the vector element to true if the bit is not set. *\/","label":0,"id":407697}
{"project":"presto-0.278","comment":"\/\/ find the number of bytes required for base and shift it by 5 bits","label":0,"id":407698}
{"project":"presto-0.278","comment":"\/\/ RESERVED 12, \/\/ Form Feed","label":0,"id":407699}
{"project":"presto-0.278","comment":"\/\/ This is a Fenwick tree, where each node has weight equal to the sum of its weight\/\/ and all its children's weights","label":0,"id":407700}
{"project":"presto-0.278","comment":"\/\/ table with duplicate columns","label":0,"id":407701}
{"project":"presto-0.278","comment":"\/\/ If there is only one operator, finish it","label":0,"id":407702}
{"project":"presto-0.278","comment":"\/\/ rewrite all the other conditions using output variables from left + right plan node.","label":0,"id":407703}
{"project":"presto-0.278","comment":"\/\/ session started in 1980 would get historical Asia\/Kathmandu offset.","label":0,"id":407704}
{"project":"presto-0.278","comment":"\/** * This benchmark a case when there is almost like a cross join query * but with very selective inequality join condition. In other words * for each probe position there are lots of matching build positions * which are filtered out by filtering function. *\/","label":0,"id":407705}
{"project":"presto-0.278","comment":"\/\/ use of scalar requiring session parameter within try","label":0,"id":407706}
{"project":"presto-0.278","comment":"\/**     * Decode the bit stream created by encodeNullsAsBits.     *\/","label":0,"id":407707}
{"project":"presto-0.278","comment":"\/\/example.net\/test\").build();","label":0,"id":407708}
{"project":"presto-0.278","comment":"\/\/ empty maps","label":0,"id":407709}
{"project":"presto-0.278","comment":"\/\/doesnotmatter.example.com:\"));","label":0,"id":407710}
{"project":"presto-0.278","comment":"\/\/ A number ranging between 0 and 1, reflecting our confidence in the statistics","label":0,"id":407711}
{"project":"presto-0.278","comment":"\/\/ Try planning the children to see if any of them naturally produce a partitioning (for now, just select the first)","label":0,"id":407712}
{"project":"presto-0.278","comment":"\/\/ OrcColumnId(0) is the root column that represents file-level schema","label":0,"id":407713}
{"project":"presto-0.278","comment":"\/\/ dataLength can be zero when the stripe only contains empty flat maps.","label":0,"id":407714}
{"project":"presto-0.278","comment":"\/** * Placed in org.apache.parquet.io package to have access to ColumnIO getRepetitionLevel() and getDefinitionLevel() methods. *\/","label":0,"id":407715}
{"project":"presto-0.278","comment":"\/**     * Searches for and outputs ranges of long addresses within certain ranges in each dimension.     *\/","label":0,"id":407716}
{"project":"presto-0.278","comment":"\/** * @param rewriter Rewriter logic used to rewrite plans * @param node Plan to be rewritten * @return Rewritten plan node by using `rewriter`. Rewrites only need to specify implementation of nodes * that are directly changed as of rewrite. All parents of rewritten nodes are automatically rewritten. *\/","label":0,"id":407717}
{"project":"presto-0.278","comment":"\/** * Stores a plan in a form that's efficient to mutate locally (i.e. without * having to do full ancestor tree rewrites due to plan nodes being immutable). * <p> * Each node in a plan is placed in a group, and it's children are replaced with * symbolic references to the corresponding groups. * <p> * For example, a plan like: * <pre> *    A -> B -> C -> D *           \\> E -> F * <\/pre> * would be stored as: * <pre> * root: G0 * * G0 : { A -> G1 } * G1 : { B -> [G2, G3] } * G2 : { C -> G4 } * G3 : { E -> G5 } * G4 : { D } * G5 : { F } * <\/pre> * Groups are reference-counted, and groups that become unreachable from the root * due to mutations in a subtree get garbage-collected. *\/","label":0,"id":407718}
{"project":"presto-0.278","comment":"\/\/ error in filter function with no inputs","label":0,"id":407719}
{"project":"presto-0.278","comment":"\/\/ mark unreferenced shards","label":0,"id":407720}
{"project":"presto-0.278","comment":"\/* * This optimizer convert query of form: * *  SELECT a1, a2,..., an, F1(b1), F2(b2), F3(b3), ...., Fm(bm), F(distinct c) FROM Table GROUP BY a1, a2, ..., an * *  INTO * *  SELECT a1, a2,..., an, arbitrary(if(group = 0, f1)),...., arbitrary(if(group = 0, fm)), F(if(group = 1, c)) FROM *      SELECT a1, a2,..., an, F1(b1) as f1, F2(b2) as f2,...., Fm(bm) as fm, c, group FROM *        SELECT a1, a2,..., an, b1, b2, ... ,bm, c FROM Table GROUP BY GROUPING SETS ((a1, a2,..., an, b1, b2, ... ,bn), (a1, a2,..., an, c)) *      GROUP BY a1, a2,..., an, c, group *  GROUP BY a1, a2,..., an *\/","label":0,"id":407721}
{"project":"presto-0.278","comment":"\/\/ to extract qualified name with prefix","label":0,"id":407722}
{"project":"presto-0.278","comment":"\/** * Recursive helper function used by {@link AccumuloRowSerializer#getArrayFromBlock} and * {@link AccumuloRowSerializer#getMapFromBlock} to decode the Block into a Java type. * * @param type Presto type * @param block Block to decode * @param position Position in the block to get * @return Java object from the Block *\/","label":0,"id":407723}
{"project":"presto-0.278","comment":"\/\/ read remaining pages from the first buffer and acknowledge","label":0,"id":407724}
{"project":"presto-0.278","comment":"\/\/ nonNullRowGroupValueCount=0 in MapFlatColumnWriter","label":0,"id":407725}
{"project":"presto-0.278","comment":"\/\/ FunctionType contains compiled lambda thus not serializable.","label":0,"id":407726}
{"project":"presto-0.278","comment":"\/\/localhost:8082\/bar\");","label":0,"id":407727}
{"project":"presto-0.278","comment":"\/** * Write a byte sequences to the current entry; *\/","label":0,"id":407728}
{"project":"presto-0.278","comment":"\/\/ this test verifies that the two streams produced by the right join","label":0,"id":407729}
{"project":"presto-0.278","comment":"\/\/ test filter caching","label":0,"id":407730}
{"project":"presto-0.278","comment":"\/\/ partitioned exchange","label":0,"id":407731}
{"project":"presto-0.278","comment":"\/\/ case <","label":0,"id":407732}
{"project":"presto-0.278","comment":"\/**     * Filter the list of schemas to those visible to the identity.     *\/","label":0,"id":407733}
{"project":"presto-0.278","comment":"\/** * Describe statistics that must be collected during a statistics collection *\/","label":0,"id":407734}
{"project":"presto-0.278","comment":"\/\/ Marks a SQL null when occurring in constantValues.","label":0,"id":407735}
{"project":"presto-0.278","comment":"\/\/ RuntimeStats aggregated at the query level including the metrics exposed in every task and every operator.","label":0,"id":407736}
{"project":"presto-0.278","comment":"\/\/ If corresponding value is not found, then \"\"(empty string) is its value","label":0,"id":407737}
{"project":"presto-0.278","comment":"\/\/ Splits for a particular plan node and driver group combination","label":0,"id":407738}
{"project":"presto-0.278","comment":"\/\/ invariant:  values[order[k]] == pivotValue for k in [0..low)\/\/ invariant:  values[order[k]] < pivotValue for k in [low..i)\/\/ invariant:  values[order[k]] > pivotValue for k in [high..end)\/\/ in-loop:  i < high\/\/ in-loop:  low < high\/\/ in-loop:  i >= low","label":0,"id":407739}
{"project":"presto-0.278","comment":"\/\/ Always add new columns to the end.","label":0,"id":407740}
{"project":"presto-0.278","comment":"\/\/ rows frame with default end","label":0,"id":407741}
{"project":"presto-0.278","comment":"\/\/ Build element_at expression","label":0,"id":407742}
{"project":"presto-0.278","comment":"\/\/ min","label":0,"id":407743}
{"project":"presto-0.278","comment":"\/** * Given a PlanNode, return a transformed PlanNode. * <p\/> * The given {@param maxSubplan} is a highest PlanNode in the query plan, such that * (1) it is a PlanNode implementation in SPI (i.e., not an internal PlanNode), and * (2) all the TableScanNodes that are reachable from {@param maxSubplan} are from the current connector. * <p\/> * There could be multiple PlanNodes satisfying the above conditions. * All of them will be processed with the given implementation of ConnectorPlanOptimizer. * Each optimization is processed exactly once at the end of logical planning (i.e. right before AddExchanges). *\/","label":0,"id":407744}
{"project":"presto-0.278","comment":"\/**     * Additional format hint for the selected codec. Selects a codec subtype (e.g. which timestamp codec).     *\/","label":0,"id":407745}
{"project":"presto-0.278","comment":"\/\/ extra columns that we drop.","label":0,"id":407746}
{"project":"presto-0.278","comment":"\/\/ H2 takes a million years because it can't join efficiently on a non-indexed field\/expression","label":0,"id":407747}
{"project":"presto-0.278","comment":"\/\/ verify all temp files start with the unique prefix","label":0,"id":407748}
{"project":"presto-0.278","comment":"\/\/ scale down for 10**rescale is equivalent to scaling down with 5**rescaleFactor first, then with 2**rescaleFactor","label":0,"id":407749}
{"project":"presto-0.278","comment":"\/\/ Last state","label":0,"id":407750}
{"project":"presto-0.278","comment":"\/\/ Check `hudi-testing-data.md` for more about the testing data.","label":0,"id":407751}
{"project":"presto-0.278","comment":"\/\/ key section is 4 vint sizes followed by the column data","label":0,"id":407752}
{"project":"presto-0.278","comment":"\/\/ %w Day of the week (0=Sunday..6=Saturday)","label":0,"id":407753}
{"project":"presto-0.278","comment":"\/\/test.json\").put(\"prometheus.query-chunk-duration\", \"365d\").put(\"prometheus.max-query-duration\", \"1095d\").put(\"prometheus.cache-ttl\", \"60s\").put(\"prometheus.bearer-token-file\", \"\/tmp\/bearer_token.txt\").build();","label":0,"id":407754}
{"project":"presto-0.278","comment":"\/\/ TODO MySQL datetime is not correctly read (see comment in StandardReadMappings.timestampReadMapping), but testing this is hard because of #7122","label":1,"id":407755}
{"project":"presto-0.278","comment":"\/\/ And add the bytes to the Mutation","label":0,"id":407756}
{"project":"presto-0.278","comment":"\/**     * Returns materialized view status, considering filter conditions from query     *\/","label":0,"id":407757}
{"project":"presto-0.278","comment":"\/\/ submit second \"dashboard\" query","label":0,"id":407758}
{"project":"presto-0.278","comment":"\/\/ statistics calculator","label":0,"id":407759}
{"project":"presto-0.278","comment":"\/\/ Project only two relevant columns of SHOW GRANT: Privilege and Grant Option","label":0,"id":407760}
{"project":"presto-0.278","comment":"\/\/ (b || a || c) && (a || b || d) && (a || b || e) && (a || b || f)","label":0,"id":407761}
{"project":"presto-0.278","comment":"\/**     * Given {@param request}, check if the data is in cache.     * If it is in cache, save the data in {@param buffer} starting at {@param offset} and return HIT.     * If it is not in cache:     *      1. If there is still cache quota for this table, return MISS     *      2. Otherwise, return CACHE_QUOTA_EXCEED     * @return CacheResult     *\/","label":0,"id":407762}
{"project":"presto-0.278","comment":"\/\/ 2. Extend ColumnWriter to write block regions;","label":0,"id":407763}
{"project":"presto-0.278","comment":"\/\/ Canonicalize constraint by removing constants when column is a partition key. This assumes\/\/ all partitions are similar, and will have similar statistics like size, cardinality etc.\/\/ Constants are only removed from point checks, and not range checks. Example:\/\/ `x = 1` is equivalent to `x = 1000`\/\/ `x > 1` is NOT equivalent to `x > 1000`","label":0,"id":407764}
{"project":"presto-0.278","comment":"\/\/ Create schema with 2 columns\/\/ 1st column with name column1 and type Long\/\/ 2nd column with name column2 and type Map{ Long : List<Struct{inner1: Float, inner2: VARCHAR}}","label":0,"id":407765}
{"project":"presto-0.278","comment":"\/\/ From StandardErrorCode","label":0,"id":407766}
{"project":"presto-0.278","comment":"\/\/ Add some opportunistic optimizations for queries with limit to utilize precomputed hash from the previous step","label":0,"id":407767}
{"project":"presto-0.278","comment":"\/\/ add Request","label":0,"id":407768}
{"project":"presto-0.278","comment":"\/** * Gets all views in the given schema, or all schemas if null. * * @param filterSchema Schema to filter the views, or absent to list all schemas * @return List of views *\/","label":0,"id":407769}
{"project":"presto-0.278","comment":"\/\/ at ... (more line of stacktrace)","label":0,"id":407770}
{"project":"presto-0.278","comment":"\/\/ cover all of the latter's minhash space.","label":0,"id":407771}
{"project":"presto-0.278","comment":"\/\/ no output if there's no input).","label":0,"id":407772}
{"project":"presto-0.278","comment":"\/\/ For example: when we have a plan that looks like:\/\/ JoinNode\/\/ - TableScanA\/\/ - TableScanB\/\/ We check the data properties of TableScanA and TableScanB to see if they meet requirements for merge join:\/\/ 1. If so, we replace the JoinNode to MergeJoinNode\/\/ MergeJoinNode\/\/ - TableScanA\/\/ - TableScanB\/\/ 2. If not, we don't optimize","label":0,"id":407773}
{"project":"presto-0.278","comment":"\/\/ Order matters: size<>1 should be before 100\/(size-1)=2.","label":0,"id":407774}
{"project":"presto-0.278","comment":"\/\/ normal enqueue a split","label":0,"id":407775}
{"project":"presto-0.278","comment":"\/\/ We need to rewind the input after eagerly reading the slice.","label":0,"id":407776}
{"project":"presto-0.278","comment":"\/\/ append the same row many times should also flush in the end","label":0,"id":407777}
{"project":"presto-0.278","comment":"\/\/ properly formed, so it will return a metadata object for any","label":0,"id":407778}
{"project":"presto-0.278","comment":"\/** * This method checks whether {@code keyBlock} has duplicated entries (in the specified range) *\/","label":0,"id":407779}
{"project":"presto-0.278","comment":"\/\/ don't close buffers for a failed query","label":0,"id":407780}
{"project":"presto-0.278","comment":"\/\/ Benchmark is modeled after TPCH query 1, with array\/map creation added in","label":0,"id":407781}
{"project":"presto-0.278","comment":"\/\/ exit immediately if no work needs to be done","label":0,"id":407782}
{"project":"presto-0.278","comment":"\/**     * @return <tt>true<\/tt> if the specified equivalence is new     *\/","label":0,"id":407783}
{"project":"presto-0.278","comment":"\/**     * Obtains the field {@code BlockBuilder}.     * <p>     * This method is used to perform random write to {@code SingleRowBlockWriter}.     * Each field {@code BlockBuilder} must be written EXACTLY once.     * <p>     * Field {@code BlockBuilder} can only be obtained before any sequential write has done.     * Once obtained, sequential write is no longer allowed.     *\/","label":0,"id":407784}
{"project":"presto-0.278","comment":"\/\/ Just one block. Return a DictionaryBlock","label":0,"id":407785}
{"project":"presto-0.278","comment":"\/** * Argument default value in type's stack representation. *\/","label":0,"id":407786}
{"project":"presto-0.278","comment":"\/\/ todo: remove the code when we have support for filter function in nested loop join","label":1,"id":407787}
{"project":"presto-0.278","comment":"\/\/ When all probe and lookup-outer operators finish, destroy the join bridge (freeing the memory)\/\/ * Each LookupOuterOperatorFactory count as 1\/\/ * There is at most 1 LookupOuterOperatorFactory\/\/ * Each LookupOuterOperator count as 1","label":0,"id":407788}
{"project":"presto-0.278","comment":"\/\/ Split the predicate into partition column predicate and other column predicates\/\/ Only the partition column predicate is fully enforced. Other predicate is partially enforced (best effort).","label":0,"id":407789}
{"project":"presto-0.278","comment":"\/\/ Check that all previous assignments have propagated to the visible nodes. This doesn't account for temporary network issues,\/\/ and is more of a safety check than a guarantee","label":0,"id":407790}
{"project":"presto-0.278","comment":"\/\/ TODO: check if the pager exited and verify the exit status?","label":1,"id":407791}
{"project":"presto-0.278","comment":"\/\/ ignore random errors due to driver thread interruption","label":0,"id":407792}
{"project":"presto-0.278","comment":"\/\/ TODO: include attemptId in taskId","label":1,"id":407793}
{"project":"presto-0.278","comment":"\/\/ Total operation time of a task on a worker. TASK_ELAPSED_TIME_NANOS - TASK_SCHEDULED_TIME_NANOS is the time when the task is doing nothing, e.g. it might be waiting for splits\/inputs.","label":0,"id":407794}
{"project":"presto-0.278","comment":"\/**         * @return true if all the data will effectively land in a single stream         *\/","label":0,"id":407795}
{"project":"presto-0.278","comment":"\/\/ null represents \"no callback registered\"","label":0,"id":407796}
{"project":"presto-0.278","comment":"\/\/ Append the un-matched part","label":0,"id":407797}
{"project":"presto-0.278","comment":"\/\/ Specific partitioning requested","label":0,"id":407798}
{"project":"presto-0.278","comment":"\/\/proxy.presto.fbinfra.net:7778?SSL=true&SSLTrustStorePath=trust-store&SSLKeyStorePath=key-store\").setQueryTimeout(new Duration(2, HOURS));","label":0,"id":407799}
{"project":"presto-0.278","comment":"\/\/ However, serializers have logic in it. Creating serializers is better than generating them.","label":0,"id":407800}
{"project":"presto-0.278","comment":"\/\/ tell buffer no more queues will be added","label":0,"id":407801}
{"project":"presto-0.278","comment":"\/\/ add three pages to memory","label":0,"id":407802}
{"project":"presto-0.278","comment":"\/\/ Rewrite supported join clauses","label":0,"id":407803}
{"project":"presto-0.278","comment":"\/\/ but the operator should be blocked","label":0,"id":407804}
{"project":"presto-0.278","comment":"\/\/ reset run length","label":0,"id":407805}
{"project":"presto-0.278","comment":"\/\/ Even though the method signature requires a Block parameter, we can pass an Object here.\/\/ A runtime check will assert that the Object passed as a parameter is actually of type Block.","label":0,"id":407806}
{"project":"presto-0.278","comment":"\/\/ assert that when count of missing partition  <= threshold, use available partitions from view","label":0,"id":407807}
{"project":"presto-0.278","comment":"\/\/ this generator is only used for getJoinPosition without a rawHash and in this case","label":0,"id":407808}
{"project":"presto-0.278","comment":"\/\/ The allocated cache size is the length of the merged disk range 1048576 * 8.","label":0,"id":407809}
{"project":"presto-0.278","comment":"\/\/ When value did not hit a lower bound of a filter, test with the filter before the place where value would be inserted.","label":0,"id":407810}
{"project":"presto-0.278","comment":"\/\/ Test adding nulls and removing nulls, without rehashing","label":0,"id":407811}
{"project":"presto-0.278","comment":"\/\/ the column refers by order by must be not null","label":0,"id":407812}
{"project":"presto-0.278","comment":"\/**     * @return the set of procedures provided by this connector     *\/","label":0,"id":407813}
{"project":"presto-0.278","comment":"\/\/ convert to millis","label":0,"id":407814}
{"project":"presto-0.278","comment":"\/\/ resultSet.getDate(i) doesn't work if JVM's zone skipped day being retrieved (e.g. 2011-12-30 and Pacific\/Apia zone)","label":0,"id":407815}
{"project":"presto-0.278","comment":"\/\/ There are 12 partitions in this test, 3 for each type.","label":0,"id":407816}
{"project":"presto-0.278","comment":"\/\/\/\/ Invoke Virtual\/\/","label":0,"id":407817}
{"project":"presto-0.278","comment":"\/\/ ORC format specific properties","label":0,"id":407818}
{"project":"presto-0.278","comment":"\/\/ this is exactly 45022","label":0,"id":407819}
{"project":"presto-0.278","comment":"\/** * Does the file start with the ORC magic bytes? *\/","label":0,"id":407820}
{"project":"presto-0.278","comment":"\/\/ trigger loading for lazy block","label":0,"id":407821}
{"project":"presto-0.278","comment":"\/\/ needRehash() == false indicates we have reached capacity boundary and a rehash is needed.\/\/ We can only proceed if tryRehash() successfully did a rehash.","label":0,"id":407822}
{"project":"presto-0.278","comment":"\/\/ no data in the current batch, but can request more; will send a request","label":0,"id":407823}
{"project":"presto-0.278","comment":"\/** * Get the offset of the first child for the node. * * @param nodeIndex Index in tree of first entry for node * @param level Level of node *\/","label":0,"id":407824}
{"project":"presto-0.278","comment":"\/\/ Add enough values to force a rehash","label":0,"id":407825}
{"project":"presto-0.278","comment":"\/\/ currentNodeCapable:","label":0,"id":407826}
{"project":"presto-0.278","comment":"\/\/ only probe side table is bucketed","label":0,"id":407827}
{"project":"presto-0.278","comment":"\/\/ For example, a JOIN can benefit from grouped execution because build can be flushed early, reducing peak memory requirement.","label":0,"id":407828}
{"project":"presto-0.278","comment":"\/* all positions are null *\/","label":0,"id":407829}
{"project":"presto-0.278","comment":"\/\/ partitions in file system but not in metastore","label":0,"id":407830}
{"project":"presto-0.278","comment":"\/\/ and because the parser is instantiated in the module that wires up the server (ServerMainModule)","label":0,"id":407831}
{"project":"presto-0.278","comment":"\/**     * Append a log event at the appropriate JUL level, depending on the log4j level.     *\/","label":0,"id":407832}
{"project":"presto-0.278","comment":"\/\/ if we have an outstanding request","label":0,"id":407833}
{"project":"presto-0.278","comment":"\/**     * Gets the unique instance id of a task.  This can be used to detect a task     * that was destroyed and recreated.     *\/","label":0,"id":407834}
{"project":"presto-0.278","comment":"\/\/ Derive the type of the view from the stored definition, not from the analysis of the underlying query.\/\/ This is needed in case the underlying table(s) changed and the query in the view now produces types that\/\/ are implicitly coercible to the declared view types.","label":0,"id":407835}
{"project":"presto-0.278","comment":"\/\/ Run this after projections and filters have been fully simplified and pushed down","label":0,"id":407836}
{"project":"presto-0.278","comment":"\/**     * @return Allowed non-overlapping predicate ranges sorted in increasing order     *\/","label":0,"id":407837}
{"project":"presto-0.278","comment":"\/\/ End strictly n = 1 checks.","label":0,"id":407838}
{"project":"presto-0.278","comment":"\/** * Compares the values at the specified positions. *\/","label":0,"id":407839}
{"project":"presto-0.278","comment":"\/** * Redis specific implementation of the Presto Connector SPI. This is a read only connector. *\/","label":0,"id":407840}
{"project":"presto-0.278","comment":"\/\/ Free up the entire pool","label":0,"id":407841}
{"project":"presto-0.278","comment":"\/\/ If isLegacyGetLayoutSupported, then we can continue with legacy predicate pushdown logic.","label":0,"id":407842}
{"project":"presto-0.278","comment":"\/\/ Invalid JSON","label":0,"id":407843}
{"project":"presto-0.278","comment":"\/\/ add the existing buffers","label":0,"id":407844}
{"project":"presto-0.278","comment":"\/\/ Close attention should be paid when this needs to be updated to 2x or higher as that case may introduce double counting","label":0,"id":407845}
{"project":"presto-0.278","comment":"\/\/ local exchanges do not produce all global properties as represented by ActualProperties.","label":0,"id":407846}
{"project":"presto-0.278","comment":"\/\/ version byte +","label":0,"id":407847}
{"project":"presto-0.278","comment":"\/\/ TODO merge this with MaterializedResult","label":1,"id":407848}
{"project":"presto-0.278","comment":"\/\/ For hard timeout, add an additional time to max wait for thread scheduling contention and GC","label":0,"id":407849}
{"project":"presto-0.278","comment":"\/\/ False literal on the left side should be ignored","label":0,"id":407850}
{"project":"presto-0.278","comment":"\/\/ create Result","label":0,"id":407851}
{"project":"presto-0.278","comment":"\/\/ Usage of prependElement: ElementToArrayConcatFunction","label":0,"id":407852}
{"project":"presto-0.278","comment":"\/\/ match each column with a projection","label":0,"id":407853}
{"project":"presto-0.278","comment":"\/\/ keep them in a separate split.","label":0,"id":407854}
{"project":"presto-0.278","comment":"\/\/ This could be a superset\/permutation of the handles being requested in this scan","label":0,"id":407855}
{"project":"presto-0.278","comment":"\/** * Reduces key property to a concise cannonical form wherein each individual key is * reduced to a canonical form by removing redundant variables and replacing any remaining variables * with their equivalence class heads. Moreover, no keys in the normalized key * property are redundant with respect to the others. * Note that if any key is fully bound to constants an empty result is * returned, signaling that at most a single record is in the result set constrained * by this key property. * * @param equivalenceClassProperty * @return A normalized version of this key property or empty if any key is fully bound to constants. *\/","label":0,"id":407856}
{"project":"presto-0.278","comment":"\/** * This method is expected to merge the customSplitInfo with split to recreate the custom FileSplit. * It is expected to return optional.empty() if the customSplitInfo does not match the split converter. *\/","label":0,"id":407857}
{"project":"presto-0.278","comment":"\/\/ doesn't include memory used by channels and addresses which are shared with PagesIndex","label":0,"id":407858}
{"project":"presto-0.278","comment":"\/\/ no content means no content was created within the wait period, but query is still ok\/\/ if job is finished, complete is set in the response","label":0,"id":407859}
{"project":"presto-0.278","comment":"\/**     * Encode the given Float value into the given Text object.     *     * @param text Text object to set     * @param value Value to encode     *\/","label":0,"id":407860}
{"project":"presto-0.278","comment":"\/\/ add pages to another source","label":0,"id":407861}
{"project":"presto-0.278","comment":"\/*             * TODO `resultSet.getTime(columnIndex)` returns wrong value if JVM's zone had forward offset change during 1970-01-01             * and the time value being retrieved was not present in local time (a 'gap'), e.g. time retrieved is 00:10:00 and JVM zone is America\/Hermosillo             * The problem can be averted by using `resultSet.getObject(columnIndex, LocalTime.class)` -- but this is not universally supported by JDBC drivers.             *\/","label":1,"id":407862}
{"project":"presto-0.278","comment":"\/\/ TODO: dynamic batch sizing","label":1,"id":407863}
{"project":"presto-0.278","comment":"\/\/ Primary key must be a prefix of the sorting key,","label":0,"id":407864}
{"project":"presto-0.278","comment":"\/\/ transformation.blocked","label":0,"id":407865}
{"project":"presto-0.278","comment":"\/\/ If the engine requests that the connector provides a layout with a domain of \"none\". The connector can have two possible reactions, either:","label":0,"id":407866}
{"project":"presto-0.278","comment":"\/\/ If there is no match we can simply return the original source without doing copy.","label":0,"id":407867}
{"project":"presto-0.278","comment":"\/\/ reported offset.","label":0,"id":407868}
{"project":"presto-0.278","comment":"\/\/ When sequence id is not DEFAULT_SEQUENCE_ID, this map is inside a flat map.","label":0,"id":407869}
{"project":"presto-0.278","comment":"\/** * Builds the node to the intermediate encryption key map based on the requested Hive columns. *\/","label":0,"id":407870}
{"project":"presto-0.278","comment":"\/\/ hashtable length","label":0,"id":407871}
{"project":"presto-0.278","comment":"\/\/ will reach 10 MB and will get abandoned as well. The constant (dictionaryUsefulCheckPerChunkFrequency + 1) * CHUNK_ROW_COUNT","label":0,"id":407872}
{"project":"presto-0.278","comment":"\/\/ For example: a && b && c && (d || e) can still be expanded if d or e is non-deterministic.","label":0,"id":407873}
{"project":"presto-0.278","comment":"\/\/ let's change records count for one of the regions to verify statistics are different","label":0,"id":407874}
{"project":"presto-0.278","comment":"\/\/127.0.0.1:55\"), \"\", getBasicQueryStats(executionTime), null, null, null, Optional.empty(), ImmutableList.of(), Optional.empty());","label":0,"id":407875}
{"project":"presto-0.278","comment":"\/** * Returns the retained size of this block in memory, including over-allocations. * This method is called from the inner most execution loop and must be fast. *\/","label":0,"id":407876}
{"project":"presto-0.278","comment":"\/**         * A snapshot of {@link LookupJoinOperator#currentProbePositionProducedRow}         *\/","label":0,"id":407877}
{"project":"presto-0.278","comment":"\/** * Custom Block Builder implementation for use with SliceDictionaryBuilder. * Instead of using one large contiguous Slice for storing the unique Strings * in String dictionary, this class uses Segmented Slices. The main advantage * of this class over VariableWidthBlockBuilder is memory. Non contiguous * memory is more likely to be available and hence reduce the chance of OOMs. * <p> * Why implement a block builder ? * SliceDictionaryBuilder takes in a Block and Position to write. * 1. It can create a slice for the position and write it. This does not * require a block builder. But temporary slice, produces lot of * short lived garbage. * 2. A block and position can be copied to BlockBuilder using the method * Block.writeBytesTo . But this requires implementing the BlockBuilder interface. * Most of the methods are going to be unused and left as Unsupported. * <p> * What's the difference between this class and VariableWidthBlockBuilder? * This class is different from VariableWidthBlockBuilder in the following ways * 1. It does not support nulls. (So null byte array and management is avoided). * 2. Instead of using one contiguous chunk for storing all the entries, * they are segmented. * <p> * How is it implemented ? * The Strings from 0 to SEGMENT_SIZE-1 are stored in the first segment. * The string from SEGMENT_SIZE to 2 * SEGMENT_SIZE -1 goes to the second. * Each segment has Slice(data is concatenated and stored in one slice) * and offsets to capture the start offset and length. New slices are appended * to the open segment. Once the segment is full the segment is * finalized and appended to the closed segments. A new open segment is * created for further appends. *\/","label":0,"id":407878}
{"project":"presto-0.278","comment":"\/** * Returns a maxCardProperty with a value that's the min of this maxcardproperty value and the new proposed value. * * @param value *\/","label":0,"id":407879}
{"project":"presto-0.278","comment":"\/\/ high cardinality -> results may not be exact","label":0,"id":407880}
{"project":"presto-0.278","comment":"\/\/ segment header to row group start","label":0,"id":407881}
{"project":"presto-0.278","comment":"\/** * Aborts a result buffer for a task.  If the task or buffer has not been * created yet, an uninitialized task is created and a the buffer is * aborted. * <p> * NOTE: this design assumes that only tasks and buffers that will * eventually exist are queried. *\/","label":0,"id":407882}
{"project":"presto-0.278","comment":"\/\/ checkState(instantiatedType.equalsSignature(signature), \"Instantiated parametric type name (%s) does not match expected name (%s)\", instantiatedType, signature);","label":0,"id":407883}
{"project":"presto-0.278","comment":"\/\/ close client and verify","label":0,"id":407884}
{"project":"presto-0.278","comment":"\/\/ not regular table or a view","label":0,"id":407885}
{"project":"presto-0.278","comment":"\/\/ three subqueries with two duplicates (coerced to two different types), only two scalar joins should be in plan","label":0,"id":407886}
{"project":"presto-0.278","comment":"\/**         * If no upper bound is specified by the predicate, we use the time now() as the defaultUpperBound         * if predicate LOWER bound is set AND predicate UPPER bound is set:         * max duration          = upper bound - lower bound         * effective upper bound = predicate upper bound         * if predicate LOWER bound is NOT set AND predicate UPPER bound is set:         * max duration          = config max duration         * effective upper bound = predicate upper bound         * if predicate LOWER bound is set AND predicate UPPER bound is NOT set:         * max duration          = defaultUpperBound - lower bound         * effective upper bound = defaultUpperBound         * if predicate LOWER bound is NOT set AND predicate UPPER bound is NOT set:         * max duration          = config max duration         * effective upper bound = defaultUpperBound         *         * @param defaultUpperBound If no upper bound is specified by the predicate, we use the time now() as the defaultUpperBound         * @param maxQueryRangeDurationRequested Likely from config properties         * @param maybePredicateRange Optional of pushed down predicate values for high and low timestamp values         *\/","label":0,"id":407887}
{"project":"presto-0.278","comment":"\/\/ Column references in transform","label":0,"id":407888}
{"project":"presto-0.278","comment":"\/\/ 0068-09-03 13:19:59.999211","label":0,"id":407889}
{"project":"presto-0.278","comment":"\/\/ (o_custkey, c_custkey) should be propagated.","label":0,"id":407890}
{"project":"presto-0.278","comment":"\/** * STREAM execution requires an {@link StreamExecutionPhase}. * * Each {@link StreamExecutionPhase} defines a list of streams, while * each stream defines a list of queries (query names). * * Each stream are executed in parallel, while queries within a stream * are executed sequentially in the order defined. *\/","label":0,"id":407891}
{"project":"presto-0.278","comment":"\/\/ Test REVERSE for non-ASCII","label":0,"id":407892}
{"project":"presto-0.278","comment":"\/\/ Write 3 values.","label":0,"id":407893}
{"project":"presto-0.278","comment":"\/\/ TODO: update in the interface after the new memory tracking framework is landed (#9049)\/\/ Essentially we would love to have clean interfaces to support both pushing and pulling memory usage\/\/ The following implementation is a hybrid model, where the push model is going to call the pull model causing reentrancy","label":1,"id":407894}
{"project":"presto-0.278","comment":"\/\/ remove the key instead.","label":0,"id":407895}
{"project":"presto-0.278","comment":"\/\/ Only products of SpillContext.newLocalSpillContext() should be closed.","label":0,"id":407896}
{"project":"presto-0.278","comment":"\/\/ Use a dummy enqueue method to avoid OutOfMemory error","label":0,"id":407897}
{"project":"presto-0.278","comment":"\/\/ Mismatched different cardinality sum","label":0,"id":407898}
{"project":"presto-0.278","comment":"\/\/ Ignore hidden files and directories. Hive ignores files starting with _ and . as well.","label":0,"id":407899}
{"project":"presto-0.278","comment":"\/\/ range filters and filter functions","label":0,"id":407900}
{"project":"presto-0.278","comment":"\/\/ When outputBlockVariable is presented, the generated bytecode will write the evaluated value into the outputBlockVariable,\/\/ otherwise the value will be left on stack.","label":0,"id":407901}
{"project":"presto-0.278","comment":"\/\/\/\/ NOTE: this code must be lock free so we do not hang for state machine updates\/\/\/\/ always get the state first before any other stats","label":0,"id":407902}
{"project":"presto-0.278","comment":"\/\/ register the instance","label":0,"id":407903}
{"project":"presto-0.278","comment":"\/\/ temporary array to be used in applyFilterFunctions only; exists solely for the purpose of re-using memory","label":0,"id":407904}
{"project":"presto-0.278","comment":"\/\/ considered satisfactory for MULTIPLE and FIXED","label":0,"id":407905}
{"project":"presto-0.278","comment":"\/\/ NOTE: The failure cause must be set before triggering the state change, so\/\/ listeners can observe the exception. This is safe because the failure cause\/\/ can only be observed if the transition to FAILED is successful.","label":0,"id":407906}
{"project":"presto-0.278","comment":"\/\/ true, false, true, false...","label":0,"id":407907}
{"project":"presto-0.278","comment":"\/** * List applicable roles, including the transitive grants, in given session *\/","label":0,"id":407908}
{"project":"presto-0.278","comment":"\/** * <tt>_partition_offset<\/tt> - The current offset of the message in the partition. *\/","label":0,"id":407909}
{"project":"presto-0.278","comment":"\/\/ The permission check is moved out from createSession function.","label":0,"id":407910}
{"project":"presto-0.278","comment":"\/\/ Submit query with side effect of creating resource groups","label":0,"id":407911}
{"project":"presto-0.278","comment":"\/**     * Gets the array Block of the given Presto column.     *     * @param name Column name     * @param type Array type     * @return True if null, false otherwise.     *\/","label":0,"id":407912}
{"project":"presto-0.278","comment":"\/**     * Add the specified column to the table.     *\/","label":0,"id":407913}
{"project":"presto-0.278","comment":"\/\/ The error must be recorded before setting the noMoreSplits marker to make sure","label":0,"id":407914}
{"project":"presto-0.278","comment":"\/\/ like_pattern(pattern)","label":0,"id":407915}
{"project":"presto-0.278","comment":"\/\/ 12 - 13","label":0,"id":407916}
{"project":"presto-0.278","comment":"\/\/ buffer it a concurrent collection so it is safe to access out side of guard","label":0,"id":407917}
{"project":"presto-0.278","comment":"\/\/ Finalizer","label":0,"id":407918}
{"project":"presto-0.278","comment":"\/\/ both operator11 and operator 12 are revoking since we revoke in order of operator creation within the task until we are below the memory revoking threshold","label":0,"id":407919}
{"project":"presto-0.278","comment":"\/\/ dictionary encoded.  The dictionary encoded values have occasional values that only appear once","label":0,"id":407920}
{"project":"presto-0.278","comment":"\/** * Gets a Block value at {@code internalPosition - getOffsetBase()}. *\/","label":0,"id":407921}
{"project":"presto-0.278","comment":"\/\/ nested block","label":0,"id":407922}
{"project":"presto-0.278","comment":"\/\/ We call the simpler class writer first to get any errors out using simpler setting.","label":0,"id":407923}
{"project":"presto-0.278","comment":"\/\/ block size for every batch and never exceed MAX_BATCH_SIZE. But when the number of rows in the last batch in","label":0,"id":407924}
{"project":"presto-0.278","comment":"\/\/ Add another state to group 2, to show that this doesn't affect the group under test (group 1)","label":0,"id":407925}
{"project":"presto-0.278","comment":"\/\/ Test Date","label":0,"id":407926}
{"project":"presto-0.278","comment":"\/\/ perform upgrading operation on metadata","label":0,"id":407927}
{"project":"presto-0.278","comment":"\/\/ For simplicity, we don't dynamically use 3 to 8 zeros depending on the circumstance.","label":0,"id":407928}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to create a view that selects from the specified columns in a relation.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":407929}
{"project":"presto-0.278","comment":"\/\/ write codec information","label":0,"id":407930}
{"project":"presto-0.278","comment":"\/\/ second file removed from storage","label":0,"id":407931}
{"project":"presto-0.278","comment":"\/\/ Lateral join node is not supported by execution, so do not rewrite it","label":0,"id":407932}
{"project":"presto-0.278","comment":"\/\/ we set the left limit to limit - 1 to account for the node on the right","label":0,"id":407933}
{"project":"presto-0.278","comment":"\/\/ If the I\/O issue still stands it will fail the reading later;","label":0,"id":407934}
{"project":"presto-0.278","comment":"\/\/ see javax.sql.rowset.RowSetMetaDataImpl","label":0,"id":407935}
{"project":"presto-0.278","comment":"\/\/ join a bucketed table with an unbucketed table; the join has constant pushdown","label":0,"id":407936}
{"project":"presto-0.278","comment":"\/\/ We can use filter from base query WHERE clause to consider only relevant partitions when getting\/\/ materialized view status\/\/ TODO: Collect predicates in outer queries and apply the union to this criteria. i.e. in\/\/ SELECT x FROM (SELECT x FROM tbl WHERE y < 20) WHERE y > 5 where y is a partition key,\/\/ right now we would only remove partitions y >= 20. We should eventually consider y <= 5 as well.","label":1,"id":407937}
{"project":"presto-0.278","comment":"\/\/ log2m = 2 * log(1.106 \/ rsd) \/ log(2)","label":0,"id":407938}
{"project":"presto-0.278","comment":"\/\/ shard 1 is referenced by this node","label":0,"id":407939}
{"project":"presto-0.278","comment":"\/\/ verify can query 1000 partitions","label":0,"id":407940}
{"project":"presto-0.278","comment":"\/\/ add unparametrized types","label":0,"id":407941}
{"project":"presto-0.278","comment":"\/\/ never block, as addInput doesn't support yield semantics","label":0,"id":407942}
{"project":"presto-0.278","comment":"\/\/ empty IN statements are not allowed by the standard, and not possible here\/\/ the implementation assumes this condition is always met","label":0,"id":407943}
{"project":"presto-0.278","comment":"\/\/ wait for a state change and then schedule again","label":0,"id":407944}
{"project":"presto-0.278","comment":"\/** * A full representation of a ZIP file entry. * * <p>See <a href=\"http:\/\/www.pkware.com\/documents\/casestudies\/APPNOTE.TXT\">ZIP Format<\/a> for * a description of the entry fields. (Section 4.3.7 and 4.4) *\/","label":0,"id":407945}
{"project":"presto-0.278","comment":"\/**     * Reader and writer have the same fields. Checks that fields are read in correctly     *\/","label":0,"id":407946}
{"project":"presto-0.278","comment":"\/\/ or within outer plans in case of multiple nesting levels of subqueries.","label":0,"id":407947}
{"project":"presto-0.278","comment":"\/\/ TODO: hack because there could be \"type only\" coercions (which aren't necessarily included as implicit casts),","label":1,"id":407948}
{"project":"presto-0.278","comment":"\/\/ \"20180907_054754_00000_88xi4.1.0-3\" tid=106 status=running detail=Error processing Split 20210423_234231_69820_3jigi.2.0.19-43 (start = 2.3149319001729774E10, wall = 143673 ms, cpu = 51060 ms, wait = 34701 ms, calls = 70)","label":0,"id":407949}
{"project":"presto-0.278","comment":"\/\/ based on ZstdJniCompressor","label":0,"id":407950}
{"project":"presto-0.278","comment":"\/\/ add map statistics","label":0,"id":407951}
{"project":"presto-0.278","comment":"\/\/ start delete","label":0,"id":407952}
{"project":"presto-0.278","comment":"\/\/ no more groups","label":0,"id":407953}
{"project":"presto-0.278","comment":"\/\/ convert the input record set from the column ordering in the query to\/\/ match the column ordering of the index","label":0,"id":407954}
{"project":"presto-0.278","comment":"\/**         * For a given fixed bit this function will return the closest available fixed bit         *\/","label":0,"id":407955}
{"project":"presto-0.278","comment":"\/\/ No match","label":0,"id":407956}
{"project":"presto-0.278","comment":"\/\/ Intentionally used linkedHashMap so that equal guarantees are kept even if underlying implementation is changed.","label":0,"id":407957}
{"project":"presto-0.278","comment":"\/\/ Get the number of rows in lineitem table for query stats verification below.","label":0,"id":407958}
{"project":"presto-0.278","comment":"\/\/ contains the flattened array","label":0,"id":407959}
{"project":"presto-0.278","comment":"\/\/ supported expression for dynamic filtering:\/\/ either 1. left child contains left variables and right child contains right variables\/\/ or, 2. left child contains right variables and right child contains left variables","label":0,"id":407960}
{"project":"presto-0.278","comment":"\/\/ To be compliant, could rewrite either the whole expression, or just the sub-expression. Rewriting larger expressions are preferred","label":0,"id":407961}
{"project":"presto-0.278","comment":"\/\/ whole COALESCE in group by","label":0,"id":407962}
{"project":"presto-0.278","comment":"\/\/ values wrapped in a list wrapped in a list","label":0,"id":407963}
{"project":"presto-0.278","comment":"\/** * Just check alias is present; return self mapping from symbolAliasesMap. *\/","label":0,"id":407964}
{"project":"presto-0.278","comment":"\/**     * Load the delta table.     *     * @param session                     Current user session     * @param schemaTableName             Schema and table name referred to as in the query     * @param tableLocation               Location of the Delta table on storage     * @param snapshotId                  Id of the snapshot to read from the Delta table     * @param snapshotAsOfTimestampMillis Latest snapshot as of given timestamp     * @return If the table is found return {@link DeltaTable}.     *\/","label":0,"id":407965}
{"project":"presto-0.278","comment":"\/\/ TEST: n to 1  full join between customers and orders with limit(12) on left and and limit(10) on right table.\/\/ The product of the maxcards 120 should get propagated","label":0,"id":407966}
{"project":"presto-0.278","comment":"\/\/ WITH must be empty according to syntax","label":0,"id":407967}
{"project":"presto-0.278","comment":"\/\/ below test cases are needed to verify clustering key pushdown with unpartitioned table","label":0,"id":407968}
{"project":"presto-0.278","comment":"\/\/ In rare cases (e.g. PostgreSQL) a table might have no columns.","label":0,"id":407969}
{"project":"presto-0.278","comment":"\/\/ adjacent delta values are bit packed. The length of adjDeltas array is","label":0,"id":407970}
{"project":"presto-0.278","comment":"\/\/ TODO: Avoid copy value block associated with the same key by using strategy similar to multimap_from_entries","label":1,"id":407971}
{"project":"presto-0.278","comment":"\/\/ column meta data stats","label":0,"id":407972}
{"project":"presto-0.278","comment":"\/\/ either use variable or input reference for symbol mapping","label":0,"id":407973}
{"project":"presto-0.278","comment":"\/\/ TODO: use function annotation instead of assume all function can return NULL","label":1,"id":407974}
{"project":"presto-0.278","comment":"\/\/ key 600 doesn't exist in the column encodings","label":0,"id":407975}
{"project":"presto-0.278","comment":"\/\/ If state is NO_MORE_SPLITS\/FINISHED, splitSource.isFinished has previously returned true, and splitSource is closed now.","label":0,"id":407976}
{"project":"presto-0.278","comment":"\/\/ Add a some columns to the special metrics table row ID for the first\/last row.","label":0,"id":407977}
{"project":"presto-0.278","comment":"\/\/ instance sizes who use local buffers. SliceDirectStreamReader's instance size is not counted, because it\/\/ doesn't have a local buffer. All non-leaf level StreamReaders' (e.g. MapStreamReader, LongStreamReader,\/\/ ListStreamReader and StructStreamReader) instance sizes were not counted, because calling setBytes() in\/\/ their constructors is confusing.","label":0,"id":407978}
{"project":"presto-0.278","comment":"\/\/ http split with default port","label":0,"id":407979}
{"project":"presto-0.278","comment":"\/\/ Index into offsets array pointing to the next offset","label":0,"id":407980}
{"project":"presto-0.278","comment":"\/\/ (multiple blocks vs all fields packed in a single block)","label":0,"id":407981}
{"project":"presto-0.278","comment":"\/\/ if PrestoResult is available, just unwrap it from ResultSet and extract query id","label":0,"id":407982}
{"project":"presto-0.278","comment":"\/\/ not provided then false.","label":0,"id":407983}
{"project":"presto-0.278","comment":"\/\/ 0 means no rows will be filtered out, 1 means all rows will be filtered out, -1 means no filter.\/\/ When withNulls is ALL, only -1, 0, 1 are meaningful. Other values are regarded as 1.\/\/ \"|\" is the column delimiter.","label":0,"id":407984}
{"project":"presto-0.278","comment":"\/** * Begin statistics collection *\/","label":0,"id":407985}
{"project":"presto-0.278","comment":"\/\/ in `criteria` to make it consistent.","label":0,"id":407986}
{"project":"presto-0.278","comment":"\/** * Scalar filter scan query is something like: * <pre> *     SELECT a,b,c FROM rel WHERE a = correlated1 AND b = correlated2 * <\/pre> * <p> * This optimizer can rewrite to mark distinct and filter over a left outer join: * <p> * From: * <pre> * - LateralJoin (with correlation list: [C]) *   - (input) plan which produces symbols: [A, B, C] *   - (scalar subquery) Project F *     - Filter(D = C AND E > 5) *       - plan which produces symbols: [D, E, F] * <\/pre> * to: * <pre> * - Filter(CASE isDistinct WHEN true THEN true ELSE fail('Scalar sub-query has returned multiple rows')) *   - MarkDistinct(isDistinct) *     - LateralJoin (with correlation list: [C]) *       - AssignUniqueId(adds symbol U) *         - (input) plan which produces symbols: [A, B, C] *       - non scalar subquery * <\/pre> * <p> * This must be run after {@link TransformCorrelatedScalarAggregationToJoin} *\/","label":0,"id":407987}
{"project":"presto-0.278","comment":"\/\/ return the snapshot from the update request as another thread may have already flushed the request","label":0,"id":407988}
{"project":"presto-0.278","comment":"\/\/ Create two copies of each page with one of them masked off","label":0,"id":407989}
{"project":"presto-0.278","comment":"\/\/ expect output page to be produced within few calls to getOutput(), e.g. to facilitate spill","label":0,"id":407990}
{"project":"presto-0.278","comment":"\/\/ Collection is defined but empty","label":0,"id":407991}
{"project":"presto-0.278","comment":"\/**     * The signature of the returned MethodHandle is (Block fromMap, int position, SqlFunctionProperties properties, BlockBuilder mapBlockBuilder)void.     * The processor will get the value from fromMap, cast it and write to toBlock.     *\/","label":0,"id":407992}
{"project":"presto-0.278","comment":"\/\/ Fill the first offset array with 0, and free up the rest of the offsets array.","label":0,"id":407993}
{"project":"presto-0.278","comment":"\/\/ Local exchanges are only created in AddLocalExchanges, at the end of optimization, and","label":0,"id":407994}
{"project":"presto-0.278","comment":"\/\/ ungrouped execution will not update finished lifespans","label":0,"id":407995}
{"project":"presto-0.278","comment":"\/\/ convert to object value type of SQL type","label":0,"id":407996}
{"project":"presto-0.278","comment":"\/\/ When the aggregation is done after the join, there will be a null value that gets aggregated over\/\/ where rows did not exist in the inner table.  For some aggregate functions, such as count, the result\/\/ of an aggregation over a single null row is one or zero rather than null. In order to ensure correct results,\/\/ we add a coalesce function with the output of the new outer join and the aggregation performed over a single\/\/ null row.","label":0,"id":407997}
{"project":"presto-0.278","comment":"\/\/ bind session Control statements to SessionTransactionExecutionFactory","label":0,"id":407998}
{"project":"presto-0.278","comment":"\/**     * Starts the execution of the NativeExecutionTask. Any exceptional cases should be captured by the exception handling mechanism of CompletableFuture.     *     * @return a CompletableFuture of no content to indicate the successful finish of the task.     *\/","label":0,"id":407999}
{"project":"presto-0.278","comment":"\/\/ Since the pipeline has grouped execution strategy, all Lifespans except for the task-wide one","label":0,"id":408000}
{"project":"presto-0.278","comment":"\/** * Json description to parse a row on a Kafka topic. A row contains a message and an optional key. See the documentation for the exact JSON syntax. *\/","label":0,"id":408001}
{"project":"presto-0.278","comment":"\/\/ attempt to advance to next row group","label":0,"id":408002}
{"project":"presto-0.278","comment":"\/\/ push down indexed column fixed value predicates only for unpartitioned partition which uses token range query","label":0,"id":408003}
{"project":"presto-0.278","comment":"\/\/ Try fetching shared dictionaries","label":0,"id":408004}
{"project":"presto-0.278","comment":"\/\/ Test if exists","label":0,"id":408005}
{"project":"presto-0.278","comment":"\/**     * <tt>_key_length<\/tt> - length in bytes of the key.     *\/","label":0,"id":408006}
{"project":"presto-0.278","comment":"\/\/ integer_to_varchar","label":0,"id":408007}
{"project":"presto-0.278","comment":"\/\/ ack buffer result\/\/ sync","label":0,"id":408008}
{"project":"presto-0.278","comment":"\/\/ TODO When com.facebook.presto.sql.planner.optimizations.EliminateCrossJoins is removed, remove 'shallow' flag","label":1,"id":408009}
{"project":"presto-0.278","comment":"\/\/ are less than 10 projections performance is generally better with common sub-expressions. So we set an upper limit on how many projections we would compile together here.","label":1,"id":408010}
{"project":"presto-0.278","comment":"\/** * Compute split-per-bucket (single split for all shards in a bucket). *\/","label":0,"id":408011}
{"project":"presto-0.278","comment":"\/\/ verify if the query was killed (if not, we lost the race)","label":0,"id":408012}
{"project":"presto-0.278","comment":"\/\/ assert the previously compacted first page no longer exists","label":0,"id":408013}
{"project":"presto-0.278","comment":"\/\/ Verify conflict is handled\/\/ Try to replace shard1 with newShards again (shard1 already deleted, delete shards that's already deleted)","label":0,"id":408014}
{"project":"presto-0.278","comment":"\/\/ disable short circuit using 0","label":0,"id":408015}
{"project":"presto-0.278","comment":"\/\/ add UnaliasSymbolReferences when it's ported","label":0,"id":408016}
{"project":"presto-0.278","comment":"\/**     * Get the list of files corresponding to the given Delta table.     *     * @return Closeable iterator of files. It is responsibility of the caller to close the iterator.     *\/","label":0,"id":408017}
{"project":"presto-0.278","comment":"\/**     * Get the current port number, failing if no port is defined.     *     * @return a validated port number, in the range [0..65535]     * @throws IllegalStateException if no port is defined.  You can use     * {@link #withDefaultPort(int)} to prevent this from occurring.     *\/","label":0,"id":408018}
{"project":"presto-0.278","comment":"\/**     * We use this instead of checkSuccess in airlift so we can propagate the error message     * and so that we throw a PrestoException rather than an IllegalArgumentException.     *     * @param spillInProgress     *\/","label":0,"id":408019}
{"project":"presto-0.278","comment":"\/** * The table name used by presto. *\/","label":0,"id":408020}
{"project":"presto-0.278","comment":"\/\/ Readers don't handle the outputRequired == false and filter = null. When that is fixed","label":0,"id":408021}
{"project":"presto-0.278","comment":"\/\/ if this is a simple name reference, try to resolve against output columns","label":0,"id":408022}
{"project":"presto-0.278","comment":"\/** * This constructor is for JSON deserialization only.  Do not use! *\/","label":0,"id":408023}
{"project":"presto-0.278","comment":"\/\/ add more pages and close the buffers","label":0,"id":408024}
{"project":"presto-0.278","comment":"\/** * This method creates a mapping from each index source lookup variable (directly applied to the index) * to the corresponding probe key Input *\/","label":0,"id":408025}
{"project":"presto-0.278","comment":"\/\/ filter function on orderkey; orderkey is projected out","label":0,"id":408026}
{"project":"presto-0.278","comment":"\/\/ Here we stitch with the predicate WHERE FALSE, and the optimizer will then prune the FALSE branch with no extra overhead introduced.","label":0,"id":408027}
{"project":"presto-0.278","comment":"\/\/ So it only references non-partition columns. Disable the optimization in this case.","label":0,"id":408028}
{"project":"presto-0.278","comment":"\/\/ verify selecting from a view over a view does not require the session user to have SELECT privileges for the inner view","label":0,"id":408029}
{"project":"presto-0.278","comment":"\/\/ TODO: this method seems to be copied in multiple test classes in this package, should it be moved to a utility?","label":1,"id":408030}
{"project":"presto-0.278","comment":"\/\/ Calculate the total length for all entries. Note that the values in the offsetVector are still length values now.","label":0,"id":408031}
{"project":"presto-0.278","comment":"\/\/ use Hive default naming convention","label":0,"id":408032}
{"project":"presto-0.278","comment":"\/\/ Since there's also no table scans in the fragment, the list of TaskSource's for this partition is empty.","label":0,"id":408033}
{"project":"presto-0.278","comment":"\/\/ Column reference inside lambda should be captured","label":0,"id":408034}
{"project":"presto-0.278","comment":"\/\/ rowCount and totalSize from NaN to 0.0","label":0,"id":408035}
{"project":"presto-0.278","comment":"\/\/ check if any data requests were started","label":0,"id":408036}
{"project":"presto-0.278","comment":"\/**     * Return a list of table layouts that satisfy the given constraint.     * <p>     * For each layout, connectors must return an \"unenforced constraint\" representing the part of the constraint summary that isn't guaranteed by the layout.     *\/","label":0,"id":408037}
{"project":"presto-0.278","comment":"\/\/ Test SPLIT for non-ASCII","label":0,"id":408038}
{"project":"presto-0.278","comment":"\/\/localhost\/test-dir\/test-folder\");","label":0,"id":408039}
{"project":"presto-0.278","comment":"\/\/ at the first occurrence the surrogate character and 0xFF byte is appended to it.","label":0,"id":408040}
{"project":"presto-0.278","comment":"\/\/ Single tinyint column","label":0,"id":408041}
{"project":"presto-0.278","comment":"\/** * Same as {@code com.facebook.presto.jdbc.TestJdbcPreparedStatement#testDeallocate()}. This one is run for TeradataJdbcDriver as well. *\/","label":0,"id":408042}
{"project":"presto-0.278","comment":"\/\/ page 3:\/\/ the third page will trigger another compaction of the first page","label":0,"id":408043}
{"project":"presto-0.278","comment":"\/\/ Optimized ORC rewriter will respect the schema","label":0,"id":408044}
{"project":"presto-0.278","comment":"\/\/ Pinot's equivalent function `dateTimeConvert(columnName, inputFormat, outputFormat, outputGranularity)`","label":0,"id":408045}
{"project":"presto-0.278","comment":"\/\/ materialized exchange is supported for all nodes.","label":0,"id":408046}
{"project":"presto-0.278","comment":"\/\/ The program control flow will go to finally next. And cleanup will run because","label":0,"id":408047}
{"project":"presto-0.278","comment":"\/\/ a database can be owned by a user or role","label":0,"id":408048}
{"project":"presto-0.278","comment":"\/\/ * Lifespan 10:  A   B  [C]  D; i.e. Pipeline A and B has finished scheduling (but not necessarily finished running).","label":0,"id":408049}
{"project":"presto-0.278","comment":"\/\/ Trigger notifications after releasing the lock","label":0,"id":408050}
{"project":"presto-0.278","comment":"\/\/ like escape","label":0,"id":408051}
{"project":"presto-0.278","comment":"\/\/ todo rewrite MockRemoteTask to fire a tate transition when splits are cleared, and then validate blocked future completes","label":1,"id":408052}
{"project":"presto-0.278","comment":"\/\/ on a timestamp the client's time zone must be taken into account.","label":0,"id":408053}
{"project":"presto-0.278","comment":"\/\/ ssl key store password without path","label":0,"id":408054}
{"project":"presto-0.278","comment":"\/\/ Expected run time for this query is ~30s. We will set `dummyServiceWaitTime` as 600s.","label":0,"id":408055}
{"project":"presto-0.278","comment":"\/\/ Create default schema should it not exist","label":0,"id":408056}
{"project":"presto-0.278","comment":"\/\/ not possible","label":0,"id":408057}
{"project":"presto-0.278","comment":"\/\/ DomainTranslator#fromPredicate needs type information, so do any necessary coercions here","label":0,"id":408058}
{"project":"presto-0.278","comment":"\/\/ Unnest","label":0,"id":408059}
{"project":"presto-0.278","comment":"\/\/ It is possible that sortKey is both an alias and a column name. In that case, sortKey references the aliased column.","label":0,"id":408060}
{"project":"presto-0.278","comment":"\/\/ do not interpret remote functions on coordinator","label":0,"id":408061}
{"project":"presto-0.278","comment":"\/\/ build dictionary","label":0,"id":408062}
{"project":"presto-0.278","comment":"\/\/ This is the smallest Rtree with height > 1","label":0,"id":408063}
{"project":"presto-0.278","comment":"\/**     * Get object from block at position and convert it to     * internal object used in Hive functions.     *\/","label":0,"id":408064}
{"project":"presto-0.278","comment":"\/\/ Return something that is true for all non-null values","label":0,"id":408065}
{"project":"presto-0.278","comment":"\/\/ TODO: refactor the entire LocationFactory interfaces to completely replace URI with more efficient\/expressive data structures","label":1,"id":408066}
{"project":"presto-0.278","comment":"\/**     * Creates a state machine with the specified initial state and no terminal states.     *     * @param name name of this state machine to use in debug statements     * @param executor executor for firing state change events; must not be a same thread executor     * @param initialState the initial state     *\/","label":0,"id":408067}
{"project":"presto-0.278","comment":"\/\/ table bucket number: this is used for evaluating \"$bucket\" filters.","label":0,"id":408068}
{"project":"presto-0.278","comment":"\/\/ evaluate the expression, pop the produced value, and load the null flag","label":0,"id":408069}
{"project":"presto-0.278","comment":"\/\/ TODO: Support other forms for producers","label":1,"id":408070}
{"project":"presto-0.278","comment":"\/\/ prepared statement is not supported by Presto on Spark","label":0,"id":408071}
{"project":"presto-0.278","comment":"\/\/ SELECT * FROM nation LEFT OUTER JOIN region ON nation.regionkey = region.regionkey and nation.name = region.name WHERE nation.name = 'blah'","label":0,"id":408072}
{"project":"presto-0.278","comment":"\/\/ Try to map same deterministic expressions within a projection into the same symbol\/\/ Omit NullLiterals since those have ambiguous types","label":0,"id":408073}
{"project":"presto-0.278","comment":"\/\/ char with filter","label":0,"id":408074}
{"project":"presto-0.278","comment":"\/** * Adds a session property (experimental). *\/","label":0,"id":408075}
{"project":"presto-0.278","comment":"\/**     * Gets the index of all columns matching the specified name     *\/","label":0,"id":408076}
{"project":"presto-0.278","comment":"\/\/ Lazily initialized","label":0,"id":408077}
{"project":"presto-0.278","comment":"\/\/ private static final TypeManager TYPE_MANAGER = new TypeRegistry();","label":0,"id":408078}
{"project":"presto-0.278","comment":"\/** * @return The original node, with identity projections possibly inserted between node and each child, limiting the columns to those permitted. * Returns a present Optional iff at least one child was rewritten. *\/","label":0,"id":408079}
{"project":"presto-0.278","comment":"\/\/ For complex types support only Filter IS_NULL and IS_NOT_NULL","label":0,"id":408080}
{"project":"presto-0.278","comment":"\/\/ Skip header \/ footer lines are not splittable except for a special case when skip.header.line.count=1","label":0,"id":408081}
{"project":"presto-0.278","comment":"\/\/ add second page","label":0,"id":408082}
{"project":"presto-0.278","comment":"\/\/ map can lead to side effects, no new entries can be created after such enumeration has","label":0,"id":408083}
{"project":"presto-0.278","comment":"\/\/ Repeatedly remove up to 3 elements and re-insert them.","label":0,"id":408084}
{"project":"presto-0.278","comment":"\/\/ Try to replace shard1 with newShards again (shard1 already deleted, delete shards that's already deleted)","label":0,"id":408085}
{"project":"presto-0.278","comment":"\/*        Designed to simulate how Presto allocates resources to tasks at the same level of the        feedback queue when there is large variance in accrued scheduled time.        Desired result:        Scheduling within levels should be fair - total accrued time should not affect what        fraction of resources tasks are allocated as long as they are in the same level.        *\/","label":0,"id":408086}
{"project":"presto-0.278","comment":"\/\/ Get the initial Range based on the row ID domain","label":0,"id":408087}
{"project":"presto-0.278","comment":"\/\/ Asserting on `block` is not very effective because most blocks passed to this method is compact.\/\/ Therefore, we split the `block` into two and assert again.\/\/ ------------------Test Whole Block Sizes---------------------------------------------------\/\/ Assert sizeInBytes for the whole block.","label":0,"id":408088}
{"project":"presto-0.278","comment":"\/\/ - at level 2, subscript 2 has 2 filters (> 3, < 100), subscript 4 has one filter (= 10)","label":0,"id":408089}
{"project":"presto-0.278","comment":"\/\/ this is added to allow more processes on database, otherwise the tests end up giving\/\/ ORA-12519, TNS:no appropriate service handler found\/\/ ORA-12505, TNS:listener does not currently know of SID given in connect descriptor\/\/ to fix this we have to change the number of processes of SPFILE","label":1,"id":408090}
{"project":"presto-0.278","comment":"\/** * Standard quick sort except that sorting is done on an index array rather than the values themselves * * @param order  The pre-allocated index array * @param values The values to sort * @param start  The beginning of the values to sort * @param end    The value after the last value to sort * @param limit  The minimum size to recurse down to. *\/","label":0,"id":408091}
{"project":"presto-0.278","comment":"\/\/ in Hive one can set conflicting values for the same property, in such case it looks like table properties are used","label":0,"id":408092}
{"project":"presto-0.278","comment":"\/** * Gets the index of the specified field. * * @throws IllegalArgumentException when field is not found *\/","label":0,"id":408093}
{"project":"presto-0.278","comment":"\/\/ these extra whitespaces in JSON string is to make sure the cast will work in such cases.","label":0,"id":408094}
{"project":"presto-0.278","comment":"\/\/ Only rewrite the aggregation if the else branch is not present or the else result is NULL.","label":0,"id":408095}
{"project":"presto-0.278","comment":"\/\/ Test request timeout.","label":0,"id":408096}
{"project":"presto-0.278","comment":"\/\/ ExampleTableHandle and ExampleColumnHandle passed in.  This is on because","label":0,"id":408097}
{"project":"presto-0.278","comment":"\/\/\/\/ Window function\/\/ ===============","label":0,"id":408098}
{"project":"presto-0.278","comment":"\/**     * Renames the index tables (if applicable) for the old table to the new table.     *     * @param oldTable Old AccumuloTable     * @param newTable New AccumuloTable     *\/","label":0,"id":408099}
{"project":"presto-0.278","comment":"\/\/ do not require data read and do not show up in output","label":0,"id":408100}
{"project":"presto-0.278","comment":"\/\/localhost:8080\/blackhole?disableCompression=true\");","label":0,"id":408101}
{"project":"presto-0.278","comment":"\/\/ acknowledge more pages will fail","label":0,"id":408102}
{"project":"presto-0.278","comment":"\/**     * One method is more specific than another if invocation handled by the first method could be passed on to the other one     *\/","label":0,"id":408103}
{"project":"presto-0.278","comment":"\/** * Gets the view data for views that match the specified table prefix. *\/","label":0,"id":408104}
{"project":"presto-0.278","comment":"\/\/ dereference outside of synchronized to avoid making a callback while holding a lock","label":0,"id":408105}
{"project":"presto-0.278","comment":"\/\/ keep prefix only expressions","label":0,"id":408106}
{"project":"presto-0.278","comment":"\/\/ maxCodePointCount < 0 means it's unbounded varchar VARCHAR.\/\/ If the types are VARCHAR(N) or CHAR(N), the length of the string need to be calculated and truncated.","label":0,"id":408107}
{"project":"presto-0.278","comment":"\/** * Try to locate a table index that can lookup results by indexableColumns and provide the requested outputColumns. *\/","label":0,"id":408108}
{"project":"presto-0.278","comment":"\/\/ This would be handled in validateType, but for completeness.","label":0,"id":408109}
{"project":"presto-0.278","comment":"\/\/ Lower running queries in dashboard resource groups and reload the config","label":0,"id":408110}
{"project":"presto-0.278","comment":"\/\/ Any additional identity information can reduce collisions.","label":0,"id":408111}
{"project":"presto-0.278","comment":"\/\/ It is further used in many places in DfsClient","label":0,"id":408112}
{"project":"presto-0.278","comment":"\/\/ Stats for whole table","label":0,"id":408113}
{"project":"presto-0.278","comment":"\/\/ This contains all ancestors except the topmost ancestor.","label":0,"id":408114}
{"project":"presto-0.278","comment":"\/\/ replicated join is preserved if there are no equality criteria","label":0,"id":408115}
{"project":"presto-0.278","comment":"\/\/ merge overlapping ranges","label":0,"id":408116}
{"project":"presto-0.278","comment":"\/\/ parent scope represents local query scope hierarchy. Local query scope","label":0,"id":408117}
{"project":"presto-0.278","comment":"\/\/ Columns definitions and ordering information for OrderBy Columns","label":0,"id":408118}
{"project":"presto-0.278","comment":"\/\/ Produce a combined positionCount output when individual pages meet the minRowCount","label":0,"id":408119}
{"project":"presto-0.278","comment":"\/\/ Blocks that advertise a fixed size in bytes per position should produce a size in bytes consistent with\/\/ their position count","label":0,"id":408120}
{"project":"presto-0.278","comment":"\/**     * Set the position offset and batch size on the positions array in the BlockEncodingBuffer. Called before the next batch is being copied     *\/","label":0,"id":408121}
{"project":"presto-0.278","comment":"\/\/ Let Presto decide when to repartition","label":0,"id":408122}
{"project":"presto-0.278","comment":"\/\/ return an empty geometry instead. However, JTS does not suffer from","label":0,"id":408123}
{"project":"presto-0.278","comment":"\/\/ aggregation does not pass through preferred hash variables","label":0,"id":408124}
{"project":"presto-0.278","comment":"\/**         * @param nodePointer - index\/pointer into parallel arrays of data structs         *\/","label":0,"id":408125}
{"project":"presto-0.278","comment":"\/\/localhost:8080?KerberosCredentialCachePath=\/test\", \"Connection property 'KerberosCredentialCachePath' is not allowed\");","label":0,"id":408126}
{"project":"presto-0.278","comment":"\/**         * Signals that transformation requires more data in order to continue and no result has been produced.         * {@link #process()} will be called with a new input element or with {@link Optional#empty()} if there         * are no more elements.         *\/","label":0,"id":408127}
{"project":"presto-0.278","comment":"\/\/ no tags","label":0,"id":408128}
{"project":"presto-0.278","comment":"\/\/ fill up some input bytes","label":0,"id":408129}
{"project":"presto-0.278","comment":"\/\/ Once the reserved pool is removed we should get rid of the logic of putting queries into reserved pool including","label":0,"id":408130}
{"project":"presto-0.278","comment":"\/\/ Internal function, doesn't need a description","label":0,"id":408131}
{"project":"presto-0.278","comment":"\/\/ Create the AccumuloTable object","label":0,"id":408132}
{"project":"presto-0.278","comment":"\/\/ For the purpose of \"distinct\", we need to canonicalize column references that may have varying","label":0,"id":408133}
{"project":"presto-0.278","comment":"\/\/ note that c_first_name and c_last_name are both of type CHAR(X) so the results","label":0,"id":408134}
{"project":"presto-0.278","comment":"\/\/ ensure maxCentroidCount > 2 * compression + weightLimitFudge","label":0,"id":408135}
{"project":"presto-0.278","comment":"\/\/ load class file from class loader","label":0,"id":408136}
{"project":"presto-0.278","comment":"\/\/ If reserved pool is not enabled, we don't create a MemoryPoolAssignmentsRequest that puts all the queries\/\/ in the general pool (as they already are). In this case we create an effectively NOOP MemoryPoolAssignmentsRequest.\/\/ Once the reserved pool is removed we should get rid of the logic of putting queries into reserved pool including\/\/ this piece of code.","label":0,"id":408137}
{"project":"presto-0.278","comment":"\/\/ materialize pages","label":0,"id":408138}
{"project":"presto-0.278","comment":"\/**     * Provides the default logical properties for a generic PlanNode which is essentially an empty set of properties.     *     * @return The default set of logical properties for a generic PlanNode.     *\/","label":0,"id":408139}
{"project":"presto-0.278","comment":"\/\/ be abandoned. Once the large column dictionary is abandoned, there is only small column with dictionary. Small column","label":0,"id":408140}
{"project":"presto-0.278","comment":"\/\/ Add disjuncts for ranges","label":0,"id":408141}
{"project":"presto-0.278","comment":"\/** * The plan optimizers to be applied before having the notion of distribution. *\/","label":0,"id":408142}
{"project":"presto-0.278","comment":"\/\/ only indent if we have a block description or more than one child node","label":0,"id":408143}
{"project":"presto-0.278","comment":"\/\/ Bucketed partitions are fully loaded immediately since all files must be loaded to determine the file to bucket mapping","label":0,"id":408144}
{"project":"presto-0.278","comment":"\/\/ streaming","label":0,"id":408145}
{"project":"presto-0.278","comment":"\/** * The ZValueRange class contains Optional Integer minimum and maximum value lists. If existing, they are all inclusive. * <p\/> * Examples of converting queries into ZValueRange variables: * (1) \"column == 5\"                    -> <code> new ZValueRange(ImmutableList.of(Optional.of(5)), ImmutableList.of(Optional.of(5))); <\/code> * (2) \"column >= 0 AND column <= 9\"    -> <code> new ZValueRange(ImmutableList.of(Optional.of(0)), ImmutableList.of(Optional.of(9))); <\/code> * (3) \"column >= 1\"                    -> <code> new ZValueRange(ImmutableList.of(Optional.of(1)), ImmutableList.of(Optional.empty())); <\/code> * (4) no range for column              -> <code> new ZValueRange(ImmutableList.of(Optional.empty()), ImmutableList.of(Optional.empty())); <\/code> * (5) \"column <= 5 OR column >= 10\"    -> <code> new ZValueRange(ImmutableList.of(Optional.empty(), Optional.of(10)), ImmutableList.of(Optional.of(5), Optional.empty())); <\/code> *\/","label":0,"id":408146}
{"project":"presto-0.278","comment":"\/\/ todo pass in desired projection","label":1,"id":408147}
{"project":"presto-0.278","comment":"\/\/ for heap element comparison","label":0,"id":408148}
{"project":"presto-0.278","comment":"\/\/ Do a partial delete on a shard that does not contain newly added column","label":0,"id":408149}
{"project":"presto-0.278","comment":"\/\/ And not if they have different symbols","label":0,"id":408150}
{"project":"presto-0.278","comment":"\/\/ STEP 2. Calculate target UTC millis in 1970","label":0,"id":408151}
{"project":"presto-0.278","comment":"\/**     * There are two types of tests in here, and they answer two different     * questions about MergeWindows (MW):     * <p>     * 1) Is MW working as it's supposed to be? The tests running the minimal     * set of optimizers can tell us this.     * 2) Has some other optimizer changed the plan in such a way that MW no     * longer merges windows with identical specifications because the plan     * that MW sees cannot be optimized by MW? The test running the full set     * of optimizers answers this, though it isn't actually meaningful unless     * we know the answer to question 1 is \"yes\".     * <p>     * The tests that use only the minimal set of optimizers are closer to true     * \"unit\" tests in that they verify the behavior of MW with as few     * external dependencies as possible. Those dependencies to include the     * parser and analyzer, so the phrase \"unit\" tests should be taken with a     * grain of salt. Using the parser and analyzer instead of creating plan     * nodes by hand does have a couple of advantages over a true unit test:     * 1) The tests are more self-maintaining.     * 2) They're a lot easier to read.     * 3) It's a lot less typing.     * <p>     * The test that runs with all of the optimizers acts as an integration test     * and ensures that MW is effective when run with the complete set of     * optimizers.     *\/","label":0,"id":408152}
{"project":"presto-0.278","comment":"\/**     * Gets the Date value of the given Presto column.     *     * @param name Column name     * @return Date value     *\/","label":0,"id":408153}
{"project":"presto-0.278","comment":"\/\/ Wait for the queries to start running and get assigned to the expected pools","label":0,"id":408154}
{"project":"presto-0.278","comment":"\/\/ ***************** arguments *****************","label":0,"id":408155}
{"project":"presto-0.278","comment":"\/\/ Mapping from list [node.getInput(0).get(symbolIndex), node.getInput(1).get(symbolIndex), ...] to node.getOutputVariables(symbolIndex).","label":0,"id":408156}
{"project":"presto-0.278","comment":"\/\/ null       null          X          X          X","label":0,"id":408157}
{"project":"presto-0.278","comment":"\/** * Reserves the given number of bytes to spill. If more than the maximum, throws an exception. * * @throws ExceededSpillLimitException *\/","label":0,"id":408158}
{"project":"presto-0.278","comment":"\/\/ maskChannel filter in delegate's addInput() method. This will make the","label":0,"id":408159}
{"project":"presto-0.278","comment":"\/\/ 2022-04-20 19:34:10.000507","label":0,"id":408160}
{"project":"presto-0.278","comment":"\/\/ store result so we can check for null","label":0,"id":408161}
{"project":"presto-0.278","comment":"\/**     * Buffer for streaming.     *\/","label":0,"id":408162}
{"project":"presto-0.278","comment":"\/\/ since we likely merged equivalence class from left and right source we will normalize the key property","label":0,"id":408163}
{"project":"presto-0.278","comment":"\/\/ not a SparkException with Presto failure info encoded","label":0,"id":408164}
{"project":"presto-0.278","comment":"\/\/ mappedScenario1 result 2","label":0,"id":408165}
{"project":"presto-0.278","comment":"\/**     * Returns the size of all positions marked true in the positions array.     * This is equivalent to multiple calls of {@code block.getRegionSizeInBytes(position, length)}     * where you mark all positions for the regions first.     *\/","label":0,"id":408166}
{"project":"presto-0.278","comment":"\/** * Read the Zip64 end of central directory locator from the input stream and parse additional * {@link ZipFileData} from it. *\/","label":0,"id":408167}
{"project":"presto-0.278","comment":"\/**     * Determines if one equivalence class property is more general than another.     * An equivalence class property is more general than another if it includes all equivalences of the other.     *     * @param otherEquivalenceClassProperty     * @return True if this equivalenceClassProperty is more general than otherEquivalenceClassProperty or False otherwise.     *\/","label":0,"id":408168}
{"project":"presto-0.278","comment":"\/**         * Computes the segment associated with a given index.         *         * @param index an index into a big array.         * @return the associated segment.         *\/","label":0,"id":408169}
{"project":"presto-0.278","comment":"\/\/ to SQL spec. So there is a loss of precision here.","label":0,"id":408170}
{"project":"presto-0.278","comment":"\/\/ nodes in order of their appearance in tree plan (left, right, parent)","label":0,"id":408171}
{"project":"presto-0.278","comment":"\/\/ stop tracking splits (especially blocked splits which may never unblock)","label":0,"id":408172}
{"project":"presto-0.278","comment":"\/\/ If the starting position is before the end of the search region, return the","label":0,"id":408173}
{"project":"presto-0.278","comment":"\/\/ We mark operator as blocked regardless of blocked.isDone(), because finishMemoryRevoke has not been called yet.","label":0,"id":408174}
{"project":"presto-0.278","comment":"\/**     * Interpolate a color between lowColor and highColor based the provided value     * <p\/>     * The value is truncated to the range [low, high] if it's outside.     * Color must be a valid rgb value of the form #rgb     *\/","label":0,"id":408175}
{"project":"presto-0.278","comment":"\/** * List of sort orders in the same order as the list of variables returned from `getOrderByVariables()`. This means for * index i, variable `getOrderByVariables().get(i)` has order `getOrderingList().get(i)`. *\/","label":0,"id":408176}
{"project":"presto-0.278","comment":"\/\/ This utility method will try to load the resource using a class loader\/\/ then copy its content to a temporary file for consumptions by test code\/\/ This is useful because some test runner (buck test to be specific) run\/\/ all tests out of a jar file. In that case, any attempts trying to read\/\/ resource file from file system would fail. You need to load file using\/\/ a class loader instead. This method bridges the gap for developers to\/\/ read resources from jars as a usual file.","label":0,"id":408177}
{"project":"presto-0.278","comment":"\/\/ to safely close the client","label":0,"id":408178}
{"project":"presto-0.278","comment":"\/\/ illegal inputs","label":0,"id":408179}
{"project":"presto-0.278","comment":"\/\/ if the file is being closed, add the file footer","label":0,"id":408180}
{"project":"presto-0.278","comment":"\/**     * Allow subclass to change default configuration.     *\/","label":0,"id":408181}
{"project":"presto-0.278","comment":"\/\/ test a case when first row group has values, but second row group is all nulls,\/\/ thus forcing the keys from first row group to be carried over to the second row group\/\/ and use 0 value count","label":0,"id":408182}
{"project":"presto-0.278","comment":"\/\/ The decodedBlock could be primitive block, Dictionary\/RLE block, or ColumnarArray\/Map\/Row object","label":0,"id":408183}
{"project":"presto-0.278","comment":"\/\/ tablePartitioning","label":0,"id":408184}
{"project":"presto-0.278","comment":"\/\/ E.g., the last data commit time for the input partitions.","label":0,"id":408185}
{"project":"presto-0.278","comment":"\/\/ Check for nulls, to make it thrift backwards compatible","label":0,"id":408186}
{"project":"presto-0.278","comment":"\/\/ If the location of the old partition is the same as the location of the new partition:","label":0,"id":408187}
{"project":"presto-0.278","comment":"\/\/ it is a representative number to calculate the bytes required to encode each value.","label":0,"id":408188}
{"project":"presto-0.278","comment":"\/\/ does not participate in hashCode\/equals","label":0,"id":408189}
{"project":"presto-0.278","comment":"\/** * By default, matches any RowNumberNode.  Users add additional constraints by * calling the various member functions of the Builder, typically named according * to the field names of RowNumberNode. *\/","label":0,"id":408190}
{"project":"presto-0.278","comment":"\/** * Gets the most updated {@link TaskInfo} of the task of the native task. * * @return an {@link Optional} of most updated {@link TaskInfo}, empty {@link Optional} if {@link HttpNativeExecutionTaskInfoFetcher} has not yet retrieved the very first * TaskInfo. *\/","label":0,"id":408191}
{"project":"presto-0.278","comment":"\/**     * Stages of `LimitNode`:     *     * PARTIAL:   `LimitNode` is in the distributed plan and generates partial results on local workers.     * FINAL:     `LimitNode` is in the distributed plan and finalizes the partial results from `PARTIAL` nodes.     *\/","label":0,"id":408192}
{"project":"presto-0.278","comment":"\/\/ it is a 1:1 mapping of locality group to column families","label":0,"id":408193}
{"project":"presto-0.278","comment":"\/**     * Get the memory utilization percentage.     *\/","label":0,"id":408194}
{"project":"presto-0.278","comment":"\/\/ IPv4: 255.255.255.255 - 15 characters","label":0,"id":408195}
{"project":"presto-0.278","comment":"\/\/%s\", server.url(\"\/\").uri().getAuthority());","label":0,"id":408196}
{"project":"presto-0.278","comment":"\/\/ and the partitioned patch is being followed","label":0,"id":408197}
{"project":"presto-0.278","comment":"\/**     * Filter the list of tables and views to those visible to the identity.     *\/","label":0,"id":408198}
{"project":"presto-0.278","comment":"\/\/ cannot fully evaluate, add updated whenClause","label":0,"id":408199}
{"project":"presto-0.278","comment":"\/\/ second project is invoked once per output page","label":0,"id":408200}
{"project":"presto-0.278","comment":"\/**     * Stage was canceled by a user.     *\/","label":0,"id":408201}
{"project":"presto-0.278","comment":"\/\/ Charlie still cannot access view because Bob does not have SELECT WITH GRANT OPTION","label":0,"id":408202}
{"project":"presto-0.278","comment":"\/**     * Sets a system property for the session.  The property name and value must     * only contain characters from US-ASCII and must not be for '='.     *\/","label":0,"id":408203}
{"project":"presto-0.278","comment":"\/\/ key metadata for encrypting the dataKeyMetadata","label":0,"id":408204}
{"project":"presto-0.278","comment":"\/** * Returns a subset of conjuncts matching one of the following shapes: * - ST_Contains(...) * - ST_Within(...) * - ST_Intersects(...) * <p> * Doesn't check or guarantee anything about function arguments. *\/","label":0,"id":408205}
{"project":"presto-0.278","comment":"\/\/localhost:8080\/\/default\", \"Catalog name is empty:\");","label":0,"id":408206}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to delete from the specified table in this catalog. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":408207}
{"project":"presto-0.278","comment":"\/\/ todo parse file by hand since Properties ignores duplicate entries","label":1,"id":408208}
{"project":"presto-0.278","comment":"\/\/ Test should expect an empty entry for translatedSql since > is an unsupported function currently in the optimizer","label":0,"id":408209}
{"project":"presto-0.278","comment":"\/\/ at this point, Task1 = 300k total bytes, Task2 = 100k total bytes","label":0,"id":408210}
{"project":"presto-0.278","comment":"\/\/ \u00a0innerLine","label":0,"id":408211}
{"project":"presto-0.278","comment":"\/\/ Column 3L","label":0,"id":408212}
{"project":"presto-0.278","comment":"\/\/ HACK\/\/ Certain operations like 0 \/ 0 or likeExpression may throw exceptions.\/\/ Wrap them in a call that will throw the exception if the expression is actually executed","label":1,"id":408213}
{"project":"presto-0.278","comment":"\/** * @return true when the current resource manager count is greater or equals to * minimum resource manager count for Coordinator. *\/","label":0,"id":408214}
{"project":"presto-0.278","comment":"\/\/ We compare object equality for Plan nodes. It is necessary because plan nodes can be expensive to compare,\/\/ and its also sufficient because we only hash stats equivalent plan nodes, which don't change while planning.","label":0,"id":408215}
{"project":"presto-0.278","comment":"\/\/ This handles HTTP basic auth per RFC 7617. The header contains the","label":0,"id":408216}
{"project":"presto-0.278","comment":"\/\/ Math.abs is required here because for Polygons with a 2D area of 0\/\/ isExteriorRing returns false for the exterior ring","label":0,"id":408217}
{"project":"presto-0.278","comment":"\/\/ create 2 columns X 800 rows of strings with each string's size = 10KB\/\/ this can force previouslyComputedResults to be saved given the page is 16MB in size","label":0,"id":408218}
{"project":"presto-0.278","comment":"\/**     * Enforce query CPU time limits     *\/","label":0,"id":408219}
{"project":"presto-0.278","comment":"\/\/ rowid handle. Note that in Hive connector, rowid handle is not implemented beyond plan-time.","label":0,"id":408220}
{"project":"presto-0.278","comment":"\/\/ on failure assume we need to update again","label":0,"id":408221}
{"project":"presto-0.278","comment":"\/\/ convert back to IOException","label":0,"id":408222}
{"project":"presto-0.278","comment":"\/\/ TODO: v, ns, sparse fields","label":1,"id":408223}
{"project":"presto-0.278","comment":"\/\/ TEST: Propagate maxcard through the filter below the sort","label":0,"id":408224}
{"project":"presto-0.278","comment":"\/\/ however other optimizers post-pushdown can come in and prune\/re-order the required column handles","label":0,"id":408225}
{"project":"presto-0.278","comment":"\/\/ Exchanges","label":0,"id":408226}
{"project":"presto-0.278","comment":"\/\/ Always start with replace","label":0,"id":408227}
{"project":"presto-0.278","comment":"\/\/ The element doesn't exist","label":0,"id":408228}
{"project":"presto-0.278","comment":"\/\/ - 2. Current page has been processed.","label":0,"id":408229}
{"project":"presto-0.278","comment":"\/\/ TODO: figure out a way to know what exactly stage has caused a failure","label":1,"id":408230}
{"project":"presto-0.278","comment":"\/\/ Rewind when split is fully retrieved","label":0,"id":408231}
{"project":"presto-0.278","comment":"\/\/ Skipping for now as there hard to compute it properly and so far we do not have","label":0,"id":408232}
{"project":"presto-0.278","comment":"\/\/ add three pages to the buffer","label":0,"id":408233}
{"project":"presto-0.278","comment":"\/\/ it will write checkpoints for all streams, but in other cases it will write only the streams that exist.","label":0,"id":408234}
{"project":"presto-0.278","comment":"\/\/ If tunnel trace token is null, we expose the Presto tracing id.","label":0,"id":408235}
{"project":"presto-0.278","comment":"\/\/ Nodes that gather data into a single stream","label":0,"id":408236}
{"project":"presto-0.278","comment":"\/\/ non-null result without any input","label":0,"id":408237}
{"project":"presto-0.278","comment":"\/\/ end with the query IDs in this transaction.","label":0,"id":408238}
{"project":"presto-0.278","comment":"\/\/ output is multiple","label":0,"id":408239}
{"project":"presto-0.278","comment":"\/\/\", Pattern.class);","label":0,"id":408240}
{"project":"presto-0.278","comment":"\/\/ over allocate buffer which makes decompression easier","label":0,"id":408241}
{"project":"presto-0.278","comment":"\/\/ Test yield signal works for page processor.","label":0,"id":408242}
{"project":"presto-0.278","comment":"\/**     * Utility function that rebuild a StreamingPlanSection, re-create stageExecutionAndScheduler for each of its stage, and finally update the stageExecutions map.     *\/","label":0,"id":408243}
{"project":"presto-0.278","comment":"\/\/ if columns are explicitly aliased -> WITH cte(alias1, alias2 ...)","label":0,"id":408244}
{"project":"presto-0.278","comment":"\/\/ entire column is used in a filter","label":0,"id":408245}
{"project":"presto-0.278","comment":"\/\/ Add the same partition with different location, it should trigger the metastore to generate different commit output.","label":0,"id":408246}
{"project":"presto-0.278","comment":"\/** * Splits running on a thread. *\/","label":0,"id":408247}
{"project":"presto-0.278","comment":"\/\/ Big Int","label":0,"id":408248}
{"project":"presto-0.278","comment":"\/\/ page 4:\/\/ the fourth page will remove the first page; also it leaves it with an empty slot","label":0,"id":408249}
{"project":"presto-0.278","comment":"\/\/ Synthesize an empty block if one does not already exist.","label":0,"id":408250}
{"project":"presto-0.278","comment":"\/**     * True if the key codec should be used, false if the message codec should be used.     *\/","label":0,"id":408251}
{"project":"presto-0.278","comment":"\/\/ Increment the cardinality for the number of rows in the table","label":0,"id":408252}
{"project":"presto-0.278","comment":"\/\/ Min ds partition stats indicates that it is an empty partition. Disable rewrite.","label":0,"id":408253}
{"project":"presto-0.278","comment":"\/\/ advance one phase and verify","label":0,"id":408254}
{"project":"presto-0.278","comment":"\/\/ add newly-added partitions to the results from underlying metastore","label":0,"id":408255}
{"project":"presto-0.278","comment":"\/\/ h2 is slow","label":0,"id":408256}
{"project":"presto-0.278","comment":"\/\/ start driver; get null value due to yield for the first 15 times","label":0,"id":408257}
{"project":"presto-0.278","comment":"\/\/ TODO: enable optimization related to lambda expression\/\/ A mechanism to convert function type back into lambda expression need to exist to enable optimization","label":1,"id":408258}
{"project":"presto-0.278","comment":"\/\/ read sequence sync if present","label":0,"id":408259}
{"project":"presto-0.278","comment":"\/\/ Only domain predicates","label":0,"id":408260}
{"project":"presto-0.278","comment":"\/\/ external function","label":0,"id":408261}
{"project":"presto-0.278","comment":"\/\/ TODO #7122 assertQuery(chicago, \"SELECT TIMESTAMP '1960-01-22 3:04:05.123'\");\/\/ TODO #7122 assertQuery(kathmandu, \"SELECT TIMESTAMP '1960-01-22 3:04:05.123'\");","label":1,"id":408262}
{"project":"presto-0.278","comment":"\/\/ TODO: Add support for more manifest versions\/\/ Verify the manifest version","label":1,"id":408263}
{"project":"presto-0.278","comment":"\/\/ Hive skips map entries with null keys","label":0,"id":408264}
{"project":"presto-0.278","comment":"\/* DOS format timestamp field offsets. *\/","label":0,"id":408265}
{"project":"presto-0.278","comment":"\/\/ offset 31","label":0,"id":408266}
{"project":"presto-0.278","comment":"\/\/ In RewriteIfOverAggregation, we can only optimize when the aggregation output is used in only one IF expression, and not used in any other expressions (excluding\/\/ identity assignments). Hence we need to simplify projection assignments to combine\/inline expressions in assignments so as to identify the candidate IF expressions.","label":0,"id":408267}
{"project":"presto-0.278","comment":"\/\/ safe since the size is rechecked before returning pages.","label":0,"id":408268}
{"project":"presto-0.278","comment":"\/\/ the average row size: averageRowSize * the number of rows: nonNullPositionCount","label":0,"id":408269}
{"project":"presto-0.278","comment":"\/\/ provided to a Driver, the Driver will not process them right away. Instead, the splits are","label":0,"id":408270}
{"project":"presto-0.278","comment":"\/\/ re-check after synchronizing","label":0,"id":408271}
{"project":"presto-0.278","comment":"\/\/ We already validated this earlier, so it'll exist","label":0,"id":408272}
{"project":"presto-0.278","comment":"\/\/ This optimization relies on being able to GROUP BY arguments\/\/ of the original aggregation functions. If they their types are\/\/ not comparable, we have to skip it.","label":0,"id":408273}
{"project":"presto-0.278","comment":"\/\/ with non-index join.  Make sure no errors are thrown when running index joins","label":0,"id":408274}
{"project":"presto-0.278","comment":"\/\/ free 5 bytes for test_tag","label":0,"id":408275}
{"project":"presto-0.278","comment":"\/\/ simple types","label":0,"id":408276}
{"project":"presto-0.278","comment":"\/\/ getting new pages will again acknowledge the previously acknowledged pages but this is ok","label":0,"id":408277}
{"project":"presto-0.278","comment":"\/\/ cross join","label":0,"id":408278}
{"project":"presto-0.278","comment":"\/\/test-bucket\/empty-dir\/\"));","label":0,"id":408279}
{"project":"presto-0.278","comment":"\/\/ 0th field is the label (i.e. table name)\/\/ 1st field is the name of the host, but isn't fully qualified","label":0,"id":408280}
{"project":"presto-0.278","comment":"\/\/ Use TESTING_PAGE_WITH_DICTIONARY_BLOCK instead of TESTING_PAGE_WITH_NULL_AND_DICTIONARY_BLOCK's logical size to estimate the output data size, because the null Block should not be sent over the wire.","label":0,"id":408281}
{"project":"presto-0.278","comment":"\/\/ create window node","label":0,"id":408282}
{"project":"presto-0.278","comment":"\/\/ this does not change the elements in the heap;","label":0,"id":408283}
{"project":"presto-0.278","comment":"\/\/ Test null-handling in default case of InCodeGenerator","label":0,"id":408284}
{"project":"presto-0.278","comment":"\/\/ Encrypted file with plaintext footer","label":0,"id":408285}
{"project":"presto-0.278","comment":"\/\/ not","label":0,"id":408286}
{"project":"presto-0.278","comment":"\/** * Interface specifically for tasks needing QueryStateMachine for transaction and session management. * @param <T> *\/","label":0,"id":408287}
{"project":"presto-0.278","comment":"\/\/ Rewind bucket 1 and test only bucket 1 is rewinded.","label":0,"id":408288}
{"project":"presto-0.278","comment":"\/\/ Test no partition stats","label":0,"id":408289}
{"project":"presto-0.278","comment":"\/\/ z's stats should be unchanged when not involved, except NDV capping to row count\/\/ Equal ranges","label":0,"id":408290}
{"project":"presto-0.278","comment":"\/\/ use reflection to get isSplittable method on inputFormat","label":0,"id":408291}
{"project":"presto-0.278","comment":"\/\/ For now heuristically pick sort expression which has most search expressions assigned to it.","label":0,"id":408292}
{"project":"presto-0.278","comment":"\/\/ verify that the class exists","label":0,"id":408293}
{"project":"presto-0.278","comment":"\/**     * Updates the buffer configuration.     *\/","label":0,"id":408294}
{"project":"presto-0.278","comment":"\/\/ take one's complement'","label":0,"id":408295}
{"project":"presto-0.278","comment":"\/** * Return true if this instance has a defined port. *\/","label":0,"id":408296}
{"project":"presto-0.278","comment":"\/\/ Test broadcast join","label":0,"id":408297}
{"project":"presto-0.278","comment":"\/*                     * Special case for nodes that can alias symbols in the node's assignment map.                     * In this case, we've already added the alias in the map, but we won't include it                     * as a simple rename as covered above. Add the existing alias to the result if                     * the LHS of the assignment matches the symbol reference of the existing alias.                     *                     * This comes up when we alias expressions in project nodes for use further up the tree.                     * At the beginning for the function, map contains { NEW_ALIAS: SymbolReference(\"expr_2\" }                     * and the assignments map contains { expr_2 := <some expression> }.                     *\/","label":0,"id":408298}
{"project":"presto-0.278","comment":"\/\/ Add an empty split in case no splits have been produced for the source.","label":0,"id":408299}
{"project":"presto-0.278","comment":"\/\/ check basic statistics","label":0,"id":408300}
{"project":"presto-0.278","comment":"\/\/ reorder: [m+1, m+2, ..., m+n, 0]","label":0,"id":408301}
{"project":"presto-0.278","comment":"\/**     * targetPath and writePath will be root directory of all partition and table paths     * that may be returned by {@link #getTableWriteInfo(LocationHandle)} and {@link #getPartitionWriteInfo(LocationHandle, Optional, String)} method.     *\/","label":0,"id":408302}
{"project":"presto-0.278","comment":"\/\/ Otherwise defer the \"partition exist\" check to be done on","label":0,"id":408303}
{"project":"presto-0.278","comment":"\/\/ This is hack that we need to use as the timezone interpretation depends on date (not only on time)","label":1,"id":408304}
{"project":"presto-0.278","comment":"\/**     * Gets the Varbinary value of the given Presto column.     *     * @param name Column name     * @return Varbinary value     *\/","label":0,"id":408305}
{"project":"presto-0.278","comment":"\/\/ size unchanged means distributive law will not apply, we can save an unnecessary crossProduct call.","label":0,"id":408306}
{"project":"presto-0.278","comment":"\/\/ the hash channels are always packed in a page without extra columns","label":0,"id":408307}
{"project":"presto-0.278","comment":"\/** * Get the names that match the specified table prefix (never null). *\/","label":0,"id":408308}
{"project":"presto-0.278","comment":"\/\/ Get the column qualifiers we want to index for this column family (if any)","label":0,"id":408309}
{"project":"presto-0.278","comment":"\/\/ check first nesting level","label":0,"id":408310}
{"project":"presto-0.278","comment":"\/\/ Long decimal","label":0,"id":408311}
{"project":"presto-0.278","comment":"\/\/ filter on multiple columns, plus filter function","label":0,"id":408312}
{"project":"presto-0.278","comment":"\/\/ Make sure corners are included","label":0,"id":408313}
{"project":"presto-0.278","comment":"\/\/ add a union over all the rewritten sources. The outputs of the union have the same name as the\/\/ original intersect node","label":0,"id":408314}
{"project":"presto-0.278","comment":"\/** * Get the 64-bit hash code for an object *\/","label":0,"id":408315}
{"project":"presto-0.278","comment":"\/\/ did the task instance id change","label":0,"id":408316}
{"project":"presto-0.278","comment":"\/** * Ensures this big array is at least the specified length.  If the array is smaller, segments * are added until the array is larger then the specified length. *\/","label":0,"id":408317}
{"project":"presto-0.278","comment":"\/**         * The mask used to compute the offset associated to an index.         *\/","label":0,"id":408318}
{"project":"presto-0.278","comment":"\/\/ Some negative times.","label":0,"id":408319}
{"project":"presto-0.278","comment":"\/** * Gets the metadata for the specified table column. * * @throws RuntimeException if table or column handles are no longer valid *\/","label":0,"id":408320}
{"project":"presto-0.278","comment":"\/\/ Now that there is a transaction, the catalog name can be resolved to a connector, and the catalog properties can be validated","label":0,"id":408321}
{"project":"presto-0.278","comment":"\/\/ add pages to the buffer (this will increase the reference count by one)","label":0,"id":408322}
{"project":"presto-0.278","comment":"\/\/ Insertion sort on smallest arrays","label":0,"id":408323}
{"project":"presto-0.278","comment":"\/** * @return true when the current worker count is greater or equals to * minimum worker count for Coordinator. *\/","label":0,"id":408324}
{"project":"presto-0.278","comment":"\/\/ https:\/\/www.oracle.com\/java\/technologies\/tzdata-versions.html","label":0,"id":408325}
{"project":"presto-0.278","comment":"\/\/ left = 1, right = 3 --> (3) distribute left into right","label":0,"id":408326}
{"project":"presto-0.278","comment":"\/\/ Counting only elements which belong to current collection, skipping inner elements of nested collections\/structs","label":0,"id":408327}
{"project":"presto-0.278","comment":"\/\/ Timeout for each fetching request","label":0,"id":408328}
{"project":"presto-0.278","comment":"\/**     * Check if the principal is allowed to be the specified user.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":408329}
{"project":"presto-0.278","comment":"\/\/ right is guaranteed to exist because we set the penalty of the last bucket to infinity","label":0,"id":408330}
{"project":"presto-0.278","comment":"\/\/ we unwrap Optional<JoinFilterFunction> to actual verifier or null in constructor for performance reasons\/\/ we do quick check for `filterFunction == null` in `isJoinPositionEligible` to avoid calls to applyFilterFunction","label":0,"id":408331}
{"project":"presto-0.278","comment":"\/\/ INVARIANT: TableScan with key (A) and TopN and\/or Limit sets result N=1. Key property should be emptied.","label":0,"id":408332}
{"project":"presto-0.278","comment":"\/\/ verify the future completed\/\/ buffer does not return a \"complete\" result in this case, but it doesn't matter","label":0,"id":408333}
{"project":"presto-0.278","comment":"\/\/ Inner Join converted to cross join because all join conditions are pushed down.","label":0,"id":408334}
{"project":"presto-0.278","comment":"\/\/ should be INTEGER","label":0,"id":408335}
{"project":"presto-0.278","comment":"\/\/ The secondBlockBuilder should already have elementCount rows.","label":0,"id":408336}
{"project":"presto-0.278","comment":"\/\/ Eagerly remove task sources from the map to let GC reclaim the memory","label":0,"id":408337}
{"project":"presto-0.278","comment":"\/\/ The interface will be dirty until we introduce subquery expression for RowExpression.","label":0,"id":408338}
{"project":"presto-0.278","comment":"\/\/ streamPartitioningColumns","label":0,"id":408339}
{"project":"presto-0.278","comment":"\/\/ extra path segments","label":0,"id":408340}
{"project":"presto-0.278","comment":"\/\/ unrecognized property","label":0,"id":408341}
{"project":"presto-0.278","comment":"\/**     * Looks for the pattern (ProjectNode*)WindowNode, and rewrites it to WindowNode(ProjectNode*),     * returning an empty option if it can't rewrite the projects, for example because they rely on     * the output of the WindowNode.     *     * @param projects the nodes above the target, bottom first.     *\/","label":0,"id":408342}
{"project":"presto-0.278","comment":"\/\/ record the mapping","label":0,"id":408343}
{"project":"presto-0.278","comment":"\/**     * Converts {@link WorkProcessor} into an yielding {@link Iterator}. The iterator will throw {@link IllegalStateException} when underlying {@link WorkProcessor}     * becomes blocked. {@link WorkProcessor} instance will be dereferenced immediately after iterator is exhausted.     *\/","label":0,"id":408344}
{"project":"presto-0.278","comment":"\/\/ entry1 (-1028466245): node3","label":0,"id":408345}
{"project":"presto-0.278","comment":"\/\/ before scheduling a new request clear the error timer\/\/ we consider a request to be \"new\" if there are no current failures","label":0,"id":408346}
{"project":"presto-0.278","comment":"\/\/ Print","label":0,"id":408347}
{"project":"presto-0.278","comment":"\/\/ inner key","label":0,"id":408348}
{"project":"presto-0.278","comment":"\/\/ Splits for a particular plan node (all driver groups)","label":0,"id":408349}
{"project":"presto-0.278","comment":"\/\/ So we only check orderability of the common supertype when comparing.","label":0,"id":408350}
{"project":"presto-0.278","comment":"\/\/ In this case, the preceding getNextBatch() indicates the noMoreSplits is false,","label":0,"id":408351}
{"project":"presto-0.278","comment":"\/\/ worst case is every bucket has a unique value, so preemptively keep this large enough to have a value for ever bucket\/\/ TODO: could optimize the growth algorithm to be resize this only when necessary; this wastes memory but guarantees that if every value has a distinct hash, we have space","label":1,"id":408352}
{"project":"presto-0.278","comment":"\/**     * Gets the Float value of the given Presto column.     *     * @param name Column name     * @return Float value     *\/","label":0,"id":408353}
{"project":"presto-0.278","comment":"\/\/ exclude stats for flat map keys because they are not present in the row group stats","label":0,"id":408354}
{"project":"presto-0.278","comment":"\/\/ Expire all queries","label":0,"id":408355}
{"project":"presto-0.278","comment":"\/\/ Check `finished` and invoke `queue.finish` after the `queue` is added to the map.","label":0,"id":408356}
{"project":"presto-0.278","comment":"\/** * Resolves table name. Returns {@link Optional#empty()} if table is not found. * Some tables which are not part of set returned by {@link #listSystemTables(ConnectorSession)} * can still be validly resolved. *\/","label":0,"id":408357}
{"project":"presto-0.278","comment":"\/**     * Find the first element in position links that is NOT smaller than probePosition     *\/","label":0,"id":408358}
{"project":"presto-0.278","comment":"\/\/ An alternative is calling getLongValue and then BigintOperators.castToVarchar.","label":0,"id":408359}
{"project":"presto-0.278","comment":"\/\/ places where TZ offset is explicitly accessed (namely AT TIME ZONE).","label":0,"id":408360}
{"project":"presto-0.278","comment":"\/\/ allows testing how fast different quantiles can be computed","label":0,"id":408361}
{"project":"presto-0.278","comment":"\/** * Returns a future with a list of splits. * This method is assumed to be called in a single-threaded way. * It can be called by multiple threads, but only if the previous call finished. *\/","label":0,"id":408362}
{"project":"presto-0.278","comment":"\/\/ CHAR(25)","label":0,"id":408363}
{"project":"presto-0.278","comment":"\/\/ - 1. It has not received finish() signal (more input to come).","label":0,"id":408364}
{"project":"presto-0.278","comment":"\/\/ to target location, the modification time will be the time when they are copied and not when","label":0,"id":408365}
{"project":"presto-0.278","comment":"\/\/ name","label":0,"id":408366}
{"project":"presto-0.278","comment":"\/\/ Skew: There are already columns with few values like order status that can be used for skewed (hot task) aggregations.","label":0,"id":408367}
{"project":"presto-0.278","comment":"\/\/ catalog, schema and table names are reported by the remote database","label":0,"id":408368}
{"project":"presto-0.278","comment":"\/\/ SCAFFOLDING","label":0,"id":408369}
{"project":"presto-0.278","comment":"\/\/ don't force gather","label":0,"id":408370}
{"project":"presto-0.278","comment":"\/** * Filter the list of catalogs to those visible to the identity. *\/","label":0,"id":408371}
{"project":"presto-0.278","comment":"\/\/ INVARIANT. DistinctLimit with (nationkey, mktsegment) as symbols and after first binding \"mktsegment\" to a constant.","label":0,"id":408372}
{"project":"presto-0.278","comment":"\/\/ Verify the partitioned keys are correctly created if copying partition columns","label":0,"id":408373}
{"project":"presto-0.278","comment":"\/\/ if finished, add the end marker","label":0,"id":408374}
{"project":"presto-0.278","comment":"\/\/ Block with a 0, and block with a 0 and a null","label":0,"id":408375}
{"project":"presto-0.278","comment":"\/\/ Prepare the one required record by looking at the aggregations and stats in metadata","label":0,"id":408376}
{"project":"presto-0.278","comment":"\/\/ after transitioning to finishing, the transaction is gone","label":0,"id":408377}
{"project":"presto-0.278","comment":"\/\/ fail","label":0,"id":408378}
{"project":"presto-0.278","comment":"\/\/ per specification, do not allow mixing argument types","label":0,"id":408379}
{"project":"presto-0.278","comment":"\/\/ function call in Presto.","label":0,"id":408380}
{"project":"presto-0.278","comment":"\/\/ predict the compression ratio at that limit if we were to convert this column to direct","label":0,"id":408381}
{"project":"presto-0.278","comment":"\/\/ check before killing to provide the proper error code (this is racy)","label":0,"id":408382}
{"project":"presto-0.278","comment":"\/\/ immediate join sources exceeds JOIN_MAX_BROADCAST_TABLE_SIZE limit but build tables are small","label":0,"id":408383}
{"project":"presto-0.278","comment":"\/\/ https:\/\/issues.apache.org\/jira\/browse\/HIVE-20098","label":0,"id":408384}
{"project":"presto-0.278","comment":"\/\/ initiate an upload by creating a stream & closing it immediately","label":0,"id":408385}
{"project":"presto-0.278","comment":"\/\/ location is found in SerDe properties with key \"path\".","label":0,"id":408386}
{"project":"presto-0.278","comment":"\/\/ No more partitions are left to be processed.","label":0,"id":408387}
{"project":"presto-0.278","comment":"\/** * This logical properties builder should be used by PlanNodes that propagate their * source properties and add a limit. For example, TopNNode and LimitNode. *\/","label":0,"id":408388}
{"project":"presto-0.278","comment":"\/\/ This method augments the location field of the partition to the staging location.\/\/ This way, if the partition is accessed in an ongoing transaction, staged data\/\/ can be found and accessed.","label":0,"id":408389}
{"project":"presto-0.278","comment":"\/\/ ex. sequence: 4 6 8 10 12 14 16","label":0,"id":408390}
{"project":"presto-0.278","comment":"\/** * @return the set of procedures provided by this connector *\/","label":0,"id":408391}
{"project":"presto-0.278","comment":"\/\/ This flat map column writer didn't write any key\/value.\/\/ Go over all value nodes for this flat map and check that they\/\/ have 0 values before marking them as excluded.","label":0,"id":408392}
{"project":"presto-0.278","comment":"\/\/ WARNING: the ORC predicate code depends on NaN and infinity not appearing in a tuple domain, so","label":0,"id":408393}
{"project":"presto-0.278","comment":"\/\/ add the tpch catalog","label":0,"id":408394}
{"project":"presto-0.278","comment":"\/\/ todo change this if session properties support null","label":1,"id":408395}
{"project":"presto-0.278","comment":"\/\/ verify layout covers all values","label":0,"id":408396}
{"project":"presto-0.278","comment":"\/**     * Builds {@link JoinGraph} containing {@code plan} node.     *\/","label":0,"id":408397}
{"project":"presto-0.278","comment":"\/\/ optimizations create variable names by iterating over it, and this will make plan more consistent","label":0,"id":408398}
{"project":"presto-0.278","comment":"\/**     * Returns the head of the equivalence class of the provided variable or constant reference.     *     * @param expression     * @return The head of the equivalence class of the provided variable or constant reference.     *\/","label":0,"id":408399}
{"project":"presto-0.278","comment":"\/\/ compatible union partitioning","label":0,"id":408400}
{"project":"presto-0.278","comment":"\/** * Creates a Base32 \/ Base32 Hex codec used for decoding and encoding. * <p> * When encoding the line length and line separator are given in the constructor. * <\/p> * <p> * Line lengths that aren't multiples of 8 will still essentially end up being multiples of 8 in the encoded data. * <\/p> * * @param lineLength Each line of encoded data will be at most of the given length (rounded down to nearest multiple of * 8). If lineLength &lt;= 0, then the output will not be divided into lines (chunks). Ignored when * decoding. * @param lineSeparator Each line of encoded data will end with this sequence of bytes. * @param useHex if {@code true}, then use Base32 Hex alphabet, otherwise use Base32 alphabet * @throws IllegalArgumentException The provided lineSeparator included some Base32 characters. That's not going to work! Or the * lineLength &gt; 0 and lineSeparator is null. *\/","label":0,"id":408401}
{"project":"presto-0.278","comment":"\/\/ File Separator","label":0,"id":408402}
{"project":"presto-0.278","comment":"\/\/ Start warning codes at 1","label":0,"id":408403}
{"project":"presto-0.278","comment":"\/\/ DictionaryBuilder allocates first offsets array upfront and grows further offsets array lazily.","label":0,"id":408404}
{"project":"presto-0.278","comment":"\/\/ Drop GroupId column","label":0,"id":408405}
{"project":"presto-0.278","comment":"\/\/ check if the exception is a mysql exception by matching the package name in the stack trace","label":0,"id":408406}
{"project":"presto-0.278","comment":"\/\/ Logarithmic histogram. Regular histogram (or digest) is too expensive, because of memory manipulations. Also, we don't need their guarantees of precision.","label":0,"id":408407}
{"project":"presto-0.278","comment":"\/\/ 7:   427886318 -> entry4 -> node3","label":0,"id":408408}
{"project":"presto-0.278","comment":"\/\/ These files may not have been written by OrcFileWriter. So file sizes not available.","label":0,"id":408409}
{"project":"presto-0.278","comment":"\/\/ FileStatistics page layout:\/\/\/\/ fileSize   rowCount\/\/ X             X","label":0,"id":408410}
{"project":"presto-0.278","comment":"\/\/ running the good page should still work","label":0,"id":408411}
{"project":"presto-0.278","comment":"\/\/ verify size","label":0,"id":408412}
{"project":"presto-0.278","comment":"\/\/ add the row to the open page","label":0,"id":408413}
{"project":"presto-0.278","comment":"\/\/ comparing with the input page, the output page also contains an extra instance size for previouslyComputedResults","label":0,"id":408414}
{"project":"presto-0.278","comment":"\/\/ replace min","label":0,"id":408415}
{"project":"presto-0.278","comment":"\/\/ all future tablets will be greater than this key","label":0,"id":408416}
{"project":"presto-0.278","comment":"\/\/ Process dictionary if:","label":0,"id":408417}
{"project":"presto-0.278","comment":"\/\/ Convert the values to byte[][].","label":0,"id":408418}
{"project":"presto-0.278","comment":"\/\/ row     fragments     context","label":0,"id":408419}
{"project":"presto-0.278","comment":"\/\/ value to result buffer. if the delta base value is negative then it","label":0,"id":408420}
{"project":"presto-0.278","comment":"\/\/ This method measures the dictionary size required for the reader to decode.\/\/ The reader uses long[] array to hold the contents of the dictionary.\/\/ @See com.facebook.presto.orc.reader.LongDictionarySelectiveStreamReader.dictionary\/\/ So always multiply by the Long.BYTES size instead of typeSize.","label":0,"id":408421}
{"project":"presto-0.278","comment":"\/\/ wait until query starts running","label":0,"id":408422}
{"project":"presto-0.278","comment":"\/\/example.com\/path1\/p.php\", \"http\", \"example.com\", null, \"\/path1\/p.php\", \"\", \"\");","label":0,"id":408423}
{"project":"presto-0.278","comment":"\/\/ Options:","label":0,"id":408424}
{"project":"presto-0.278","comment":"\/** * Prometheus mock data * The array below represents to a response to from real data: * $ curl \"http:\/\/127.0.0.1:9090\/api\/v1\/query?query=up[120s]&time=1568638172\" * Just the time items from the \"values\" section of the response *\/","label":0,"id":408425}
{"project":"presto-0.278","comment":"\/** * Returns the minimal DiskRange that encloses both this DiskRange * and otherDiskRange. If there was a gap between the ranges the * new range will cover that gap. *\/","label":0,"id":408426}
{"project":"presto-0.278","comment":"\/\/ We use getFirstKnownOutputSizeInBytes instead of getSourceTablesSizeInBytes to account for the reduction in","label":0,"id":408427}
{"project":"presto-0.278","comment":"\/\/ max gap will be 0, but to store the gap as 0 we need at least 1 bit","label":0,"id":408428}
{"project":"presto-0.278","comment":"\/\/ read query output","label":0,"id":408429}
{"project":"presto-0.278","comment":"\/\/ missing reference expression can be solved within current subPlan,\/\/ or within outer plans in case of multiple nesting levels of subqueries.","label":0,"id":408430}
{"project":"presto-0.278","comment":"\/\/ This will help us prune which data we receive from Accumulo","label":0,"id":408431}
{"project":"presto-0.278","comment":"\/\/ This version supports optionally disabling the filtering of null map key, which should only be used for building test data sets\/\/ that contain null map keys.  For production, null map keys are not allowed.","label":0,"id":408432}
{"project":"presto-0.278","comment":"\/\/ Steps to get canonical aggregations:","label":0,"id":408433}
{"project":"presto-0.278","comment":"\/\/ there is no grouping so work will always be done","label":0,"id":408434}
{"project":"presto-0.278","comment":"\/\/ Insert into bucketed unpartitioned table is unsupported","label":0,"id":408435}
{"project":"presto-0.278","comment":"\/\/ scalar expression","label":0,"id":408436}
{"project":"presto-0.278","comment":"\/\/\/\/ Additional timings\/\/","label":0,"id":408437}
{"project":"presto-0.278","comment":"\/\/ backup first file","label":0,"id":408438}
{"project":"presto-0.278","comment":"\/\/ scale exceeds max precision","label":0,"id":408439}
{"project":"presto-0.278","comment":"\/\/ Create the BatchScanner and set the ranges from the split","label":0,"id":408440}
{"project":"presto-0.278","comment":"\/\/ Logarithmic histogram. Regular histogram (or digest) is too expensive, because of memory manipulations. Also, we don't need their guarantees of precision.\/\/ To make it maximally fast by reducing indirections (it will fit in cache L1 anyways) counters are packed in one array.\/\/ Layout (here \"bucket\" is histogram bucket):\/\/ [2*bucket]      count probe positions that produced \"bucket\" rows on source side,\/\/ [2*bucket + 1]  total count of rows that were produces by probe rows in this bucket.","label":0,"id":408441}
{"project":"presto-0.278","comment":"\/\/ histogram that store the encoded bit requirement for each values.\/\/ maximum number of bits that can encoded is 32 (refer FixedBitSizes)","label":0,"id":408442}
{"project":"presto-0.278","comment":"\/\/ make sure the stripe cache has not been read","label":0,"id":408443}
{"project":"presto-0.278","comment":"\/\/ this problem.","label":0,"id":408444}
{"project":"presto-0.278","comment":"\/\/ noinspection unchecked","label":0,"id":408445}
{"project":"presto-0.278","comment":"\/**     * Checks if a schema exists. The connector may have schemas that exist     * but are not enumerable via {@link #listSchemaNames}.     *\/","label":0,"id":408446}
{"project":"presto-0.278","comment":"\/\/192.0.2.8\"), new NodeVersion(\"1\"), false, false, false);","label":0,"id":408447}
{"project":"presto-0.278","comment":"\/\/ clean shards","label":1,"id":408448}
{"project":"presto-0.278","comment":"\/\/ beyond a threshold, then we need to patch the values. if the variation","label":0,"id":408449}
{"project":"presto-0.278","comment":"\/\/ destroyed is set when the client sends a DELETE to the buffer\/\/ this is an acknowledgement that the client has observed the end of the buffer","label":0,"id":408450}
{"project":"presto-0.278","comment":"\/\/ 1. Update index table","label":0,"id":408451}
{"project":"presto-0.278","comment":"\/**     * LOWER UNBOUNDED is specified with an empty value and a ABOVE bound     * UPPER UNBOUNDED is specified with an empty value and a BELOW bound     *\/","label":0,"id":408452}
{"project":"presto-0.278","comment":"\/\/ MethodHandles are only used in MapBlock\/MapBlockBuilder,\/\/ and they are shared among blocks created by the same MapType.\/\/ So we don't account for the memory held onto by MethodHandle instances.\/\/ Otherwise, we will be counting it multiple times.","label":0,"id":408453}
{"project":"presto-0.278","comment":"\/\/ Add a column with the different ID with different type","label":0,"id":408454}
{"project":"presto-0.278","comment":"\/\/ verify the data is unchanged","label":0,"id":408455}
{"project":"presto-0.278","comment":"\/\/ Generate random points within the approximate bounding box of the US polygon:\/\/ POLYGON ((-124 27, -65 27, -65 49, -124 49, -124 27))","label":0,"id":408456}
{"project":"presto-0.278","comment":"\/\/ even if the sequence finishes after length.","label":0,"id":408457}
{"project":"presto-0.278","comment":"\/\/ exit status loop if there is pending output","label":0,"id":408458}
{"project":"presto-0.278","comment":"\/** * Given the array element type and Presto Block, decodes the Block into a list of values. * * @param elementType Array element type * @param block Array block * @return List of values *\/","label":0,"id":408459}
{"project":"presto-0.278","comment":"\/\/ Cassandra does not support adding columns","label":0,"id":408460}
{"project":"presto-0.278","comment":"\/**     * Writes the long value into the {@code BlockBuilder}.     *\/","label":0,"id":408461}
{"project":"presto-0.278","comment":"\/** * A utility class for reading and writing {@link ZipFileEntry}s from byte arrays. *\/","label":0,"id":408462}
{"project":"presto-0.278","comment":"\/\/ FROM clause must be processed last, after all the field references from other clauses have been gathered","label":0,"id":408463}
{"project":"presto-0.278","comment":"\/\/ LEFT_JOIN_COLUMN < 10 non equality filter","label":0,"id":408464}
{"project":"presto-0.278","comment":"\/\/ Make sure each source positionally corresponds to their variable values in the Multimap","label":0,"id":408465}
{"project":"presto-0.278","comment":"\/\/ col Id 0, 1, 2, 3","label":0,"id":408466}
{"project":"presto-0.278","comment":"\/\/ end == -1 must be true","label":0,"id":408467}
{"project":"presto-0.278","comment":"\/\/ read full range in one request","label":0,"id":408468}
{"project":"presto-0.278","comment":"\/\/ Comprehensive testing is done by TestHiveDistributedAggregationsWithExchangeMaterialization, TestHiveDistributedQueriesWithExchangeMaterialization","label":0,"id":408469}
{"project":"presto-0.278","comment":"\/\/ HLLs size sum","label":0,"id":408470}
{"project":"presto-0.278","comment":"\/\/ 3. Table commit context (VARBINARY)","label":0,"id":408471}
{"project":"presto-0.278","comment":"\/\/ in the query that can cause page sizes to explode. For example: SELECT rand() FROM some_table","label":0,"id":408472}
{"project":"presto-0.278","comment":"\/**         * given an output outputBlockBuilder, writes one row (key -> count) of our histogram         *         * @param valuesBlock - values.build() is called externally         *\/","label":0,"id":408473}
{"project":"presto-0.278","comment":"\/\/ Layout is <size>:<digest>, where","label":0,"id":408474}
{"project":"presto-0.278","comment":"\/\/ begin first transaction","label":0,"id":408475}
{"project":"presto-0.278","comment":"\/\/ currentQuota is essentially the count we have successfully rehashed","label":0,"id":408476}
{"project":"presto-0.278","comment":"\/**     * Returns a block that assures all data is in memory.     * May return the same block if all block data is already in memory.     * <p>     * This allows streaming data sources to skip sections that are not     * accessed in a query.     *\/","label":0,"id":408477}
{"project":"presto-0.278","comment":"\/\/ verify the data","label":0,"id":408478}
{"project":"presto-0.278","comment":"\/\/ See if we can push inherited predicates down","label":0,"id":408479}
{"project":"presto-0.278","comment":"\/\/ RowExpressionInterpreter does more aggressive constant folding than ExpressionInterpreter.","label":0,"id":408480}
{"project":"presto-0.278","comment":"\/** * Convert Double to String and avoid scientific notation *\/","label":0,"id":408481}
{"project":"presto-0.278","comment":"\/\/ For grpc, we need to query Pinot controller for Pinot instance then extract the grpc port.","label":0,"id":408482}
{"project":"presto-0.278","comment":"\/\/ return null for empty rows","label":0,"id":408483}
{"project":"presto-0.278","comment":"\/** * Gets the column from the materialized view derived from provided function name and argument *\/","label":0,"id":408484}
{"project":"presto-0.278","comment":"\/\/ TODO: figure out a type-agnostic way of dealing with this. Maybe add a special unary operator","label":1,"id":408485}
{"project":"presto-0.278","comment":"\/\/ we don't start the finalizer so nothing will be collected, which is ok for a test","label":0,"id":408486}
{"project":"presto-0.278","comment":"\/\/ extendedprice * (1 - discount) * (1 + tax)","label":0,"id":408487}
{"project":"presto-0.278","comment":"\/** * Replaces subscript expression on Row with cast and dereference: * * <pre> * ROW(1, 'a', 2)[2] * <\/pre> * <p> * is transformed into: * * <pre> *     (CAST (ROW (1, 'a', 2) AS ROW (field_0 bigint, field_1 varchar(1), field_2 bigint))).field_1 * <\/pre> *\/","label":0,"id":408488}
{"project":"presto-0.278","comment":"\/\/ the `expected` Cast expression comes out of the AstBuilder with the `typeOnly` flag set to false.\/\/ always set the `typeOnly` flag to false so that it does not break the comparison.","label":0,"id":408489}
{"project":"presto-0.278","comment":"\/\/ Sorting to ensure that we can find cases of multiple referenceKeys within the same struct chain. Example - a.b and a.b.c","label":0,"id":408490}
{"project":"presto-0.278","comment":"\/\/ number of bit requirement between 90th and 100th percentile varies","label":0,"id":408491}
{"project":"presto-0.278","comment":"\/\/ The differences are:","label":0,"id":408492}
{"project":"presto-0.278","comment":"\/\/ overlapping ranges, everything filtered out (but we leave 0.5 due to safety coefficient)","label":0,"id":408493}
{"project":"presto-0.278","comment":"\/** * Json description to parse a single field from a Redis key\/value row. See {@link RedisTableDescription} for more details. *\/","label":0,"id":408494}
{"project":"presto-0.278","comment":"\/\/ two constants, first and third position (partkey_mod_9 BIGINT, suppkey BIGINT)","label":0,"id":408495}
{"project":"presto-0.278","comment":"\/\/ this size corresponds to a \"standard\" weight proportion of 1.0","label":0,"id":408496}
{"project":"presto-0.278","comment":"\/** * Converts cardinality-insensitive aggregations (max, min, \"distinct\") over partition keys * into simple metadata queries *\/","label":0,"id":408497}
{"project":"presto-0.278","comment":"\/** * Stage is planned but has not been scheduled yet.  A stage will * be in the planned state until, the dependencies of the stage * have begun producing output. *\/","label":0,"id":408498}
{"project":"presto-0.278","comment":"\/\/ database does not exist","label":0,"id":408499}
{"project":"presto-0.278","comment":"\/\/ invariant - subtracting any number from any other in the literals after","label":0,"id":408500}
{"project":"presto-0.278","comment":"\/\/ try to set no more buffers again, which should not result in an error","label":0,"id":408501}
{"project":"presto-0.278","comment":"\/\/ Note that 1MB is arbitrarily chosen and may be increased if a function implementation","label":0,"id":408502}
{"project":"presto-0.278","comment":"\/\/ load the altered table and verify the data","label":0,"id":408503}
{"project":"presto-0.278","comment":"\/\/ Many clients, including the Presto CLI and JDBC driver, use ISO-8859-1.","label":0,"id":408504}
{"project":"presto-0.278","comment":"\/\/ tracks whether this group or any children groups change as\/\/ this method executes","label":0,"id":408505}
{"project":"presto-0.278","comment":"\/** * File is complete *\/","label":0,"id":408506}
{"project":"presto-0.278","comment":"\/\/ Since we cannot create a set with multiple entries but same \"constant\", we just use number of entries","label":0,"id":408507}
{"project":"presto-0.278","comment":"\/\/ -> the original filter will work just fine","label":0,"id":408508}
{"project":"presto-0.278","comment":"\/\/ No distribution since it would add too many new terms","label":0,"id":408509}
{"project":"presto-0.278","comment":"\/\/ test reading two row groups from middle of file","label":0,"id":408510}
{"project":"presto-0.278","comment":"\/\/ Fill each buffer so they both have 10 buffered pages","label":0,"id":408511}
{"project":"presto-0.278","comment":"\/\/ assign splits iteratively","label":0,"id":408512}
{"project":"presto-0.278","comment":"\/\/ choose to work around this issue by synchronizing this method. Before synchronizing","label":1,"id":408513}
{"project":"presto-0.278","comment":"\/\/ number of percentiles","label":0,"id":408514}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to create the specified table in a catalog. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":408515}
{"project":"presto-0.278","comment":"\/\/ read metadata","label":0,"id":408516}
{"project":"presto-0.278","comment":"\/\/ Apply mapping from previous projection","label":0,"id":408517}
{"project":"presto-0.278","comment":"\/\/ Reverse","label":0,"id":408518}
{"project":"presto-0.278","comment":"\/**     * During periods of time when a level has no waiting splits, it will not accumulate     * scheduled time and will fall behind relative to other levels.     * <p>     * This can cause temporary starvation for other levels when splits do reach the     * previously-empty level.     * <p>     * To prevent this we set the scheduled time for levels which were empty to the expected     * scheduled time.     *\/","label":0,"id":408519}
{"project":"presto-0.278","comment":"\/\/ Remove nodes that don't exist anymore","label":0,"id":408520}
{"project":"presto-0.278","comment":"\/\/ this filter source consumes the input completely, so we do not pass through parent preferences","label":0,"id":408521}
{"project":"presto-0.278","comment":"\/\/ TODO this should fail, or represent TIMESTAMP '2018-02-13 13:14:15.227'","label":1,"id":408522}
{"project":"presto-0.278","comment":"\/** * The BoundedZValueRange class contains non-null Integer minimum and maximum value lists. The bounds are all inclusive. *\/","label":0,"id":408523}
{"project":"presto-0.278","comment":"\/**     * A buffer is finished for the given lifespan once no-more-pages has been set for that lifespan     * and all pages has been acknowledged.     * @see OutputBuffer#isFinished()     *\/","label":0,"id":408524}
{"project":"presto-0.278","comment":"\/\/ In case new partition had the statistics computed for all the columns, the storePartitionColumnStatistics\/\/ call in the alterPartition will just overwrite the old statistics. There is no need to explicitly remove anything.","label":0,"id":408525}
{"project":"presto-0.278","comment":"\/\/ the feature is enabled, but file doesn't have the stripe cache","label":0,"id":408526}
{"project":"presto-0.278","comment":"\/\/ able to encode it in the plan that gets sent to workers.","label":0,"id":408527}
{"project":"presto-0.278","comment":"\/\/ Test timestamp predicates in table with TIMESTAMP temporal column","label":0,"id":408528}
{"project":"presto-0.278","comment":"\/** * Hudi split weight provider based on the split size. * * The standard split size, `standardSplitSize` in bytes, corresponding split weight \"1\" and the minimum weight * `minimumWeight` are given during the initialization. * * Given the split size in bytes as `splitSizeInBytes`, the raw weight is calculated as * `splitSizeInBytes \/ standardSplitSize`.  If the weight is smaller than `minimumWeight`, `minimumWeight` is used. * If the weight is larger than 1, 1 is used as the weight.  The split weight is always in the range of * [`minimumWeight`, 1]. *\/","label":0,"id":408529}
{"project":"presto-0.278","comment":"\/\/ For a given base table, this function computes partition columns of Materialized View which are not directly mapped to base table,","label":0,"id":408530}
{"project":"presto-0.278","comment":"\/\/ below test cases are needed to verify clustering key pushdown with unpartitioned table\/\/ for the smaller table (<200 partitions by default) connector fetches all the partitions id\/\/ and the partitioned patch is being followed","label":0,"id":408531}
{"project":"presto-0.278","comment":"\/**     * Cancels a task.  If the task does not already exist, is is created and then     * canceled.     *\/","label":0,"id":408532}
{"project":"presto-0.278","comment":"\/** * Returns the input to output symbol mapping for the given source channel. * A single input symbol can map to multiple output symbols, thus requiring a Multimap. *\/","label":0,"id":408533}
{"project":"presto-0.278","comment":"\/\/ We can expect eagerCompactPagesIndex retained less data than lazyCompactPagesIndex because\/\/ the pages used in the test (VARCHAR sequence pages) are compactable.","label":0,"id":408534}
{"project":"presto-0.278","comment":"\/\/ shards 2 and 3 should be deleted\/\/ shard 1 is referenced by this node","label":0,"id":408535}
{"project":"presto-0.278","comment":"\/\/ The admin role must be enabled explicitly. If it is, it was added above.","label":0,"id":408536}
{"project":"presto-0.278","comment":"\/** * This array is a lookup table that translates Unicode characters drawn from the \"Base32 |Hex Alphabet\" (as * specified in Table 3 of RFC 4648) into their 5-bit positive integer equivalents. Characters that are not in the * Base32 Hex alphabet but fall within the bounds of the array are translated to -1. *\/","label":0,"id":408537}
{"project":"presto-0.278","comment":"\/\/ todo there are better ways to do this","label":1,"id":408538}
{"project":"presto-0.278","comment":"\/\/ if task not already done, record error","label":0,"id":408539}
{"project":"presto-0.278","comment":"\/** * A buffer is finished for the given lifespan once no-more-pages has been set for that lifespan * and all pages has been acknowledged. * @see OutputBuffer#isFinished() *\/","label":0,"id":408540}
{"project":"presto-0.278","comment":"\/**     * Add the elements of the block that do not exist in the set, eliminating duplicates, and remove all previously existing elements.     *\/","label":0,"id":408541}
{"project":"presto-0.278","comment":"\/\/ create a secret file","label":0,"id":408542}
{"project":"presto-0.278","comment":"\/\/ assign splits in one shot","label":0,"id":408543}
{"project":"presto-0.278","comment":"\/\/ once the final stage info is available, verify that it is complete","label":0,"id":408544}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to create the specified table in a catalog.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":408545}
{"project":"presto-0.278","comment":"\/\/ this gets the executor into a more realistic point-in-time state, where long running tasks start to make progress","label":0,"id":408546}
{"project":"presto-0.278","comment":"\/**     * Visible to give trusted classes like {@link PageBuilder} access to a constructor that doesn't     * defensively copy the blocks     *\/","label":0,"id":408547}
{"project":"presto-0.278","comment":"\/\/ un-estimated union with non-expanding source","label":0,"id":408548}
{"project":"presto-0.278","comment":"\/\/ Create a values node that consists of a single row of nulls.","label":0,"id":408549}
{"project":"presto-0.278","comment":"\/**     * Invoked when a probe operator factory indicates that it will not     * create any more operators, for any lifespan.     * <p>     * It is expected that this method will only be invoked after     * {@link #probeOperatorFactoryClosed(Lifespan)} has been invoked     * for every known lifespan.     *\/","label":0,"id":408550}
{"project":"presto-0.278","comment":"\/** * Create a copy of this ColumnWriterOptions, but disable string and integer dictionary encodings. *\/","label":0,"id":408551}
{"project":"presto-0.278","comment":"\/\/ The index of the first client buffer that should be polled","label":0,"id":408552}
{"project":"presto-0.278","comment":"\/** * Initiate spilling of single page. Returns completed future once spilling has finished. * Next spill can be initiated as soon as previous one completes. *\/","label":0,"id":408553}
{"project":"presto-0.278","comment":"\/\/ delete first file","label":0,"id":408554}
{"project":"presto-0.278","comment":"\/\/ varchar to array","label":0,"id":408555}
{"project":"presto-0.278","comment":"\/**     * A value larger than any valid value. This value can be used to create     * a final local task that is always newer than any remote task.     *\/","label":0,"id":408556}
{"project":"presto-0.278","comment":"\/** * The stack representation for JSON objects must have the keys in natural sorted order. *\/","label":0,"id":408557}
{"project":"presto-0.278","comment":"\/\/ get partitions","label":0,"id":408558}
{"project":"presto-0.278","comment":"\/\/ Negative keys should be non-existing in long2IntOpenHashMap","label":0,"id":408559}
{"project":"presto-0.278","comment":"\/\/ empty list indicates no preference.","label":0,"id":408560}
{"project":"presto-0.278","comment":"\/\/ Check that output file (new delta file) has merged 2 rows","label":0,"id":408561}
{"project":"presto-0.278","comment":"\/\/ Check to see if the database exists","label":0,"id":408562}
{"project":"presto-0.278","comment":"\/\/ Do not output column 0 but only column 1","label":0,"id":408563}
{"project":"presto-0.278","comment":"\/\/ - The source fragment is grouped execution but not recoverable.","label":0,"id":408564}
{"project":"presto-0.278","comment":"\/\/ row group dictionary elements are after the main dictionary","label":0,"id":408565}
{"project":"presto-0.278","comment":"\/\/ if next row is within the current group return","label":0,"id":408566}
{"project":"presto-0.278","comment":"\/\/ pagesIndex contains the full grouped & sorted data for one or more partitions","label":0,"id":408567}
{"project":"presto-0.278","comment":"\/\/ long short short","label":0,"id":408568}
{"project":"presto-0.278","comment":"\/\/ complex expressions (should run on Jayway)","label":0,"id":408569}
{"project":"presto-0.278","comment":"\/\/ tracks whether this group or any children groups change as","label":0,"id":408570}
{"project":"presto-0.278","comment":"\/\/ ID should be generated from uniqueCount when a Centroid is deserialized.","label":0,"id":408571}
{"project":"presto-0.278","comment":"\/** * Get the list of partitions matching the given filters on partition keys. * * @param table the table to get partitions from * @param filterPrefix the list of possible values for each partition key. * Order of values should match {@link CassandraTable#getPartitionKeyColumns()} * @return list of {@link CassandraPartition} *\/","label":0,"id":408572}
{"project":"presto-0.278","comment":"\/\/ verify directory is empty","label":0,"id":408573}
{"project":"presto-0.278","comment":"\/\/ Process the group to refresh stats","label":0,"id":408574}
{"project":"presto-0.278","comment":"\/\/ Increment the cardinality metrics for this value of index\/\/ metrics is a mapping of row ID to column family","label":0,"id":408575}
{"project":"presto-0.278","comment":"\/\/ Mismatched cardinality sum","label":0,"id":408576}
{"project":"presto-0.278","comment":"\/\/ since this is the partition path, it's always a directory.\/\/ it's safe to add a trailing slash","label":0,"id":408577}
{"project":"presto-0.278","comment":"\/\/ get result with yield; pick a relatively small buffer for aggregator's memory usage","label":0,"id":408578}
{"project":"presto-0.278","comment":"\/**     * Return the row position within the stripes being read by this reader.     * This position will include rows that were never read due to row groups     * that are excluded due to row group statistics. Thus, it will advance     * faster than the number of rows actually read.     *\/","label":0,"id":408579}
{"project":"presto-0.278","comment":"\/** * The partitioning of split groups in a table. * A table is partitioned on columns {C1,...,Cn} if rows with the same values * on the respective columns are always in the same split group. * <p> * This class was previously name ConnectorNodePartitioning. * The new semantics is more flexible. * It enables expression of more sophisticated table organization. * Node partitioning is a form of partitioning between split groups, * where each split group contains all splits on a {@link Node}. * <p> * Unless the connector declares itself as supporting grouped scheduling in * {@link ConnectorSplitManager}, Presto engine treats all splits on a node * as a single split group. * As a result, the connector does not need to provide additional guarantee * as a result of this change for previously-declared node partitioning. * Therefore, this change in SPI is backward compatible. * <p> * For now, all splits in each split group must be assigned the same {@link Node} * by {@link ConnectorNodePartitioningProvider}. * With future changes to the engine, connectors will no longer be required * to declare a mapping from split groups to nodes. * Artificially requiring such a mapping regardless of whether the engine can * take advantage of the TablePartitioning negatively affects performance. *\/","label":0,"id":408580}
{"project":"presto-0.278","comment":"\/\/ fragmentId -> RDD","label":0,"id":408581}
{"project":"presto-0.278","comment":"\/\/ Sort the filenames","label":0,"id":408582}
{"project":"presto-0.278","comment":"\/** * Whether to export statistics about this group and allow configuration via JMX. *\/","label":0,"id":408583}
{"project":"presto-0.278","comment":"\/\/ root.maxRunningQueries = 10, root.a.maxRunningQueries = 2, root.b.maxRunningQueries = 2. Still only have 4 running queries and 32 left queued.","label":0,"id":408584}
{"project":"presto-0.278","comment":"\/\/ plan query","label":0,"id":408585}
{"project":"presto-0.278","comment":"\/\/ null byte prefixes every 8 fields","label":0,"id":408586}
{"project":"presto-0.278","comment":"\/** * RowExpression representation of Case Statement: * SpecialFormExpression: *  form: SWITCH *  arguments: *      [0]: RowExpression (or) ConstantExpression(TRUE)    \/\/ SimpleCaseExpression (or) SearchedCaseExpression *      [1..n-1 (or) n]: SpecialFormExpression(form: WHEN)  \/\/ else clause is present (or) absent *      [n]: RowExpression                                  \/\/ available if else clause is present *\/","label":0,"id":408587}
{"project":"presto-0.278","comment":"\/\/ This problem is solved by accounting slice memory & underlying byte array separately while ensuring same object is counted once","label":0,"id":408588}
{"project":"presto-0.278","comment":"\/**     * Acknowledges the previously received pages from the output buffer.     *\/","label":0,"id":408589}
{"project":"presto-0.278","comment":"\/\/ This is probably because the original rename that we are trying to undo here never succeeded.","label":0,"id":408590}
{"project":"presto-0.278","comment":"\/\/ Re-check after synchronizing","label":0,"id":408591}
{"project":"presto-0.278","comment":"\/\/ ignore error","label":0,"id":408592}
{"project":"presto-0.278","comment":"\/** * Called by {@link SpatialJoinOperator}. * <p> * {@link SpatialJoinOperator} must call {@link #probeOperatorFinished()} on completion * to signal that spatial index is no longer needed. *\/","label":0,"id":408593}
{"project":"presto-0.278","comment":"\/**     * Compares the hashed columns in this PagesHashStrategy to the hashed columns in the Page. The     * values are compared positionally, so {@code rightChannels} must have the same number of entries as     * the hashed columns and each entry is expected to be the same type.     *\/","label":0,"id":408594}
{"project":"presto-0.278","comment":"\/\/ Decimal scale such that (10 ^ UNIT_SCALE) == UNIT_VALUE","label":0,"id":408595}
{"project":"presto-0.278","comment":"\/\/ test no failure case","label":0,"id":408596}
{"project":"presto-0.278","comment":"\/\/localhost:9083,thrift:\/\/192.0.2.3:8932\").put(\"hive.metastore.username\", \"presto\").put(\"hive.metastore.load-balancing-enabled\", \"true\").build();","label":0,"id":408597}
{"project":"presto-0.278","comment":"\/**     * Calculate the Hilbert index of a discrete coordinate.     * <p>     * Since Java doesn't have unsigned ints, we put incoming ints into the     * lower 32 bits of a long and do the calculations there.     *     * @param x discrete positive x coordinate     * @param y discrete positive y coordinate     * @return Hilbert curve index     *\/","label":0,"id":408598}
{"project":"presto-0.278","comment":"\/\/ Use exact partitioning until Presto becomes smarter WRT to picking when to repartition","label":1,"id":408599}
{"project":"presto-0.278","comment":"\/\/ If the parent has a partitioning preference, propagate parent only if the parent's partitioning columns satisfies our preference.","label":0,"id":408600}
{"project":"presto-0.278","comment":"\/\/ The positions (row numbers) of the incoming Block to be copied to this buffer.\/\/ All top level AbstractBlockEncodingBuffer for the same partition share the same positions array.","label":0,"id":408601}
{"project":"presto-0.278","comment":"\/\/ Make sure that final aggregation operators are executed on a single node.","label":0,"id":408602}
{"project":"presto-0.278","comment":"\/\/ Don't fail to create event if the plan can not be created","label":0,"id":408603}
{"project":"presto-0.278","comment":"\/\/ Test without weights and accuracy","label":0,"id":408604}
{"project":"presto-0.278","comment":"\/\/ tuple domain outside the column range","label":0,"id":408605}
{"project":"presto-0.278","comment":"\/\/ The web UI depend on the following service endpoints.","label":0,"id":408606}
{"project":"presto-0.278","comment":"\/\/ add arbitrary limit assure all lengths write as a simple single vint byte","label":0,"id":408607}
{"project":"presto-0.278","comment":"\/** * Commit the spill file. Once committed, the spill file can no longer be modified * If the spill file is already committed, invoking this method has no effect *\/","label":0,"id":408608}
{"project":"presto-0.278","comment":"\/\/ So we set it to false, only when we leave the topmost outer join.","label":0,"id":408609}
{"project":"presto-0.278","comment":"\/** * The output from the upstream PlanNodes. * It should serve as the input for the current PlanNode. *\/","label":0,"id":408610}
{"project":"presto-0.278","comment":"\/\/ TODO enabled when DECIMAL is default for literal:","label":1,"id":408611}
{"project":"presto-0.278","comment":"\/\/ drop data","label":0,"id":408612}
{"project":"presto-0.278","comment":"\/\/ TODO: expose transform information in Iceberg library","label":1,"id":408613}
{"project":"presto-0.278","comment":"\/\/ a lot of memory consumption and compensate.","label":0,"id":408614}
{"project":"presto-0.278","comment":"\/\/ low order bits contain the decompressed offset, so a simple cast here will suffice","label":0,"id":408615}
{"project":"presto-0.278","comment":"\/\/ A single task can never have all 4 combinations: partitioned\/unpartitioned x grouped\/ungrouped.","label":0,"id":408616}
{"project":"presto-0.278","comment":"\/\/ TODO ... this one is failing","label":1,"id":408617}
{"project":"presto-0.278","comment":"\/\/ This tests that both Presto runner and H2 can return TIMESTAMP value that never happened in JVM's zone (e.g. is not representable using java.sql.Timestamp)","label":0,"id":408618}
{"project":"presto-0.278","comment":"\/\/ calls queryMemoryContext.getUserMemory()\/queryMemoryContext.getSystemMemory(), respectively. For concurrent","label":0,"id":408619}
{"project":"presto-0.278","comment":"\/\/ crossingLine","label":0,"id":408620}
{"project":"presto-0.278","comment":"\/\/ assert all filters removed","label":0,"id":408621}
{"project":"presto-0.278","comment":"\/\/ TODO: these two fields will not be effective if they are created by connectors until we have refactored PickTableLayout","label":1,"id":408622}
{"project":"presto-0.278","comment":"\/** * Index the given mutation, adding mutations to the index and metrics table * <p> * Like typical use of a BatchWriter, this method does not flush mutations to the underlying index table. * For higher throughput the modifications to the metrics table are tracked in memory and added to the metrics table when the indexer is flushed or closed. * * @param mutation Mutation to index *\/","label":0,"id":408623}
{"project":"presto-0.278","comment":"\/\/ write the run length","label":0,"id":408624}
{"project":"presto-0.278","comment":"\/\/ This can only be solved until we re-design the metadata layout for disagg Raptor","label":0,"id":408625}
{"project":"presto-0.278","comment":"\/\/127.0.0.2\"), NodeVersion.UNKNOWN, false);","label":0,"id":408626}
{"project":"presto-0.278","comment":"\/\/ in future runs.","label":0,"id":408627}
{"project":"presto-0.278","comment":"\/** * Verifies that the PlanNode passes basic matching tests that can done * with only the information contained in the node itself. Typically, these * should be limited to tests that validate the type of the node or * attributes of that type. * <p> * Matchers that can be applied to nodes of any type should return true from * shapeMatches and do the rest of their work in detailMatches. * * @param node The node to apply the matching tests to * @return true if all matching tests pass, false otherwise *\/","label":0,"id":408628}
{"project":"presto-0.278","comment":"\/\/ For larksuite.com users","label":0,"id":408629}
{"project":"presto-0.278","comment":"\/\/ write build columns","label":0,"id":408630}
{"project":"presto-0.278","comment":"\/\/ TODO: Use builder pattern for SplitContext if we are to add optional field","label":1,"id":408631}
{"project":"presto-0.278","comment":"\/\/ inherited @BeforeMethod but not @Test(singleThreaded)","label":0,"id":408632}
{"project":"presto-0.278","comment":"\/\/ NOTE: this MUST happen before checking no more locations is checked","label":0,"id":408633}
{"project":"presto-0.278","comment":"\/** * Midnight Jan 1st 1980. Uses the current time zone as the DOS format does not support time zones * and will always assume the current zone. *\/","label":0,"id":408634}
{"project":"presto-0.278","comment":"\/\/ newlyCompletedDriverGroups is a view.\/\/ Making changes to completedDriverGroups will change newlyCompletedDriverGroups.","label":0,"id":408635}
{"project":"presto-0.278","comment":"\/\/ as the number of milliseconds from 1970-01-01T00:00:00 in UTC but time must be midnight in","label":0,"id":408636}
{"project":"presto-0.278","comment":"\/\/localhost:8080?password=\");","label":0,"id":408637}
{"project":"presto-0.278","comment":"\/\/ step forwards through string","label":0,"id":408638}
{"project":"presto-0.278","comment":"\/\/ \/ This method may call itself recursively when retrying for failures","label":0,"id":408639}
{"project":"presto-0.278","comment":"\/\/ When a task fails, all driverGroups that prefer this task\/node would be not able to execute","label":0,"id":408640}
{"project":"presto-0.278","comment":"\/\/ 3 way join with mix of left and right outer joins. DT left outer join C1 right outer join O2.\/\/ DT is empty which produces DT right outer join O2 which produce O2 as final result.","label":0,"id":408641}
{"project":"presto-0.278","comment":"\/\/ shipdate <= '1998-09-02'","label":0,"id":408642}
{"project":"presto-0.278","comment":"\/\/ valid view with uppercase column name","label":0,"id":408643}
{"project":"presto-0.278","comment":"\/** * CONCURRENT execution requires a {@link ConcurrentExecutionPhase}. * * Each {@link ConcurrentExecutionPhase} defines a list of queries. * Multiples queries can be executed at the same time and the order * of execution is arbitrary. Max concurrency can be defined either * within {@link ConcurrentExecutionPhase} or via configuration property. *\/","label":0,"id":408644}
{"project":"presto-0.278","comment":"\/\/ Allocate a reasonable buffer","label":0,"id":408645}
{"project":"presto-0.278","comment":"\/\/ This class is exactly the same as BlockEncodingManager.","label":0,"id":408646}
{"project":"presto-0.278","comment":"\/**\");            return new RecursiveDeleteResult(false, notDeletedItems.build());        }        return doRecursiveDeleteFiles(fileSystem, directory, queryIds, deleteEmptyDirectories);    }    private static RecursiveDeleteResult doRecursiveDeleteFiles(FileSystem fileSystem, Path directory, Set<String> queryIds, boolean deleteEmptyDirectories) {        \/\/ don't delete hidden presto directories        if (directory.getName().startsWith(\".presto\")) {            return new RecursiveDeleteResult(false, ImmutableList.of());        }        FileStatus[] allFiles;        try {            allFiles = fileSystem.listStatus(directory);        } catch (IOException e) {            ImmutableList.Builder<String> notDeletedItems = ImmutableList.builder();            notDeletedItems.add(directory.toString() + \"\/**\");            return new RecursiveDeleteResult(false, notDeletedItems.build());        }        boolean allDescendentsDeleted = true;        ImmutableList.Builder<String> notDeletedEligibleItems = ImmutableList.builder();        for (FileStatus fileStatus : allFiles) {            if (fileStatus.isFile()) {                Path filePath = fileStatus.getPath();                String fileName = filePath.getName();                boolean eligible = false;                \/\/ never delete presto dot files                if (!fileName.startsWith(\".presto\")) {                    \/\/ file name that starts with \".tmp.presto\" is staging file, see HiveWriterFactory#createWriter.                    eligible = queryIds.stream().anyMatch(id -> fileName.startsWith(id) || fileName.startsWith(\".tmp.presto.\" + id) || fileName.endsWith(id));                }                if (eligible) {                    if (!deleteIfExists(fileSystem, filePath, false)) {                        allDescendentsDeleted = false;                        notDeletedEligibleItems.add(filePath.toString());                    }                } else {                    allDescendentsDeleted = false;                }            } else if (fileStatus.isDirectory()) {                RecursiveDeleteResult subResult = doRecursiveDeleteFiles(fileSystem, fileStatus.getPath(), queryIds, deleteEmptyDirectories);                if (!subResult.isDirectoryNoLongerExists()) {                    allDescendentsDeleted = false;                }                if (!subResult.getNotDeletedEligibleItems().isEmpty()) {                    notDeletedEligibleItems.addAll(subResult.getNotDeletedEligibleItems());                }            } else {                allDescendentsDeleted = false;                notDeletedEligibleItems.add(fileStatus.getPath().toString());            }        }        if (allDescendentsDeleted && deleteEmptyDirectories) {            verify(notDeletedEligibleItems.build().isEmpty());            if (!deleteIfExists(fileSystem, directory, false)) {                return new RecursiveDeleteResult(false, ImmutableList.of(directory.toString() + \"\/\"));            }            return new RecursiveDeleteResult(true, ImmutableList.of());        }        return new RecursiveDeleteResult(false, notDeletedEligibleItems.build());    }    \/**     * Attempts to remove the file or empty directory.     *     * @return true if the location no longer exists     *\/","label":0,"id":408647}
{"project":"presto-0.278","comment":"\/\/ check if it can be merged with the previous or following range","label":0,"id":408648}
{"project":"presto-0.278","comment":"\/\/ write down some data with unsorted streams","label":0,"id":408649}
{"project":"presto-0.278","comment":"\/**     * Gets a little endian long value at {@code internalPosition - getOffsetBase()}.     *\/","label":0,"id":408650}
{"project":"presto-0.278","comment":"\/\/ key is hiveColumnIndex","label":0,"id":408651}
{"project":"presto-0.278","comment":"\/\/ write chunks","label":0,"id":408652}
{"project":"presto-0.278","comment":"\/\/ rename table to same schema","label":0,"id":408653}
{"project":"presto-0.278","comment":"\/\/ For rewindable split source, we keep all the splits in memory.","label":0,"id":408654}
{"project":"presto-0.278","comment":"\/\/ read selected positions from all nulls map column","label":0,"id":408655}
{"project":"presto-0.278","comment":"\/\/ Empty delimiter? Then every character will be a split","label":0,"id":408656}
{"project":"presto-0.278","comment":"\/\/ add 2 new rows for the third page (which will be compacted into two rows only) and we have four heaps with 2, 2, 2, 1 rows respectively","label":0,"id":408657}
{"project":"presto-0.278","comment":"\/\/ Special handling for source, which is an optional field that is part of the standard variables","label":0,"id":408658}
{"project":"presto-0.278","comment":"\/\/ Throwing here to make sure this method is updated when a new type is added in Hive connector","label":0,"id":408659}
{"project":"presto-0.278","comment":"\/\/ Note: exchanger can be stateful so create a new one for each sink","label":0,"id":408660}
{"project":"presto-0.278","comment":"\/\/ Capture columns in subquery in GROUP BY expression","label":0,"id":408661}
{"project":"presto-0.278","comment":"\/**     * Closes and removes all underlying resources used during spilling.     *\/","label":0,"id":408662}
{"project":"presto-0.278","comment":"\/\/ next polygon has started","label":0,"id":408663}
{"project":"presto-0.278","comment":"\/\/ already properly handled exception - throw without any additional info","label":0,"id":408664}
{"project":"presto-0.278","comment":"\/\/ cast expression if coercion is registered","label":0,"id":408665}
{"project":"presto-0.278","comment":"\/**     * Create an ORC file in a way that the stripe cache would only have data for     * half of the stripes.     *\/","label":0,"id":408666}
{"project":"presto-0.278","comment":"\/\/ * truncate strings","label":0,"id":408667}
{"project":"presto-0.278","comment":"\/\/ Therefore, the partition is not added to the createdPartitionValues list here.","label":0,"id":408668}
{"project":"presto-0.278","comment":"\/\/ The coordinator will kill the query if the cluster runs out of memory.","label":0,"id":408669}
{"project":"presto-0.278","comment":"\/*             * JDBC returns a date using a timestamp at midnight in the JVM timezone, or earliest time after that if there was no midnight.             * This works correctly for all dates and zones except when the missing local times 'gap' is 24h. I.e. this fails when JVM time             * zone is Pacific\/Apia and date to be returned is 2011-12-30.             *             * `return resultSet.getObject(columnIndex, LocalDate.class).toEpochDay()` avoids these problems but             * is currently known not to work with Redshift (old Postgres connector) and SQL Server.             *\/","label":1,"id":408670}
{"project":"presto-0.278","comment":"\/\/ schedule one at a time.","label":0,"id":408671}
{"project":"presto-0.278","comment":"\/\/ grouping on multiple keys with the number of estimated groups greater than the row count","label":0,"id":408672}
{"project":"presto-0.278","comment":"\/** * connector id *\/","label":0,"id":408673}
{"project":"presto-0.278","comment":"\/\/ \/\/        @Param({\"LINEAR\", \"SUM_OF_COUNT\", \"SUM_OF_SQUARE\"})","label":0,"id":408674}
{"project":"presto-0.278","comment":"\/**     * Compare two doubles. If either is NaN comparison is 1.     *\/","label":0,"id":408675}
{"project":"presto-0.278","comment":"\/**     * Connectors can use error codes starting at the range 0x0100_0000     * See https:\/\/github.com\/prestodb\/presto\/wiki\/Error-Codes     *     * @see com.facebook.presto.spi.StandardErrorCode     *\/","label":0,"id":408676}
{"project":"presto-0.278","comment":"\/\/ output page will only be constructed once,\/\/ so a new PageBuilder is constructed (instead of using PageBuilder.reset)","label":0,"id":408677}
{"project":"presto-0.278","comment":"\/\/ for \"errorType\" key","label":0,"id":408678}
{"project":"presto-0.278","comment":"\/\/ 6:  1232195252 -> entry5 -> node1","label":0,"id":408679}
{"project":"presto-0.278","comment":"\/\/ delegation from other operator (exercises block-position convention implementation)","label":0,"id":408680}
{"project":"presto-0.278","comment":"\/\/ (b || a || c) && (a || b || d) && (a || b || f) -> b || a || (c && d && e && f)","label":0,"id":408681}
{"project":"presto-0.278","comment":"\/\/ This is acceptable because AddLocalExchanges does not use global properties and is only","label":0,"id":408682}
{"project":"presto-0.278","comment":"\/\/ All top level AbstractBlockEncodingBuffer for the same partition share the same positions array.","label":0,"id":408683}
{"project":"presto-0.278","comment":"\/\/ If reserved pool is not enabled, we don't create a MemoryPoolAssignmentsRequest that puts all the queries","label":0,"id":408684}
{"project":"presto-0.278","comment":"\/\/ Ensure timestamp casts are correct.","label":0,"id":408685}
{"project":"presto-0.278","comment":"\/\/ remove acknowledged splits, which frees memory","label":0,"id":408686}
{"project":"presto-0.278","comment":"\/\/ cartesian product of types for aggregation functions takes multiple parameters.","label":0,"id":408687}
{"project":"presto-0.278","comment":"\/\/ if operand is null, return defaultValue","label":0,"id":408688}
{"project":"presto-0.278","comment":"\/\/ TODO: change connector SPI to make this resumable and have memory tracking","label":1,"id":408689}
{"project":"presto-0.278","comment":"\/**     * Return a table layout handle whose partitioning is converted to the provided partitioning handle,     * but otherwise identical to the provided table layout handle.     * The provided table layout handle must be one that the connector can transparently convert to from     * the original partitioning handle associated with the provided table layout handle,     * as promised by {@link #getCommonPartitioningHandle}.     *\/","label":0,"id":408690}
{"project":"presto-0.278","comment":"\/**     * Produce a row for the current probe position, if it doesn't match any row on lookup side and this is an outer join.     *     * @return whether pageBuilder became full     *\/","label":0,"id":408691}
{"project":"presto-0.278","comment":"\/** * Translates the properties as much as possible, and truncates at the first non-translatable property *\/","label":0,"id":408692}
{"project":"presto-0.278","comment":"\/\/ Test correlated IN subquery","label":0,"id":408693}
{"project":"presto-0.278","comment":"\/\/ of the smaller set. When this happens the cardinality of the smaller set is obviously","label":0,"id":408694}
{"project":"presto-0.278","comment":"\/\/ buffer future will complete.. the event is async so wait a bit for event to propagate","label":0,"id":408695}
{"project":"presto-0.278","comment":"\/\/ Ensure that correct spherical geography filter predicate is used for","label":0,"id":408696}
{"project":"presto-0.278","comment":"\/\/ So size this judiciously","label":0,"id":408697}
{"project":"presto-0.278","comment":"\/\/ ORC used Base 128 varint from Protobuf. https:\/\/developers.google.com\/protocol-buffers\/docs\/encoding","label":0,"id":408698}
{"project":"presto-0.278","comment":"\/**     * @return a future that signals the caller to block before reserving more memory.     *\/","label":0,"id":408699}
{"project":"presto-0.278","comment":"\/\/ truncate values to int range","label":0,"id":408700}
{"project":"presto-0.278","comment":"\/**     * Stage is running.     *\/","label":0,"id":408701}
{"project":"presto-0.278","comment":"\/\/ Both starting expressions should canonicalize to the same expression","label":0,"id":408702}
{"project":"presto-0.278","comment":"\/\/ TypeManager caches types. Therefore, it is important that we go through it instead of coming up with the MethodHandles directly.\/\/ BIGINT is chosen arbitrarily here. Any type will do.","label":0,"id":408703}
{"project":"presto-0.278","comment":"\/\/ alter the partition into one with other stats","label":0,"id":408704}
{"project":"presto-0.278","comment":"\/\/ offset and length are meaningful only when the row is backed by the \"array\"","label":0,"id":408705}
{"project":"presto-0.278","comment":"\/\/ pages are acknowledged","label":0,"id":408706}
{"project":"presto-0.278","comment":"\/\/ this is less than ideal, but existing filesystems sometimes neglect","label":0,"id":408707}
{"project":"presto-0.278","comment":"\/\/ Read the first non-empty element. Do not call streamReader.getBlock() to preserve the offsets array in SliceDirectSelectiveStreamReader.","label":0,"id":408708}
{"project":"presto-0.278","comment":"\/\/ test cases","label":0,"id":408709}
{"project":"presto-0.278","comment":"\/\/ extension of parquet's ColumnDescriptor. Exposes full Primitive type information","label":0,"id":408710}
{"project":"presto-0.278","comment":"\/\/ second stream result 2","label":0,"id":408711}
{"project":"presto-0.278","comment":"\/\/ we can't push this through","label":0,"id":408712}
{"project":"presto-0.278","comment":"\/\/ incrementing a counter for each matching column","label":0,"id":408713}
{"project":"presto-0.278","comment":"\/\/ Completion order should be identical to the first iteration at this point","label":0,"id":408714}
{"project":"presto-0.278","comment":"\/** * Helper class for binding Statement to  DataDefinitionTask *\/","label":0,"id":408715}
{"project":"presto-0.278","comment":"\/\/ since this is a fifo executor with one thread and completeLatch is decremented inside the future,\/\/ the last future may not be done yet, but all the rest must be","label":0,"id":408716}
{"project":"presto-0.278","comment":"\/\/ assert that splits starting from endIndex haven't started yet","label":0,"id":408717}
{"project":"presto-0.278","comment":"\/** * NOTE: This method does not return column comment *\/","label":0,"id":408718}
{"project":"presto-0.278","comment":"\/\/\/\/ Invoke Special\/\/","label":0,"id":408719}
{"project":"presto-0.278","comment":"\/\/ verify delta delete enabled property","label":0,"id":408720}
{"project":"presto-0.278","comment":"\/\/ Drop the partitioned test table","label":0,"id":408721}
{"project":"presto-0.278","comment":"\/\/ min in group by","label":0,"id":408722}
{"project":"presto-0.278","comment":"\/\/ print annotations first","label":0,"id":408723}
{"project":"presto-0.278","comment":"\/\/ pass-through transformation state if it doesn't require new data","label":0,"id":408724}
{"project":"presto-0.278","comment":"\/\/ one required property","label":0,"id":408725}
{"project":"presto-0.278","comment":"\/\/ there might be a chance the file has been deleted. We would return cache miss in this case.","label":0,"id":408726}
{"project":"presto-0.278","comment":"\/\/ TableScan has key property (A,B). Project only has mapping A->A' and hence result key property should be empty.","label":0,"id":408727}
{"project":"presto-0.278","comment":"\/** * Encode the given Date value into the given Text object. * * @param text Text object to set * @param value Value to encode *\/","label":0,"id":408728}
{"project":"presto-0.278","comment":"\/** * TGS must have the server principal of the form \"krbtgt\/FOO@FOO\". * * @return true or false *\/","label":0,"id":408729}
{"project":"presto-0.278","comment":"\/\/ record driver so other threads add remote sources can see the driver\/\/ NOTE: this MUST be done before reading remoteSources, so we see a consistent view of the remote sources","label":0,"id":408730}
{"project":"presto-0.278","comment":"\/\/ '' (two apostrophes) in a pattern denote single apostrophe and here we interpret this as \"start quote\" + \"end quote\".","label":0,"id":408731}
{"project":"presto-0.278","comment":"\/\/ add set catalog and schema","label":0,"id":408732}
{"project":"presto-0.278","comment":"\/\/ Used by BigintGroupByHash, see BigintGroupByHash.TYPES_WITH_RAW_HASH","label":0,"id":408733}
{"project":"presto-0.278","comment":"\/\/ acknowledge page 2","label":0,"id":408734}
{"project":"presto-0.278","comment":"\/\/ complete the task by calling abort on it","label":0,"id":408735}
{"project":"presto-0.278","comment":"\/\/ In this example, Lifespan 30 cannot start executing drivers in pipeline C because pipeline B","label":0,"id":408736}
{"project":"presto-0.278","comment":"\/\/ listen to all memory allocations and update the peak memory reservations accordingly","label":0,"id":408737}
{"project":"presto-0.278","comment":"\/\/ ExchangeClientStatus.mergeWith assumes all clients have the same bufferCapacity.","label":0,"id":408738}
{"project":"presto-0.278","comment":"\/\/ update sources","label":0,"id":408739}
{"project":"presto-0.278","comment":"\/\/ MAJOR HACK: if searchFunction is of shape `f(probe) > build_symbol` it is not fit for binary search below,","label":1,"id":408740}
{"project":"presto-0.278","comment":"\/\/ Using JSON_FORMAT(CAST(_ AS JSON)) because H2 does not support ROW type","label":0,"id":408741}
{"project":"presto-0.278","comment":"\/\/ This means we can null our reference to the groupId's corresponding blockBuilder to reduce memory usage","label":0,"id":408742}
{"project":"presto-0.278","comment":"\/\/ TODO: remove once minimum Java version is increased to 8u161 and 9.0.4, see PrestoSystemRequirement.","label":1,"id":408743}
{"project":"presto-0.278","comment":"\/\/ allow non-exist fields in json object","label":0,"id":408744}
{"project":"presto-0.278","comment":"\/\/ filter out partition keys, which are not written to the file","label":0,"id":408745}
{"project":"presto-0.278","comment":"\/\/ thread visualizer","label":0,"id":408746}
{"project":"presto-0.278","comment":"\/\/ statistics, visible from within transaction","label":0,"id":408747}
{"project":"presto-0.278","comment":"\/\/ normalize divisor. Most significant divisor word must be > BASE\/2\/\/ effectively it can be achieved by shifting divisor left until the leftmost bit is 1","label":0,"id":408748}
{"project":"presto-0.278","comment":"\/\/ Empty right child with projections and full outer join","label":0,"id":408749}
{"project":"presto-0.278","comment":"\/\/ delete local file","label":0,"id":408750}
{"project":"presto-0.278","comment":"\/\/ The row group indexes may be split between byte, short and int segments. They need to be processed in\/\/ byte, short and int order. If they are processed in different order, it will result in data corruption.","label":0,"id":408751}
{"project":"presto-0.278","comment":"\/** * Calculates consistent stats for a symbol. *\/","label":0,"id":408752}
{"project":"presto-0.278","comment":"\/\/ Presto ORC reader and Writer are used as library in some other","label":0,"id":408753}
{"project":"presto-0.278","comment":"\/**     * Compares the hashed columns in this PagesHashStrategy to the hashed columns in the Page.     * The values are compared positionally under \"not distinct from\" semantics.     * {@code rightChannels} must have the same number of entries as the hashed columns     * and each entry is expected to be the same type.     *\/","label":0,"id":408754}
{"project":"presto-0.278","comment":"\/\/ read the repeated value","label":0,"id":408755}
{"project":"presto-0.278","comment":"\/** * It writes a list type and its array elements to the Parquet RecordConsumer. * This is called when the original type (LIST) is detected by writeValue()\/ * This function assumes the following schema: * optional group arrayCol (LIST) { * repeated group array { * optional TYPE array_element; * } * } * * @param value The object that contains the array values. * @param inspector The object inspector used to get the correct value type. * @param type Type that contains information about the group (LIST) schema. *\/","label":0,"id":408756}
{"project":"presto-0.278","comment":"\/\/ To be used for metadata inconsistencies and not for incorrect input from users","label":0,"id":408757}
{"project":"presto-0.278","comment":"\/\/ Note: MapColumnStatisticsBuilder doesn't check the uniqueness of the keys","label":0,"id":408758}
{"project":"presto-0.278","comment":"\/**     * Chunksize for encoding. Not used when decoding.     * A value of zero or less implies no chunking of the encoded data.     * Rounded down to nearest multiple of encodedBlockSize.     *\/","label":0,"id":408759}
{"project":"presto-0.278","comment":"\/\/ - TPC-H data model does not have nulls and this gap is covered by PrestoBench.","label":0,"id":408760}
{"project":"presto-0.278","comment":"\/\/ record driver so other threads add remote sources can see the driver","label":0,"id":408761}
{"project":"presto-0.278","comment":"\/\/ we're willing to keep queries beyond timeHorizon as long as we have fewer than maxQueryHistory","label":0,"id":408762}
{"project":"presto-0.278","comment":"\/**     * Sets the external file attributes of the entry.     *\/","label":0,"id":408763}
{"project":"presto-0.278","comment":"\/\/ Remove warnings from previous screen","label":0,"id":408764}
{"project":"presto-0.278","comment":"\/\/ literal referenced multiple times","label":0,"id":408765}
{"project":"presto-0.278","comment":"\/** * The ORC file has a field that is missing from the reader *\/","label":0,"id":408766}
{"project":"presto-0.278","comment":"\/\/ using different subqueries","label":0,"id":408767}
{"project":"presto-0.278","comment":"\/\/ iterator should fail if underlying work is blocked","label":0,"id":408768}
{"project":"presto-0.278","comment":"\/**     * @param identifier   an unique identifier used to obtain the nodes     * @param count        how many desirable nodes to be returned     * @return a list of the chosen nodes by specific hash function     *\/","label":0,"id":408769}
{"project":"presto-0.278","comment":"\/\/ counter clockwise, counter clockwise, clockwise","label":0,"id":408770}
{"project":"presto-0.278","comment":"\/\/ 1970-01-01 00:00:01.000","label":0,"id":408771}
{"project":"presto-0.278","comment":"\/** * Loads a dictionary from a stream and attempts to reuse the dictionary buffer passed in. * * @param streamDescriptor descriptor indicating node and sequence of the stream reader * the dictionary is associated with. * @param dictionary dictionary buffer the method attempts to fill. * @param items number of items expected in the dictionary. * @return The DictionaryResult contains two parts: * 1) the final dictionary buffer object. Different from the input dictionary buffer if the input *    dictionary buffer is expanded or that the method returns a shared dictionary. * 2) whether the caller will be the owner of the dictionary, for the purpose of memory accounting. *    Callers own all non-shared dictionaries, and only the first caller of the shared dictionary *    is the owner. * @throws IOException *\/","label":0,"id":408772}
{"project":"presto-0.278","comment":"\/** * Comprehensive correctness testing is done in the TestQuantileDigestAggregationFunction and TestTDigestAggregationFunction *\/","label":0,"id":408773}
{"project":"presto-0.278","comment":"\/\/ (SWITCH <expr> (WHEN <expr> <expr>) (WHEN <expr> <expr>) <expr>)","label":0,"id":408774}
{"project":"presto-0.278","comment":"\/\/ Notify listeners outside of the critical section","label":0,"id":408775}
{"project":"presto-0.278","comment":"\/\/ magic hash","label":0,"id":408776}
{"project":"presto-0.278","comment":"\/\/ Check if refresh condition can be mapped to a particular base table partition column. This can always be done unless base table","label":0,"id":408777}
{"project":"presto-0.278","comment":"\/**     * Fetches the TabletSplitMetadata for a query against an Accumulo table.     * <p>     * Does a whole bunch of fun stuff! Splitting on row ID ranges, applying secondary indexes, column pruning,     * all sorts of sweet optimizations. What you have here is an important method.     *     * @param session Current session     * @param schema Schema name     * @param table Table Name     * @param rowIdDomain Domain for the row ID     * @param constraints Column constraints for the query     * @param serializer Instance of a row serializer     * @return List of TabletSplitMetadata objects for Presto     *\/","label":0,"id":408778}
{"project":"presto-0.278","comment":"\/\/ sequence IDs have been removed.  This is to simulate the case where a file has been modified to delete","label":0,"id":408779}
{"project":"presto-0.278","comment":"\/\/ non-deterministic filter function with no inputs (rand() < 0.1); evaluated before any column is read","label":0,"id":408780}
{"project":"presto-0.278","comment":"\/\/\/\/ TIMESTAMP is stored as milliseconds from 1970-01-01T00:00:00 UTC.  When performing calculations\/\/ on a timestamp the client's time zone must be taken into account.\/\/ TIMESTAMP_MICROSECONDS is stored as microseconds from 1970-01-01T00:00:00 UTC.  When performing calculations\/\/ on a timestamp the client's time zone must be taken into account.\/\/","label":0,"id":408781}
{"project":"presto-0.278","comment":"\/\/ convert to UTC","label":0,"id":408782}
{"project":"presto-0.278","comment":"\/\/ Always map a trivial variable projection","label":0,"id":408783}
{"project":"presto-0.278","comment":"\/\/ add a gathering exchange above partitioned inputs and fold it into the set of unpartitioned inputs","label":0,"id":408784}
{"project":"presto-0.278","comment":"\/\/ If no value has been written, then valueWriters list will be empty, and we\/\/ won't be able to get required column statistics for all sub nodes.\/\/ This field contains cached stripe column statistics for the value node(s)\/\/ for this edge case.","label":0,"id":408785}
{"project":"presto-0.278","comment":"\/\/ update the parent before updating usedBytes as it may throw a runtime exception (e.g., ExceededMemoryLimitException)","label":0,"id":408786}
{"project":"presto-0.278","comment":"\/\/ tinyint_append","label":0,"id":408787}
{"project":"presto-0.278","comment":"\/\/ Create 2 dictionary blocks with the same source id","label":0,"id":408788}
{"project":"presto-0.278","comment":"\/\/ * The test runs at least 1000 iterations.","label":0,"id":408789}
{"project":"presto-0.278","comment":"\/**     * @return value that should be used in future references to created position links     *\/","label":0,"id":408790}
{"project":"presto-0.278","comment":"\/\/ skip the rows count","label":0,"id":408791}
{"project":"presto-0.278","comment":"\/\/ But we should include username because we want the cache to be effective at per-user level when impersonation is enabled.","label":0,"id":408792}
{"project":"presto-0.278","comment":"\/\/ create a new scheduler object to pick up the change.","label":0,"id":408793}
{"project":"presto-0.278","comment":"\/**     * Gets the default value for this property.     *\/","label":0,"id":408794}
{"project":"presto-0.278","comment":"\/** * FilterNode only expects a single upstream PlanNode. *\/","label":0,"id":408795}
{"project":"presto-0.278","comment":"\/\/ The translated SQL is executed by Presto.  These tests do not make use of edge-case values or null","label":0,"id":408796}
{"project":"presto-0.278","comment":"\/\/ allow for special response on Prometheus metrics endpoint","label":0,"id":408797}
{"project":"presto-0.278","comment":"\/\/ outputBlockVariable cannot present because","label":0,"id":408798}
{"project":"presto-0.278","comment":"\/\/ Validation was done in HiveSplitManager#getPartitionMetadata.","label":0,"id":408799}
{"project":"presto-0.278","comment":"\/\/ mean[], containing mean of each centroid","label":0,"id":408800}
{"project":"presto-0.278","comment":"\/\/ Window and Aggregation functions have fixed semantic where NULL values are always skipped","label":0,"id":408801}
{"project":"presto-0.278","comment":"\/\/ project results into output blocks","label":0,"id":408802}
{"project":"presto-0.278","comment":"\/** * Describes an internal (managed by the connector) field which is added to each table row. The definition itself makes the row * show up in the tables (the columns are hidden by default, so they must be explicitly selected) but unless the field is hooked in using the * forBooleanValue\/forLongValue\/forBytesValue methods and the resulting FieldValueProvider is then passed into the appropriate row decoder, the fields * will be null. Most values are assigned in the {@link RedisRecordSet}. *\/","label":0,"id":408803}
{"project":"presto-0.278","comment":"\/*     * Creates a column index store which lazily reads column\/offset indexes for the columns in paths. (paths are the set     * of columns used for the projection)     *\/","label":0,"id":408804}
{"project":"presto-0.278","comment":"\/**     * Find a minimal set of BingTiles (at zoom), covering the geometry.     *\/","label":0,"id":408805}
{"project":"presto-0.278","comment":"\/**         * Signals that process is blocked. {@link #process()} will be called again after {@code blocked} future is done.         *\/","label":0,"id":408806}
{"project":"presto-0.278","comment":"\/\/ explain analyze","label":0,"id":408807}
{"project":"presto-0.278","comment":"\/\/ create new hash variables","label":0,"id":408808}
{"project":"presto-0.278","comment":"\/**     * Updates the metrics according to their values in {@code stats}.     * Metrics not included in {@code stats} will not be changed.     *\/","label":0,"id":408809}
{"project":"presto-0.278","comment":"\/\/ Negative offset","label":0,"id":408810}
{"project":"presto-0.278","comment":"\/\/ 2) it's a multi-term single clause (ex. for CNF: (A OR B), DNF: (A AND B))","label":0,"id":408811}
{"project":"presto-0.278","comment":"\/\/ for columns other than the partition column (because almost certainly there are duplicates)","label":0,"id":408812}
{"project":"presto-0.278","comment":"\/\/ Extra allocation is minimal during build call. As a result, memory accounting is not updated here.","label":0,"id":408813}
{"project":"presto-0.278","comment":"\/\/ Group the aggregations on the same column and have the same function handle","label":0,"id":408814}
{"project":"presto-0.278","comment":"\/\/ division by zero tests","label":0,"id":408815}
{"project":"presto-0.278","comment":"\/\/ values node provides stats","label":0,"id":408816}
{"project":"presto-0.278","comment":"\/\/ If the expression involves array or map subscripts, it is considered only if allowed by nested_columns_filter_enabled.","label":0,"id":408817}
{"project":"presto-0.278","comment":"\/\/ Query time workflow chart. Left side shows query workflow. Right side shows\/\/ associated time durations with a query.\/\/\/\/ Create                                                                                      -----------\/\/ |                                                                                         | waitingForPrerequisitesTime\/\/ |                       Semantic Analyzing      -----------                               |\/\/ |                               |               | semanticAnalyzingTime                   |\/\/ V                               V               V                                         V\/\/ Queued                       ACL Checking         -----------                               -----------\/\/ |                               |               | columnAccessPermissionCheckingTime      | queuedTime\/\/ V                               |               |                                         V\/\/ Wait for Resources                  |               V                                         -----------\/\/ |<------------------------------+               -----------                               | waitingForResourcesTime\/\/ V                                                                                         V\/\/ Dispatching                                                                                   -----------\/\/ |                                                                                         | dispatchingTime\/\/ V                                                                                         V\/\/ Planning                                                                                     ----------------------------------\/\/ |                                                                                         | executionTime     | planningTime\/\/ |      Analysis Start                                                                     |                   |        -----------\/\/ |         |                                                                               |                   |        | analysisTime\/\/ |         V                                                                               |                   |        V\/\/ |      Analysis End                                                                       |                   |        -----------\/\/ V                                                                                         |                   V\/\/ Starting                                                                                     |                   -----------\/\/ |                                                                                         |\/\/ V                                                                                         |\/\/ Running                                                                                      |\/\/ |                                                                                         |\/\/ V                                                                                         |\/\/ Finishing                                                                                     |                   -----------\/\/ |                                                                                         |                   | finishingTime\/\/ V                                                                                         V                   V\/\/ End                                                                                        ----------------------------------","label":0,"id":408818}
{"project":"presto-0.278","comment":"\/\/ Layouts will be returned in order of the connector's preference","label":0,"id":408819}
{"project":"presto-0.278","comment":"\/\/ first remove any split that was already acknowledged","label":0,"id":408820}
{"project":"presto-0.278","comment":"\/\/ create a table scan operator that does not block, which will cause the driver loop to busy wait","label":0,"id":408821}
{"project":"presto-0.278","comment":"\/\/ Join","label":0,"id":408822}
{"project":"presto-0.278","comment":"\/\/ behaviors are unstable so disabling for now.","label":0,"id":408823}
{"project":"presto-0.278","comment":"\/\/ another concurrent worker already set the final state","label":0,"id":408824}
{"project":"presto-0.278","comment":"\/\/ different frame","label":0,"id":408825}
{"project":"presto-0.278","comment":"\/\/ Use equi-clause to trigger hash partitioning of the join sources","label":0,"id":408826}
{"project":"presto-0.278","comment":"\/\/ empty join so build finishes","label":0,"id":408827}
{"project":"presto-0.278","comment":"\/\/ returning null when nothing matched","label":0,"id":408828}
{"project":"presto-0.278","comment":"\/\/ print class body","label":0,"id":408829}
{"project":"presto-0.278","comment":"\/\/ Starting                                                                                     |                   -----------","label":0,"id":408830}
{"project":"presto-0.278","comment":"\/\/ copies values for all the columns into a page builder","label":0,"id":408831}
{"project":"presto-0.278","comment":"\/\/ day1","label":0,"id":408832}
{"project":"presto-0.278","comment":"\/\/ entry4 ( 1127574531): node3","label":0,"id":408833}
{"project":"presto-0.278","comment":"\/\/ unestimated term to trigger size based join ordering","label":0,"id":408834}
{"project":"presto-0.278","comment":"\/\/ use suffix block to build the hash table","label":0,"id":408835}
{"project":"presto-0.278","comment":"\/\/ expect lifespan committer not to be called","label":0,"id":408836}
{"project":"presto-0.278","comment":"\/\/ Do not replace the handle if the source's output handle is a system one, e.g. broadcast.","label":0,"id":408837}
{"project":"presto-0.278","comment":"\/\/ If we find common partitioning columns, use them, else use child's partitioning columns","label":0,"id":408838}
{"project":"presto-0.278","comment":"\/\/ When union, keep predicateStitchedQuery before materializedViewQuerySpecification. Given Scope of Union contains RelationType of the first Relation,","label":0,"id":408839}
{"project":"presto-0.278","comment":"\/\/ g","label":0,"id":408840}
{"project":"presto-0.278","comment":"\/\/ verify no organization","label":0,"id":408841}
{"project":"presto-0.278","comment":"\/\/ Map every expression to the set of equivalent expressions","label":0,"id":408842}
{"project":"presto-0.278","comment":"\/\/ Set of all fields referenced by the query","label":0,"id":408843}
{"project":"presto-0.278","comment":"\/\/ predicate lower bound NOT set","label":0,"id":408844}
{"project":"presto-0.278","comment":"\/\/ This should be considered to have a method as below (it doesn't to avoid autoboxing)","label":1,"id":408845}
{"project":"presto-0.278","comment":"\/\/ verify initial state","label":0,"id":408846}
{"project":"presto-0.278","comment":"\/\/ the requirements here will be used to verify that table actually exists and to","label":0,"id":408847}
{"project":"presto-0.278","comment":"\/\/ delta","label":0,"id":408848}
{"project":"presto-0.278","comment":"\/\/ very inefficient implementation as it needs to re-generate all previous results to get the next page","label":0,"id":408849}
{"project":"presto-0.278","comment":"\/\/ When the probe side of join is bucketed but builder side is not,\/\/ bucket to partition mapping has to be populated to builder side remote fragment.\/\/ NodePartitionMap is required in this case and cannot be simply replaced by BucketNodeMap.\/\/\/\/ Join\/\/ \/  \\\/\/ Scan  Remote\/\/\/\/ TODO: Investigate if we can use FixedBucketNodeMap and a node to taskId map to replace NodePartitionMap\/\/ in the above case, as the co-existence of BucketNodeMap and NodePartitionMap is confusing.","label":1,"id":408850}
{"project":"presto-0.278","comment":"\/\/ PBKDF2 password with iteration count of 100","label":0,"id":408851}
{"project":"presto-0.278","comment":"\/\/ Handle the binary comparison logic of <DATE\/TIMESTAMP field> <binary op> <DATE\/TIMESTAMP literal>.","label":0,"id":408852}
{"project":"presto-0.278","comment":"\/\/ There are three channels in the output page of DeleteOperator\/\/ 1. Row count (BIGINT)\/\/ 2. Delete fragments (VARBINARY)\/\/ 3. Table commit context (VARBINARY)\/\/\/\/ Page layout:\/\/\/\/ row     fragments     context\/\/ X         null          X\/\/ null        X            X\/\/ null        X            X\/\/ null        X            X\/\/ ...","label":0,"id":408853}
{"project":"presto-0.278","comment":"\/** * Replaces 0% sample node with empty values node. *\/","label":0,"id":408854}
{"project":"presto-0.278","comment":"\/\/ data","label":0,"id":408855}
{"project":"presto-0.278","comment":"\/\/ add coercions","label":0,"id":408856}
{"project":"presto-0.278","comment":"\/\/ struct types","label":0,"id":408857}
{"project":"presto-0.278","comment":"\/\/ 1. bind cannot be in the top level of an expression","label":0,"id":408858}
{"project":"presto-0.278","comment":"\/* min(rowCount, ndv in intersection *\/","label":0,"id":408859}
{"project":"presto-0.278","comment":"\/\/ should produce NegatedBytesRange","label":0,"id":408860}
{"project":"presto-0.278","comment":"\/**     * Start a SELECT\/UPDATE\/INSERT\/DELETE query     *\/","label":0,"id":408861}
{"project":"presto-0.278","comment":"\/\/ Window function","label":0,"id":408862}
{"project":"presto-0.278","comment":"\/\/ QueryId changes for every query. For caching to be effective across multiple queries, we should NOT include queryId,","label":0,"id":408863}
{"project":"presto-0.278","comment":"\/\/ use a flag so that file deletion can be done outside the lock","label":0,"id":408864}
{"project":"presto-0.278","comment":"\/\/ and treat entire redis as single schema , single table","label":0,"id":408865}
{"project":"presto-0.278","comment":"\/** * Adds the specified value to the specified element of this big array. * * @param index a position in this big array. * @param value the value *\/","label":0,"id":408866}
{"project":"presto-0.278","comment":"\/\/ there is a benign race condition here were the lock holder","label":0,"id":408867}
{"project":"presto-0.278","comment":"\/** * Implements distinct aggregations with similar inputs by transforming plans of the following shape: * <pre> * - Aggregation *        GROUP BY (k) *        F1(DISTINCT s0, s1, ...), *        F2(DISTINCT s0, s1, ...), *     - X * <\/pre> * into * <pre> * - Aggregation *          GROUP BY (k) *          F1(x) *          F2(x) *      - Aggregation *             GROUP BY (k, s0, s1, ...) *          - X * <\/pre> * <p> * Assumes s0, s1, ... are symbol references (i.e., complex expressions have been pre-projected) *\/","label":0,"id":408868}
{"project":"presto-0.278","comment":"\/\/ Test out the extraction of all basic comparisons","label":0,"id":408869}
{"project":"presto-0.278","comment":"\/\/ varchar\/char direct","label":0,"id":408870}
{"project":"presto-0.278","comment":"\/\/ testNestedBlock(new ArrayType(new ArrayType(new ArrayType(createDecimalType(MAX_SHORT_PRECISION)))));","label":0,"id":408871}
{"project":"presto-0.278","comment":"\/\/ Response could contain info for tableName that matches the original table by prefix.\/\/ e.g. when table name is \"table1\", response could contain routingTable for \"table1_staging\"","label":0,"id":408872}
{"project":"presto-0.278","comment":"\/\/ This is exactly the same operation as for TIME WITH TIME ZONE -> TIMESTAMP, as the representations","label":0,"id":408873}
{"project":"presto-0.278","comment":"\/\/ allow json object contains non-exist field names","label":0,"id":408874}
{"project":"presto-0.278","comment":"\/\/ Processing of dictionary failed, but we ignore the exception here\/\/ and force reprocessing of the whole block using the normal code.\/\/ The second pass may not fail due to filtering.\/\/ todo dictionary processing should be able to tolerate failures of unused elements","label":1,"id":408875}
{"project":"presto-0.278","comment":"\/\/ We check the data properties of TableScanA and TableScanB to see if they meet requirements for merge join:","label":0,"id":408876}
{"project":"presto-0.278","comment":"\/\/ long lastSchedulingCompletion = 0;","label":0,"id":408877}
{"project":"presto-0.278","comment":"\/**     * This method can be expensive for complex types.     *\/","label":0,"id":408878}
{"project":"presto-0.278","comment":"\/**     * Get the offset of the first child for the node.     *     * @param nodeIndex Index in tree of first entry for node     * @param level Level of node     *\/","label":0,"id":408879}
{"project":"presto-0.278","comment":"\/\/ MetricsWriter is non-null if Indexer is present","label":0,"id":408880}
{"project":"presto-0.278","comment":"\/\/ enforced against user memory allocations","label":0,"id":408881}
{"project":"presto-0.278","comment":"\/\/ ImmutableMap.Builder can not be used here because it doesn't allow nulls.","label":1,"id":408882}
{"project":"presto-0.278","comment":"\/\/ _from_ is larger so, just add to current chain _to_","label":0,"id":408883}
{"project":"presto-0.278","comment":"\/\/ the system property decoder can throw any exception","label":0,"id":408884}
{"project":"presto-0.278","comment":"\/\/ Test the non-reducible code path.","label":0,"id":408885}
{"project":"presto-0.278","comment":"\/\/ However extended notation with format \u00b1(Y)+-MM-DDTHH:MM:SS.mmm+HH:MM is also acceptable and as","label":0,"id":408886}
{"project":"presto-0.278","comment":"\/\/ Assert sizeInBytes for the secondHalf block.","label":0,"id":408887}
{"project":"presto-0.278","comment":"\/\/ acknowledge pages 0 and 1","label":0,"id":408888}
{"project":"presto-0.278","comment":"\/\/ merged stats","label":0,"id":408889}
{"project":"presto-0.278","comment":"\/** * SpillableAccumulator to perform deduplication of input data for distinct aggregates only *\/","label":0,"id":408890}
{"project":"presto-0.278","comment":"\/\/ assert that pipeline 0 driver group [3, 7] will have no more drivers","label":0,"id":408891}
{"project":"presto-0.278","comment":"\/\/ try to add another buffer, which should not result in an error\/\/ and output buffers should not change","label":0,"id":408892}
{"project":"presto-0.278","comment":"\/\/ error path","label":0,"id":408893}
{"project":"presto-0.278","comment":"\/** * check column access permissions for each table * @param analysis the Analysis that needs to check ACL for *\/","label":0,"id":408894}
{"project":"presto-0.278","comment":"\/\/ This aggregation must behave as INTERMEDIATE.","label":0,"id":408895}
{"project":"presto-0.278","comment":"\/\/ date is currently midnight in timezone of the original value\/\/ convert to UTC","label":0,"id":408896}
{"project":"presto-0.278","comment":"\/\/ For example, a table scan is capable iff it supports addressable split discovery.","label":0,"id":408897}
{"project":"presto-0.278","comment":"\/\/ * If it is marked that all splits for node B in lifespan 30 has been received, SchedulingLifespanManager","label":0,"id":408898}
{"project":"presto-0.278","comment":"\/** * Configuration read from etc\/catalog\/kudu.properties *\/","label":0,"id":408899}
{"project":"presto-0.278","comment":"\/\/ This field records the metastore commit info about this input.\/\/ E.g., the last data commit time for the input partitions.","label":0,"id":408900}
{"project":"presto-0.278","comment":"\/\/ added whitespace between the X and quote","label":0,"id":408901}
{"project":"presto-0.278","comment":"\/\/ set spill path so we can enable spill by session property","label":0,"id":408902}
{"project":"presto-0.278","comment":"\/\/ Test aliased relation with column aliases","label":0,"id":408903}
{"project":"presto-0.278","comment":"\/\/ Subquery should only produce one column","label":0,"id":408904}
{"project":"presto-0.278","comment":"\/\/ verify temporal column is not set","label":0,"id":408905}
{"project":"presto-0.278","comment":"\/\/ read field","label":0,"id":408906}
{"project":"presto-0.278","comment":"\/\/ types will be no longer needed once everything is RowExpression.","label":0,"id":408907}
{"project":"presto-0.278","comment":"\/\/ The output block should be the second block","label":0,"id":408908}
{"project":"presto-0.278","comment":"\/\/ No column stats after running an empty analyze","label":0,"id":408909}
{"project":"presto-0.278","comment":"\/\/ verify primary and backup shard exist","label":0,"id":408910}
{"project":"presto-0.278","comment":"\/\/ This is because planner requires scope in order to resolve names against fields.","label":0,"id":408911}
{"project":"presto-0.278","comment":"\/\/ Check if qhat is greater than expected considering only first 3 digits of a dividend\/\/ This step help to eliminate all the cases when the estimation is greater than q by 2\/\/ and eliminates most of the cases when qhat is greater than q by 1\/\/\/\/ u2 * b * b + u1 * b + u0 >= (v1 * b + v0) * qhat\/\/ u2 * b * b + u1 * b + u0 >= v1 * b * qhat + v0 * qhat\/\/ u2 * b * b + u1 * b - v1 * b * qhat >=  v0 * qhat - u0\/\/ (u21 - v1 * qhat) * b >=  v0 * qhat - u0\/\/ (u21 - v1 * qhat) * b + u0 >=  v0 * qhat\/\/ When ((u21 - v1 * qhat) * b + u0) is less than (v0 * qhat) decrease qhat by one","label":0,"id":408912}
{"project":"presto-0.278","comment":"\/\/ extract the patch value","label":0,"id":408913}
{"project":"presto-0.278","comment":"\/\/ the buffer is destroyed, and in that case the buffer will be empty with","label":0,"id":408914}
{"project":"presto-0.278","comment":"\/**     * Given latitude in degrees, and the level of detail, the tile Y coordinate can be calculated as follows:     * sinLatitude = sin(latitude * pi\/180)     * pixelY = (0.5 \u2013 log((1 + sinLatitude) \/ (1 \u2013 sinLatitude)) \/ (4 * pi)) * 2**level     * The latitude and longitude are assumed to be on the WGS 84 datum. Even though Bing Maps uses a spherical projection,     * it\u2019s important to convert all geographic coordinates into a common datum, and WGS 84 was chosen to be that datum.     * The latitude must be clipped to range from -85.05112878 to 85.05112878.     * This avoids a singularity at the poles, and it causes the projected map to be square.     * <p>     * reference: https:\/\/msdn.microsoft.com\/en-us\/library\/bb259689.aspx     *\/","label":0,"id":408915}
{"project":"presto-0.278","comment":"\/\/ partitioned ... partitioned\/unpartitioned pipeline","label":0,"id":408916}
{"project":"presto-0.278","comment":"\/**     * Provides the logical properties for a TableScanNode. These properties come from analysis of catalog constraints.     * The current implementation is just scaffolding that will be removed once the HMS upgrade is completed.     *     * @param tableScanNode     * @return The logical properties for a TableScanNode.     *\/","label":0,"id":408917}
{"project":"presto-0.278","comment":"\/\/ current longest time zone is 32","label":0,"id":408918}
{"project":"presto-0.278","comment":"\/** * List applicable roles, including the transitive grants, for the specified principal *\/","label":0,"id":408919}
{"project":"presto-0.278","comment":"\/\/ When we have a simple query specification\/\/ followed by order by, offset, limit, fold the order by and limit\/\/ clauses into the query specification (analyzer\/planner\/\/ expects this structure to resolve references with respect\/\/ to columns defined in the query specification)","label":0,"id":408920}
{"project":"presto-0.278","comment":"\/**     * Signals that process has produced a result. {@link #process()} will be called again.     *\/","label":0,"id":408921}
{"project":"presto-0.278","comment":"\/** * Get the data streams to be written. *\/","label":0,"id":408922}
{"project":"presto-0.278","comment":"\/\/ Try to replace shard1 with newShards without knowing its new delta","label":0,"id":408923}
{"project":"presto-0.278","comment":"\/\/test-bucket\/test\")","label":0,"id":408924}
{"project":"presto-0.278","comment":"\/\/ Unbounded (infinite), NDV-based","label":0,"id":408925}
{"project":"presto-0.278","comment":"\/\/ (-1L, MICROSECONDS),         \"1969-12-31 23:59:59.999999\"","label":0,"id":408926}
{"project":"presto-0.278","comment":"\/\/ The full sync sequence is \"0xFFFFFFFF syncFirst syncSecond\".  If\/\/ this sequence begins in our segment, we must continue process until the\/\/ next sync sequence.\/\/ We have already read the 0xFFFFFFFF above, so we must test the\/\/ end condition back 4 bytes.\/\/ NOTE: this decision must agree with RcFileDecoderUtils.findFirstSyncPosition","label":0,"id":408927}
{"project":"presto-0.278","comment":"\/\/ makes sure legacy impl isn't doing trivial work","label":1,"id":408928}
{"project":"presto-0.278","comment":"\/\/ with properties","label":0,"id":408929}
{"project":"presto-0.278","comment":"\/** * No more buffers can be added. * Next state is {@link #FLUSHING}. *\/","label":0,"id":408930}
{"project":"presto-0.278","comment":"\/\/ Client session setting overrides everything.","label":0,"id":408931}
{"project":"presto-0.278","comment":"\/\/ assignments for the new ProjectNode","label":0,"id":408932}
{"project":"presto-0.278","comment":"\/\/ this method makes actual thrift request and should be called only by cache load method","label":0,"id":408933}
{"project":"presto-0.278","comment":"\/**     * Evaluates whether the provided table bucket number passes the bucket predicate.     * A bucket predicate can be present in two cases:     * <ul>     * <li>Filter on \"$bucket\" column. e.g. {@code \"$bucket\" between 0 and 100}     * <li>Single-value equality filter on all bucket columns. e.g. for a table with two bucketing columns,     * {@code bucketCol1 = 'a' AND bucketCol2 = 123}     * <\/ul>     *\/","label":0,"id":408934}
{"project":"presto-0.278","comment":"\/** * Resolves a function using implicit type coercions. We enforce explicit naming for dynamic function namespaces. * All unqualified function names will only be resolved against the built-in static function namespace. While it is * possible to define an ordering (through SQL path or other means) and convention (best match \/ first match), in * reality when complicated namespaces are involved such implicit resolution might hide errors and cause confusion. * * @throws PrestoException if there are no matches or multiple matches *\/","label":0,"id":408935}
{"project":"presto-0.278","comment":"\/\/ keep variables that are directly from the join's child (availableVariables)","label":0,"id":408936}
{"project":"presto-0.278","comment":"\/**     * Get a slice for the disk range from the provided buffers.  The buffers ranges do not have     * to exactly match {@code diskRange}, but {@code diskRange} must be completely contained within     * one of the buffer ranges.     *\/","label":0,"id":408937}
{"project":"presto-0.278","comment":"\/\/ With empty `search` we insert `replace` in front of every character and at the end","label":0,"id":408938}
{"project":"presto-0.278","comment":"\/\/ symbol -> column","label":0,"id":408939}
{"project":"presto-0.278","comment":"\/\/ TODO Add tagging support for revocable memory reservations if needed","label":1,"id":408940}
{"project":"presto-0.278","comment":"\/\/ larger subtrees over smaller subtrees","label":0,"id":408941}
{"project":"presto-0.278","comment":"\/\/ Concurrent lifespans > number of buckets.","label":0,"id":408942}
{"project":"presto-0.278","comment":"\/\/ merge \"current\" with \"right\"","label":0,"id":408943}
{"project":"presto-0.278","comment":"\/\/ be all 0's, so we don't need to update idVector again.","label":0,"id":408944}
{"project":"presto-0.278","comment":"\/\/ all rows minus nulls times range coverage (50% - heuristic)","label":0,"id":408945}
{"project":"presto-0.278","comment":"\/\/ FilePath is a unique identifier for a file, however it can be a long string\/\/ hence using md5 hash of the file path as the identifier in the cache.\/\/ We don't set fileId because fileId is Alluxio specific","label":0,"id":408946}
{"project":"presto-0.278","comment":"\/\/ request\/response with no columns, used for queries like \"select count star\"","label":0,"id":408947}
{"project":"presto-0.278","comment":"\/\/ Within is just the inverse of contain","label":0,"id":408948}
{"project":"presto-0.278","comment":"\/\/ check if the current state passes the predicate","label":0,"id":408949}
{"project":"presto-0.278","comment":"\/**     * Given plan hashes and corresponding statistics after a query is run, store them for future retrieval.     *\/","label":0,"id":408950}
{"project":"presto-0.278","comment":"\/\/ If radiusChannel is supplied, this is a distance query, for which our acceleration won't help.","label":0,"id":408951}
{"project":"presto-0.278","comment":"\/\/ remove data","label":0,"id":408952}
{"project":"presto-0.278","comment":"\/\/ read the stripe footer","label":0,"id":408953}
{"project":"presto-0.278","comment":"\/\/ since s3select only returns the required column, not the whole columns","label":0,"id":408954}
{"project":"presto-0.278","comment":"\/\/ add a new selector that has a higher priority than the existing dashboard selector and that routes queries to the \"reject-all-queries\" resource group","label":0,"id":408955}
{"project":"presto-0.278","comment":"\/\/ need to run beforehand in order to produce an optimal join order","label":0,"id":408956}
{"project":"presto-0.278","comment":"\/**     * Produces the inverse mapping of the provided assignments.     * The inverse mapping is used to propagate individual properties across a project operation     * by rewriting the property's variable references to those of the     * output of the project operation as per the provided assignments.     *\/","label":0,"id":408957}
{"project":"presto-0.278","comment":"\/\/ DELETE \/v1\/task\/{taskId}","label":0,"id":408958}
{"project":"presto-0.278","comment":"\/\/ single group and limit is 10","label":0,"id":408959}
{"project":"presto-0.278","comment":"\/\/ Currently, such precomputed hashes will be dropped by this operation.","label":0,"id":408960}
{"project":"presto-0.278","comment":"\/\/ this tests Presto and the QueryRunner","label":0,"id":408961}
{"project":"presto-0.278","comment":"\/\/ key: index into hiveColumnIndices array","label":0,"id":408962}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to show its own role grants on the specified catalog. * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":408963}
{"project":"presto-0.278","comment":"\/\/ Package visible for SphericalGeoFunctions","label":0,"id":408964}
{"project":"presto-0.278","comment":"\/**     * Returns the schemas provided by this connector.     *\/","label":0,"id":408965}
{"project":"presto-0.278","comment":"\/** * Agg function description. *\/","label":0,"id":408966}
{"project":"presto-0.278","comment":"\/\/ A = ALL B <=> min B = max B && A = min B","label":0,"id":408967}
{"project":"presto-0.278","comment":"\/**     * Rewrite single value InPredicates as equality if possible     *\/","label":0,"id":408968}
{"project":"presto-0.278","comment":"\/\/%s?%s\", server.getAddress(), parameter);","label":0,"id":408969}
{"project":"presto-0.278","comment":"\/\/ stagingParent = \/tmp\/testXXX","label":0,"id":408970}
{"project":"presto-0.278","comment":"\/\/ only add pending split if not done","label":0,"id":408971}
{"project":"presto-0.278","comment":"\/\/ it is expected that the exchanger ignores pages after finish","label":0,"id":408972}
{"project":"presto-0.278","comment":"\/\/ Examine all the output expressions","label":0,"id":408973}
{"project":"presto-0.278","comment":"\/**     * Evaluates specified positions and returns the number of positions that passed the filter.     * <p>     * Upon return, the positions array will contain positions that passed the filter or encountered     * an error. The errors array will contain errors that occurred while evaluating this filter as     * well as errors that happened earlier. The latter will be preserved only for positions that     * passed this filter.     *     * @param positions Monotonically increasing list of positions to evaluate     * @param positionCount Number of valid entries in the positions array     * @param errors Errors encountered while evaluating other filters, if any;     * contains at least positionCount entries; null value indicates no error     *\/","label":0,"id":408974}
{"project":"presto-0.278","comment":"\/\/ test char","label":0,"id":408975}
{"project":"presto-0.278","comment":"\/\/ get the end index with respect to code point count","label":0,"id":408976}
{"project":"presto-0.278","comment":"\/\/ if the transaction is already gone, do nothing","label":0,"id":408977}
{"project":"presto-0.278","comment":"\/\/ Add shutdown hook to stop MAC and cleanup temporary files","label":0,"id":408978}
{"project":"presto-0.278","comment":"\/\/ ********************* predicates *******************","label":0,"id":408979}
{"project":"presto-0.278","comment":"\/\/ TODO: specialize the class at creation time","label":1,"id":408980}
{"project":"presto-0.278","comment":"\/\/ Implementation according to http:\/\/floating-point-gui.de\/errors\/comparison\/","label":0,"id":408981}
{"project":"presto-0.278","comment":"\/\/ Computes all the strongly connected components of the directed graph.","label":0,"id":408982}
{"project":"presto-0.278","comment":"\/\/ count buffered data","label":0,"id":408983}
{"project":"presto-0.278","comment":"\/\/ Cassandra does not support renaming columns","label":0,"id":408984}
{"project":"presto-0.278","comment":"\/\/ The table has 3 partitions of 3 different bucket count (4, 8, 16).","label":0,"id":408985}
{"project":"presto-0.278","comment":"\/\/ 4....R     26M    627M   673T     627M    627M   627M   627M","label":0,"id":408986}
{"project":"presto-0.278","comment":"\/** * Extending Parquet dereference pushdown rule to work with Hive connector. *\/","label":0,"id":408987}
{"project":"presto-0.278","comment":"\/\/ the following two are the long values of a double NaN","label":0,"id":408988}
{"project":"presto-0.278","comment":"\/\/ Deprecate this class once the support is added.","label":1,"id":408989}
{"project":"presto-0.278","comment":"\/**     * Gets the number of rows in the partition     *\/","label":0,"id":408990}
{"project":"presto-0.278","comment":"\/\/ orders is naturally partitioned, AssignUniqueId should not overwrite its natural partitioning","label":0,"id":408991}
{"project":"presto-0.278","comment":"\/\/ Only maxcard=1 should get propagated","label":0,"id":408992}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to insert into the specified table in this catalog. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":408993}
{"project":"presto-0.278","comment":"\/\/ Map entries with a null key are skipped in the Hive ORC reader, so skip them here also","label":0,"id":408994}
{"project":"presto-0.278","comment":"\/\/ always check the actual plan node has a filter node to prevent accidentally missing predicates","label":0,"id":408995}
{"project":"presto-0.278","comment":"\/\/ session property can disabled validation","label":0,"id":408996}
{"project":"presto-0.278","comment":"\/\/ only expire them if they are older than minQueryExpireAge. We need to keep them\/\/ around for a while in case clients come back asking for status","label":0,"id":408997}
{"project":"presto-0.278","comment":"\/\/ In project and filter expression compilation, ExpressionAnalyzer.getExpressionTypesFromInput","label":0,"id":408998}
{"project":"presto-0.278","comment":"\/** * RowExpression visitor which verifies if given expression (actual) is matching other RowExpression given as context (expected). *\/","label":0,"id":408999}
{"project":"presto-0.278","comment":"\/\/ the leak detector should report no leaked queries as the query doesn't have any memory reservation","label":1,"id":409000}
{"project":"presto-0.278","comment":"\/\/ Update db to allow for 1 more running query in dashboard resource group","label":0,"id":409001}
{"project":"presto-0.278","comment":"\/\/ 11 buckets UNION ALL 22 buckets","label":0,"id":409002}
{"project":"presto-0.278","comment":"\/\/ inputs from build side of the join are laid out following the input from the probe side,\/\/ so adjust the channel ids but keep the field layouts intact","label":0,"id":409003}
{"project":"presto-0.278","comment":"\/** * Creates a column writer for a given type. * * @param nodeIndex - index of the node in the orcTypes *\/","label":0,"id":409004}
{"project":"presto-0.278","comment":"\/\/ first, translate names from sql-land references to plan symbols","label":0,"id":409005}
{"project":"presto-0.278","comment":"\/\/ correlation used in subrelation","label":0,"id":409006}
{"project":"presto-0.278","comment":"\/\/ No splits scheduled on the maxed out node","label":0,"id":409007}
{"project":"presto-0.278","comment":"\/\/ Left : Probe side","label":0,"id":409008}
{"project":"presto-0.278","comment":"\/**         * for new table in S3 or when staging directory is disabled         *\/","label":0,"id":409009}
{"project":"presto-0.278","comment":"\/\/ encrypted nodes should have no type info","label":0,"id":409010}
{"project":"presto-0.278","comment":"\/\/ dividend < divisor","label":0,"id":409011}
{"project":"presto-0.278","comment":"\/\/ Sample both sides if at least one side is not already sampled\/\/ Find the best equijoin clause so we sample both sides the same way optimally\/\/ First see if there is a int\/bigint key","label":0,"id":409012}
{"project":"presto-0.278","comment":"\/\/ override compaction to trigger it early for tests so that the test also covers compaction and rehashing","label":0,"id":409013}
{"project":"presto-0.278","comment":"\/\/ The supplier also tracks all created buffers and can be reset to the beginning,","label":0,"id":409014}
{"project":"presto-0.278","comment":"\/\/ This happens when all distinct symbols are constants.","label":0,"id":409015}
{"project":"presto-0.278","comment":"\/\/ TODO: need to handle race condition on all workers","label":1,"id":409016}
{"project":"presto-0.278","comment":"\/\/ insert into new partition or overwrite existing partition","label":0,"id":409017}
{"project":"presto-0.278","comment":"\/\/ On the other hand, we do not want to produce a page that is too small if the build size is too small (e.g., the build side is with all nulls).","label":0,"id":409018}
{"project":"presto-0.278","comment":"\/** * Is this a non-success terminal state. *\/","label":0,"id":409019}
{"project":"presto-0.278","comment":"\/\/ read the row index for each column","label":0,"id":409020}
{"project":"presto-0.278","comment":"\/\/ add clear transaction ID directive","label":0,"id":409021}
{"project":"presto-0.278","comment":"\/\/ TEST: n to 1 inner join between orders and customers with limit 1 on left table. maxcard=1 and equivalence","label":0,"id":409022}
{"project":"presto-0.278","comment":"\/\/ change the modification time, and set it into a new HiveFileContext to invalidate this cache\/\/ the cache will hit the first time(with its last modification time), but will be invalidated and not returned\/\/ the real metadata result will be gotten from the delegate i.e. MetadataReader","label":0,"id":409023}
{"project":"presto-0.278","comment":"\/\/ * Under new semantics, time is agnostic to the session zone.","label":0,"id":409024}
{"project":"presto-0.278","comment":"\/\/ skip this position","label":0,"id":409025}
{"project":"presto-0.278","comment":"\/\/ Push inheritedPredicates down to the filtering source if possible","label":0,"id":409026}
{"project":"presto-0.278","comment":"\/\/ make sure we release marker after match or\/\/ unbuffered char stream will keep buffering","label":0,"id":409027}
{"project":"presto-0.278","comment":"\/\/ This implementation assumes arrays used in the hash are always a power of 2","label":0,"id":409028}
{"project":"presto-0.278","comment":"\/\/ INVARIANT: currentPosition is -1 or a valid currentPosition greater than or equal to zero","label":0,"id":409029}
{"project":"presto-0.278","comment":"\/\/ Adaptation of Knuth multiplicative hash. Multiplication,\/\/ shift and xor. This is approx 3x less arithmetic than\/\/ Murmur hash.","label":0,"id":409030}
{"project":"presto-0.278","comment":"\/\/ create input format","label":0,"id":409031}
{"project":"presto-0.278","comment":"\/\/ adjust the patch length to number of entries in gap list","label":0,"id":409032}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to show metadata of tables by executing SHOW TABLES, SHOW GRANTS etc. in a catalog. * <p> * NOTE: This method is only present to give users an error message when listing is not allowed. * The {@link #filterTables} method must filter all results for unauthorized users, * since there are multiple ways to list tables. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":409033}
{"project":"presto-0.278","comment":"\/\/ read inflater stream chunk by chunk","label":0,"id":409034}
{"project":"presto-0.278","comment":"\/\/ process","label":0,"id":409035}
{"project":"presto-0.278","comment":"\/\/ of TIME WITH TIME ZONE","label":0,"id":409036}
{"project":"presto-0.278","comment":"\/\/ stored as ints rather than Optionals to save memory\/\/ -1 indicates an absent value","label":0,"id":409037}
{"project":"presto-0.278","comment":"\/\/ determine the input index of the partition columns and data columns","label":0,"id":409038}
{"project":"presto-0.278","comment":"\/\/ build ids","label":0,"id":409039}
{"project":"presto-0.278","comment":"\/\/ inequality is used here.","label":0,"id":409040}
{"project":"presto-0.278","comment":"\/\/ Wait for Resources                  |               V                                         -----------","label":0,"id":409041}
{"project":"presto-0.278","comment":"\/\/ TODO: Properly support utilized column check. Currently, we prune whole columns, if they are not utilized.","label":1,"id":409042}
{"project":"presto-0.278","comment":"\/\/ TODO: clean up cast path","label":1,"id":409043}
{"project":"presto-0.278","comment":"\/\/ TODO: Once CAST function supports cachedInstanceFactory or directly write to BlockBuilder,","label":1,"id":409044}
{"project":"presto-0.278","comment":"\/\/ spent in evaluate. The root cause is not well understood. Maybe when the function is too large JIT has problem optimizing it. Empirical evidence shows that when there","label":0,"id":409045}
{"project":"presto-0.278","comment":"\/\/ exclude constant columns","label":0,"id":409046}
{"project":"presto-0.278","comment":"\/** * Get the unique symbol that is assigned an rvalue matched by the RvalueMatcher in node. * RvalueMatchers can match anything that can be assigned to a Symbol, and may be specialized * based on the type of the node or the type of the value that is being assigned. For example, * TableScanNodes assign ColumnHandles to Symbols and AggregationNodes assign FunctionCalls * to Symbols. * <p> * The assigned symbol is identified by matching the value on the right side of the assignment; * the rvalue. If no match is found in the node, getAssignedSymbol must return Optional.empty(). *\/","label":0,"id":409047}
{"project":"presto-0.278","comment":"\/\/\/\/ Bucketed and unbucketed HASH JOIN mixed\/\/ =======================================","label":0,"id":409048}
{"project":"presto-0.278","comment":"\/\/ TODO .estimate(distinctValuesCount(\"sub\"), defaultTolerance())","label":1,"id":409049}
{"project":"presto-0.278","comment":"\/\/ page 1:","label":0,"id":409050}
{"project":"presto-0.278","comment":"\/\/ 00:00.000 of some day UTC, we always use timezone offset that was valid on 1970-01-01.","label":0,"id":409051}
{"project":"presto-0.278","comment":"\/\/ while holding the monitor of this.","label":0,"id":409052}
{"project":"presto-0.278","comment":"\/** * @throws NoSuchElementException if query does not exist *\/","label":0,"id":409053}
{"project":"presto-0.278","comment":"\/\/ Presto removes trailing whitespaces when casting to CHAR.","label":0,"id":409054}
{"project":"presto-0.278","comment":"\/\/ The ordering is critical because the stream only contains a length with no offset.","label":0,"id":409055}
{"project":"presto-0.278","comment":"\/*      From: X -> Y  -> Z      To:   X -> Y' -> Z'     *\/","label":0,"id":409056}
{"project":"presto-0.278","comment":"\/\/ Sink factory is entirely a pass thought to LocalExchange.","label":0,"id":409057}
{"project":"presto-0.278","comment":"\/\/ Sort so the values will be printed in predictable order","label":0,"id":409058}
{"project":"presto-0.278","comment":"\/** * Holds the input map block to avoid unnecessary typeset creation for the first map. *\/","label":0,"id":409059}
{"project":"presto-0.278","comment":"\/\/ time zone is not used for dates","label":0,"id":409060}
{"project":"presto-0.278","comment":"\/\/ The second pass may not fail due to filtering.","label":0,"id":409061}
{"project":"presto-0.278","comment":"\/\/ We expect UTC millis later on so we have to use UTC chronology","label":0,"id":409062}
{"project":"presto-0.278","comment":"\/\/ The 10 Slices in the array will be of lengths 0 to 9.","label":0,"id":409063}
{"project":"presto-0.278","comment":"\/** * Gets the value at the {@code block} {@code position} as a Slice. *\/","label":0,"id":409064}
{"project":"presto-0.278","comment":"\/** * Get the view definitions that match the specified table prefix (never null). *\/","label":0,"id":409065}
{"project":"presto-0.278","comment":"\/\/ We will add the hashtable size to the retained size even if it's not built yet. This could be overestimating","label":0,"id":409066}
{"project":"presto-0.278","comment":"\/\/ long and short decimals","label":0,"id":409067}
{"project":"presto-0.278","comment":"\/\/ this can force previouslyComputedResults to be saved given the page is 16MB in size","label":0,"id":409068}
{"project":"presto-0.278","comment":"\/\/ 1) the offsets size: Integer.BYTES * positionCount. Note that even though ColumnarRow doesn't have the offsets array, the serialized RowBlock still has it. Please see RowBlockEncodingBuffer.\/\/ 2) nulls array size: Byte.BYTES * positionCount\/\/ 3) the estimated serialized size for the fields Blocks which were just constructed as new DictionaryBlocks:\/\/ the average row size: averageRowSize * the number of rows: nonNullPositionCount","label":0,"id":409069}
{"project":"presto-0.278","comment":"\/\/ flattened nodes might have multiple ROW_INDEX with the same column, but different sequences\/\/ aggregate such statistics before the validation","label":0,"id":409070}
{"project":"presto-0.278","comment":"\/** * Used on resource managers. *\/","label":0,"id":409071}
{"project":"presto-0.278","comment":"\/** * This optimizer pushes aggregations below outer joins when: the aggregation * is on top of the outer join, it groups by all columns in the outer table, and * the outer rows are guaranteed to be distinct. * <p> * When the aggregation is pushed down, we still need to perform aggregations * on the null values that come out of the absent values in an outer * join. We add a cross join with a row of aggregations on null literals, * and coalesce the aggregation that results from the left outer join with * the result of the aggregation over nulls. * <p> * Example: * <pre> * - Filter (\"nationkey\" > \"avg\") *  - Aggregate(Group by: all columns from the left table, aggregation: *    avg(\"n2.nationkey\")) *      - LeftJoin(\"regionkey\" = \"regionkey\") *          - AssignUniqueId (nation) *              - Tablescan (nation) *          - Tablescan (nation) * <\/pre> * <\/p> * Is rewritten to: * <pre> * - Filter (\"nationkey\" > \"avg\") *  - project(regionkey, coalesce(\"avg\", \"avg_over_null\") *      - CrossJoin *          - LeftJoin(\"regionkey\" = \"regionkey\") *              - AssignUniqueId (nation) *                  - Tablescan (nation) *              - Aggregate(Group by: regionkey, aggregation: *                avg(nationkey)) *                  - Tablescan (nation) *          - Aggregate *            avg(null_literal) *              - Values (null_literal) * <\/pre> *\/","label":0,"id":409072}
{"project":"presto-0.278","comment":"\/\/ Equivalent to: ISO_DATE_TIME.parse(textValue, LocalDateTime::from).toInstant(UTC).toEpochMilli();","label":0,"id":409073}
{"project":"presto-0.278","comment":"\/\/ Map(Dictionary(LongArrayBlock), Dictionary(LongArrayBlock))","label":0,"id":409074}
{"project":"presto-0.278","comment":"\/\/ This call and all its arguments are local","label":0,"id":409075}
{"project":"presto-0.278","comment":"\/\/ All partition key domains will be fully evaluated, so we don't need to include those","label":0,"id":409076}
{"project":"presto-0.278","comment":"\/\/ if the checkpoint is within the current buffer, just adjust the pointer","label":0,"id":409077}
{"project":"presto-0.278","comment":"\/\/ make sure the FileSystem is created with the proper Configuration object","label":0,"id":409078}
{"project":"presto-0.278","comment":"\/\/ Nodes that require parallel streams to be partitioned","label":0,"id":409079}
{"project":"presto-0.278","comment":"\/\/ floats and doubles are not supported, so we should see all splits","label":0,"id":409080}
{"project":"presto-0.278","comment":"\/** * 23:59:59 Dec 31st 2107. The maximum date representable in DOS format. *\/","label":0,"id":409081}
{"project":"presto-0.278","comment":"\/\/ remaining numLiterals - 2 elements here","label":0,"id":409082}
{"project":"presto-0.278","comment":"\/\/ Multi-linestring with two disjoint paths has length equal to sum of lengths of lines","label":0,"id":409083}
{"project":"presto-0.278","comment":"\/\/ get a copy of in memory pages and the HandleInfo to save the handleFuture","label":0,"id":409084}
{"project":"presto-0.278","comment":"\/\/ TODO: Originally the dictionary row group sizes were not included in memory accounting due","label":1,"id":409085}
{"project":"presto-0.278","comment":"\/**     * Gets an object representation of the type value in the {@code block}     * {@code position}. This is the value returned to the user via the     * REST endpoint and therefore must be JSON serializable.     *\/","label":0,"id":409086}
{"project":"presto-0.278","comment":"\/\/ process the current page; save the unfinished work if we are waiting for memory","label":0,"id":409087}
{"project":"presto-0.278","comment":"\/\/ if variable run is non-zero then we are seeing repeating\/\/ values at the end of variable run in which case keep\/\/ updating variable and fixed runs","label":0,"id":409088}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to show roles on the specified catalog.     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":409089}
{"project":"presto-0.278","comment":"\/\/ read 3 pages","label":0,"id":409090}
{"project":"presto-0.278","comment":"\/** * All splits have been provided to caller of this scheduler. * Cleanup operations are done (e.g., drainCompletelyScheduledLifespans has drained all driver groups). *\/","label":0,"id":409091}
{"project":"presto-0.278","comment":"\/\/ Ignore this exception so that older JRE versions that might not support newer time-zone identifiers do not fail","label":0,"id":409092}
{"project":"presto-0.278","comment":"\/** * Begin a transaction for creating shards. * * @return transaction ID *\/","label":0,"id":409093}
{"project":"presto-0.278","comment":"\/\/ TODO #7122: line 1:8: '1970-01-01 00:14:15.123' is not a valid timestamp literal; the expected values will pro\/\/ checkRepresentation(\"TIMESTAMP '1970-01-01 00:14:15.123'\", Types.TIMESTAMP, (rs, column) -> {\/\/ ...\/\/ });","label":1,"id":409094}
{"project":"presto-0.278","comment":"\/\/ row with mixed fields","label":0,"id":409095}
{"project":"presto-0.278","comment":"\/\/ settings are constants due to efficiency considerations\/\/ 128KB","label":0,"id":409096}
{"project":"presto-0.278","comment":"\/\/ 1. Can zero out the memory reservation even though the spiller thread physically holds onto that memory.","label":0,"id":409097}
{"project":"presto-0.278","comment":"\/\/ Don't flip sides when both are similar in size","label":0,"id":409098}
{"project":"presto-0.278","comment":"\/\/ NOTE: this code must be lock free so we do not hang for state machine updates","label":0,"id":409099}
{"project":"presto-0.278","comment":"\/\/ \"Estimated\" (emulated) exchanges are below current node, not above. If the current node is accumulating (e.g. final aggregation),","label":0,"id":409100}
{"project":"presto-0.278","comment":"\/**     * It writes a map type and its key-pair values to the Parquet RecordConsumer.     * This is called when the original type (MAP) is detected by writeValue().     * This function assumes the following schema:     * optional group mapCol (MAP) {     * repeated group map (MAP_KEY_VALUE) {     * required TYPE key;     * optional TYPE value;     * }     * }     *     * @param value The object that contains the map key-values.     * @param inspector The object inspector used to get the correct value type.     * @param type Type that contains information about the group (MAP) schema.     *\/","label":0,"id":409101}
{"project":"presto-0.278","comment":"\/** * NativeExecutionOperator is responsible for launching the external native process and managing the communication * between Java process and native process (by using the {@Link NativeExecutionTask}). The NativeExecutionOperator will send  necessary meta information * (e.g, plan fragment, session properties etc) will be sent to native process and collect the execution results (data, metrics etc) back and propagate out as * the operator output through the operator's getOutput method. * <p> * TODO: The lifecycle of NativeExecutionOperator is (will be added in next PR): *  1. Launch the native engine external process when initializing the operator. *  2. Serialize and pass the planFragment, tableWriteInfo and taskSource to the external process through {@link NativeExecutionTask} APIs. *  3. Call {@link NativeExecutionTask}'s pollResult() to retrieve {@link SerializedPage} back from external process. *  4. Deserialize {@link SerializedPage} to {@link Page} and return it back to driver from the getOutput method. *  5. The close() will be called by the driver when {@link NativeExecutionTask} completes and pollResult() returns an empty result. *  6. Shut down the external process upon calling of close() method *\/","label":1,"id":409102}
{"project":"presto-0.278","comment":"\/\/ (-999_999L, MICROSECONDS),   \"1969-12-31 23:59:59.000001\"","label":0,"id":409103}
{"project":"presto-0.278","comment":"\/\/ source tables size exceeds JOIN_MAX_BROADCAST_TABLE_SIZE limit but one side is significantly bigger than the other","label":0,"id":409104}
{"project":"presto-0.278","comment":"\/\/ get data streams, because only data streams are ordered","label":0,"id":409105}
{"project":"presto-0.278","comment":"\/** * Accessible for {@link AstVisitor}, use {@link AstVisitor#process(Node, Object)} instead. *\/","label":0,"id":409106}
{"project":"presto-0.278","comment":"\/\/ Note binary nested in complex structures do no use the empty marker.","label":0,"id":409107}
{"project":"presto-0.278","comment":"\/\/ If any of the incoming blocks do not contain the hashtable, noHashTables is set to true.","label":0,"id":409108}
{"project":"presto-0.278","comment":"\/\/ to columns defined in the query specification)","label":0,"id":409109}
{"project":"presto-0.278","comment":"\/\/ Some directories (e.g. uploaded through S3 GUI) return a charset in the Content-Type header","label":0,"id":409110}
{"project":"presto-0.278","comment":"\/\/ 3. Write entries in batches using block.getPositions() to make it more efficient","label":1,"id":409111}
{"project":"presto-0.278","comment":"\/**     * Are the values in the specified blocks at the specified positions equal?     * <p>     * This method assumes input is not null.     *\/","label":0,"id":409112}
{"project":"presto-0.278","comment":"\/\/ Check if the new probe side after removing unnecessary local exchange is valid.","label":0,"id":409113}
{"project":"presto-0.278","comment":"\/\/ has no more input, has finished flushing, and has no unfinished work","label":0,"id":409114}
{"project":"presto-0.278","comment":"\/\/ verify selecting from a view over a view requires the view owner of the outer view to have special view creation privileges for the inner view","label":0,"id":409115}
{"project":"presto-0.278","comment":"\/\/ the test is to show that the loaded data is always bounded by MAX_BATCH_SIZE because 1024 X 8B < 1MB","label":0,"id":409116}
{"project":"presto-0.278","comment":"\/\/ whenFinishedOrNewLifespanAdded may remain in a not-done state for an extended period of time.\/\/ As a result, over time, it can retain a huge number of listener objects.\/\/ Whenever schedule is called, holding onto the previous listener is not useful anymore.\/\/ Therefore, we drop those listeners here by recreating the future.\/\/ Note: The following implementation is thread-safe because whenFinishedOrNewLifespanAdded can only be completed\/\/ while holding the monitor of this.","label":0,"id":409117}
{"project":"presto-0.278","comment":"\/**     * This logical properties builder should be used by PlanNode's that project their     * source properties. For example, a ProjectNode and AggregationNode project their     * source properties. The former might also reassign property variable references.     *\/","label":0,"id":409118}
{"project":"presto-0.278","comment":"\/\/ weights","label":0,"id":409119}
{"project":"presto-0.278","comment":"\/\/ TODO Not sure whether file_offset is used","label":1,"id":409120}
{"project":"presto-0.278","comment":"\/\/ request failures):","label":0,"id":409121}
{"project":"presto-0.278","comment":"\/\/ Get updated GroupByIdBlock from distinctPage","label":0,"id":409122}
{"project":"presto-0.278","comment":"\/\/ if this is a request for a result after the end of the stream, return not found","label":0,"id":409123}
{"project":"presto-0.278","comment":"\/\/ if we are partitioned on empty set, we must say multiple of unknown partitioning, because\/\/ the connector does not guarantee a single split in this case (since it might not understand\/\/ that the value is a constant).","label":0,"id":409124}
{"project":"presto-0.278","comment":"\/\/ estimate the number of entries required to create 1.5 pages of results","label":0,"id":409125}
{"project":"presto-0.278","comment":"\/\/ TODO this should represent TIMESTAMP '1970-01-01 00:14:15.227 Europe\/Warsaw'","label":1,"id":409126}
{"project":"presto-0.278","comment":"\/\/ Note: even when they are present, readers can read past this range like footer and stripe's","label":0,"id":409127}
{"project":"presto-0.278","comment":"\/\/ make a best-effort attempt to preserve the exception history and close all resources.","label":0,"id":409128}
{"project":"presto-0.278","comment":"\/\/ assert that pipeline will have no more drivers for driver group [1, 5, 7]","label":0,"id":409129}
{"project":"presto-0.278","comment":"\/\/ Hack to work around the metastore not being configured for S3 or other FS.\/\/ The metastore tries to validate the location when creating the\/\/ table, which fails without explicit configuration for file system.\/\/ We work around that by using a dummy location when creating the\/\/ table and update it here to the correct location.","label":1,"id":409130}
{"project":"presto-0.278","comment":"\/\/ cause an error that aborts the transaction","label":0,"id":409131}
{"project":"presto-0.278","comment":"\/\/ construct a simulator that will be full because of dictionary memory limit;\/\/ the column cannot not be converted to direct encoding because of stripe size limit","label":0,"id":409132}
{"project":"presto-0.278","comment":"\/\/ The engine requested the connector provides a layout with a non-none TupleDomain.\/\/ A TupleDomain is effectively a list of column-Domain pairs.\/\/ The connector is expected enforce the respective domain entirely on none, some, or all of the columns.\/\/ 1. When the connector could enforce none of the domains, the unenforced would be equal to predicate;\/\/ 2. When the connector could enforce some of the domains, the unenforced would contain a subset of the column-Domain pairs;\/\/ 3. When the connector could enforce all of the domains, the unenforced would be TupleDomain.all().\/\/ In all 3 cases shown above, the unenforced is not TupleDomain.none().","label":0,"id":409133}
{"project":"presto-0.278","comment":"\/**     * Produce rows matching join condition for the current probe position. If this method was called previously     * for the current probe position, calling this again will produce rows that wasn't been produced in previous     * invocations.     *     * @return true if all eligible rows have been produced; false otherwise     *\/","label":0,"id":409134}
{"project":"presto-0.278","comment":"\/** * Intermediate splits (i.e. splits that should not be queued). *\/","label":0,"id":409135}
{"project":"presto-0.278","comment":"\/** * Returns the next address to join. * Returns NO_MORE_POSITIONS if there are no more values to join. *\/","label":0,"id":409136}
{"project":"presto-0.278","comment":"\/\/ The scheduleDriversForTaskLifeCycle method calls enqueueDriverSplitRunner, which registers a callback with access to this object.\/\/ The call back is accessed from another thread, so this code can not be placed in the constructor.","label":0,"id":409137}
{"project":"presto-0.278","comment":"\/\/ skip unsupported column types","label":0,"id":409138}
{"project":"presto-0.278","comment":"\/\/ Processing of dictionary failed, but we ignore the exception here","label":0,"id":409139}
{"project":"presto-0.278","comment":"\/\/\" + Files.createTempDir());","label":0,"id":409140}
{"project":"presto-0.278","comment":"\/\/ H2 expects dates in to be millis at midnight in the JVM timezone","label":0,"id":409141}
{"project":"presto-0.278","comment":"\/\/ Compress the file names into a consolidated string","label":0,"id":409142}
{"project":"presto-0.278","comment":"\/\/ nested","label":0,"id":409143}
{"project":"presto-0.278","comment":"\/**     * Return the number of entries in the map     *     * @return the number of entries in the map     *\/","label":0,"id":409144}
{"project":"presto-0.278","comment":"\/\/ Set the mapping of presto column name to the family\/qualifier","label":0,"id":409145}
{"project":"presto-0.278","comment":"\/\/ Set a new key, value","label":0,"id":409146}
{"project":"presto-0.278","comment":"\/** * Creates a Base32 codec used for decoding and encoding. * <p> * When encoding the line length is 0 (no chunking). * <\/p> *\/","label":0,"id":409147}
{"project":"presto-0.278","comment":"\/\/ Pinot gRPC server response iterator returns:\/\/ - n data blocks based on inbound message size;\/\/ - 1 metadata of the query results.\/\/ So we need to check ResponseType of each ServerResponse.","label":0,"id":409148}
{"project":"presto-0.278","comment":"\/\/ when the return type is different","label":0,"id":409149}
{"project":"presto-0.278","comment":"\/\/ this should be around ~69000","label":0,"id":409150}
{"project":"presto-0.278","comment":"\/**     * @return value predicates for equatable Types (but not orderable)     *\/","label":0,"id":409151}
{"project":"presto-0.278","comment":"\/\/ slots in a hash table), e.g. up to 192 bits per value.","label":0,"id":409152}
{"project":"presto-0.278","comment":"\/\/ cast(json_parse(x) AS t)` will be optimized into `$internal$json_string_to_array\/map\/row_cast` in ExpressionOptimizer\/\/ If you make changes to this function (e.g. use parse JSON string into some internal representation),\/\/ make sure `$internal$json_string_to_array\/map\/row_cast` is changed accordingly.","label":0,"id":409153}
{"project":"presto-0.278","comment":"\/\/ finalization","label":0,"id":409154}
{"project":"presto-0.278","comment":"\/\/ add field to size","label":0,"id":409155}
{"project":"presto-0.278","comment":"\/\/ - Otherwise (for example, feature flag or transaction related), we don't have to add the fields to canonical class","label":0,"id":409156}
{"project":"presto-0.278","comment":"\/**     * Creates a new empty RuntimeMetric.     *     * @param name Name of this metric. If used in the presto core code base, this should be a value defined in {@link RuntimeMetricName}. But connectors could use arbitrary names.     * @param unit Unit of this metric. Available units are defined in {@link RuntimeUnit}.     *\/","label":0,"id":409157}
{"project":"presto-0.278","comment":"\/\/ one subquery used for \"1 <= ALL(SELECT 1)\", one subquery used for \"2 <= ALL(SELECT 1)\"","label":0,"id":409158}
{"project":"presto-0.278","comment":"\/\/ Plaintext column","label":0,"id":409159}
{"project":"presto-0.278","comment":"\/\/ channelCount takes one int","label":0,"id":409160}
{"project":"presto-0.278","comment":"\/\/ Only prefer grouping on join columns if no parent local property preferences","label":0,"id":409161}
{"project":"presto-0.278","comment":"\/\/ !(a AND b) ==> !a OR !b","label":0,"id":409162}
{"project":"presto-0.278","comment":"\/\/ E.g. `SELECT count(distinct COL_A), sum(COL_B) FROM myTable` to Pinot as `SELECT distinctCount(COL_A), sum(COL_B) FROM myTable`","label":0,"id":409163}
{"project":"presto-0.278","comment":"\/**     * Parse a string (optionally containing a zone) as a value of either TIMESTAMP or TIMESTAMP WITH TIME ZONE type.     * <p>     * For example: {@code \"2000-01-01 01:23:00\"} is parsed to TIMESTAMP {@code 2000-01-01T01:23:00}     * and {@code \"2000-01-01 01:23:00 +01:23\"} is parsed to TIMESTAMP WITH TIME ZONE     * {@code 2000-01-01T01:23:00.000+01:23}.     *     * @return stack representation of TIMESTAMP or TIMESTAMP WITH TIME ZONE type, depending on input     *\/","label":0,"id":409164}
{"project":"presto-0.278","comment":"\/\/ This way, if the table is accessed in an ongoing transaction, staged data","label":0,"id":409165}
{"project":"presto-0.278","comment":"\/\/ Handles cases like: `cast(eventDate as TIMESTAMP) <  DATE '2014-01-31'`","label":0,"id":409166}
{"project":"presto-0.278","comment":"\/\/ This lambda will provide empty column statistics right away instead of creating an expensive empty","label":0,"id":409167}
{"project":"presto-0.278","comment":"\/\/ Exception must be thrown here.","label":0,"id":409168}
{"project":"presto-0.278","comment":"\/\/ xxhash64 mix","label":0,"id":409169}
{"project":"presto-0.278","comment":"\/**     * Evaluates an expression's response to binding the specified input symbols to NULL     *\/","label":0,"id":409170}
{"project":"presto-0.278","comment":"\/\/ it should be possible to qualify the column reference with the view name","label":0,"id":409171}
{"project":"presto-0.278","comment":"\/\/ frame end","label":0,"id":409172}
{"project":"presto-0.278","comment":"\/**     * Threshold on total distributed CPU usage after which new queries     * will queue instead of starting.     *\/","label":0,"id":409173}
{"project":"presto-0.278","comment":"\/\/ %s\", tryCatch.getComment());","label":0,"id":409174}
{"project":"presto-0.278","comment":"\/\/host3.rack2:13\"), NodeVersion.UNKNOWN, false));","label":0,"id":409175}
{"project":"presto-0.278","comment":"\/** * Simple implementation of CostCalculator. It assumes that ExchangeNodes are already in the plan. *\/","label":0,"id":409176}
{"project":"presto-0.278","comment":"\/\/ Ignore a conjunct for this test if we can not deterministically get responses from it","label":0,"id":409177}
{"project":"presto-0.278","comment":"\/\/ assert structure; FilterNode is removed","label":0,"id":409178}
{"project":"presto-0.278","comment":"\/\/ When an aggregated memory context is closed, it force-frees the memory allocated by its","label":0,"id":409179}
{"project":"presto-0.278","comment":"\/\/ merge the running operator stats into the operator summary","label":0,"id":409180}
{"project":"presto-0.278","comment":"\/\/ Due to eventual consistently collected stats, these could be empty","label":0,"id":409181}
{"project":"presto-0.278","comment":"\/** * Rate at which distributed CPU usage quota regenerates. *\/","label":0,"id":409182}
{"project":"presto-0.278","comment":"\/\/ If aggregation has a mixed of non-global and global grouping set, an repartition exchange is any way needed to eliminate duplicate default outputs\/\/ from partial aggregations (enforced in `ValidateAggregationWithDefaultValues.java`). Therefore, we don't have preference on what the child will return.","label":0,"id":409183}
{"project":"presto-0.278","comment":"\/\/ verify skew info","label":0,"id":409184}
{"project":"presto-0.278","comment":"\/\/ enforce the required properties","label":0,"id":409185}
{"project":"presto-0.278","comment":"\/**     * Revokes the specified roles from the specified grantees in the specified catalog     *     * @param grantor represents the principal specified by GRANTED BY statement     *\/","label":0,"id":409186}
{"project":"presto-0.278","comment":"\/\/ Get base query domain we have mapped from view query- if there are not direct mappings, don't filter partition count for predicate","label":0,"id":409187}
{"project":"presto-0.278","comment":"\/\/ read fourth byte and extract patch gap width","label":0,"id":409188}
{"project":"presto-0.278","comment":"\/\/ we have enough bytes to create our output","label":0,"id":409189}
{"project":"presto-0.278","comment":"\/\/ FileSystemFactory is used to hack around the abuse of Configuration as a","label":1,"id":409190}
{"project":"presto-0.278","comment":"\/\/ Column mapping is not defined (i.e. use column generation) and table is external","label":0,"id":409191}
{"project":"presto-0.278","comment":"\/\/ handle the left over bits","label":0,"id":409192}
{"project":"presto-0.278","comment":"\/\/ Overwrite an existing partition\/\/\/\/ The behavior of overwrite considered as if first dropping the partition and inserting a new partition, thus:\/\/ * No partition writable check is required.\/\/ * Table schema and storage format is used for the new partition (instead of existing partition schema and storage format).","label":0,"id":409193}
{"project":"presto-0.278","comment":"\/** * Gets the AccumuloConnector singleton, starting the MiniAccumuloCluster on initialization. * This singleton instance is required so all test cases access the same MiniAccumuloCluster. * * @return Accumulo connector *\/","label":0,"id":409194}
{"project":"presto-0.278","comment":"\/** * @param x in cartesian coordinate * @param y in cartesian coordinate * @param z in cartesian coordinate *\/","label":0,"id":409195}
{"project":"presto-0.278","comment":"\/\/ no need to call stage.transitionToSchedulingSplits() since there is no table splits","label":0,"id":409196}
{"project":"presto-0.278","comment":"\/\/ Single byte code points","label":0,"id":409197}
{"project":"presto-0.278","comment":"\/\/ Generate Pinot query:\/\/ - takes arguments of expressions\/table name\/limit clause;\/\/ - handles the common logic to generate where\/groupBy\/orderBy clauses.","label":0,"id":409198}
{"project":"presto-0.278","comment":"\/**     * Shape type codes from ERSI's specification     * https:\/\/www.esri.com\/library\/whitepapers\/pdfs\/shapefile.pdf     *\/","label":0,"id":409199}
{"project":"presto-0.278","comment":"\/\/ STAGE  S    ROWS    RPS  BYTES    BPS   QUEUED    RUN   DONE","label":0,"id":409200}
{"project":"presto-0.278","comment":"\/** * Kafka specific connector column handle. *\/","label":0,"id":409201}
{"project":"presto-0.278","comment":"\/** * A simplified table scan matcher for multiple-connector support. * The goal is to test plan structural matching rather than table scan details *\/","label":0,"id":409202}
{"project":"presto-0.278","comment":"\/**     * Reset the state of the serializer to prepare for a new set of entries with the same row ID.     *\/","label":0,"id":409203}
{"project":"presto-0.278","comment":"\/\/ For weight, we only consider size of hash, as PlanNodes are already in memory for running queries.","label":0,"id":409204}
{"project":"presto-0.278","comment":"\/**     * Compression method for ZIP entries.     *\/","label":0,"id":409205}
{"project":"presto-0.278","comment":"\/\/ column statistics, instead locally determine.","label":0,"id":409206}
{"project":"presto-0.278","comment":"\/\/ fixed width 0 is used for long repeating values.\/\/ sequences that require only 1 bit to encode will have an additional bit","label":0,"id":409207}
{"project":"presto-0.278","comment":"\/\/ Nested column","label":0,"id":409208}
{"project":"presto-0.278","comment":"\/\/ Must run before AddExchanges and after ReplicateSemiJoinInDelete","label":0,"id":409209}
{"project":"presto-0.278","comment":"\/\/ no op","label":0,"id":409210}
{"project":"presto-0.278","comment":"\/\/ Skip SchemaEvolution column","label":0,"id":409211}
{"project":"presto-0.278","comment":"\/\/ preGroupedSymbols reflect properties of the input. Splitting the aggregation and pushing partial aggregation","label":0,"id":409212}
{"project":"presto-0.278","comment":"\/\/ Only the first array is non-empty","label":0,"id":409213}
{"project":"presto-0.278","comment":"\/\/ test cases origins from TestUnionStatsRule","label":0,"id":409214}
{"project":"presto-0.278","comment":"\/\/ values and nulls in simple struct","label":0,"id":409215}
{"project":"presto-0.278","comment":"\/\/ add another buffer after finish","label":0,"id":409216}
{"project":"presto-0.278","comment":"\/\/ Add a selector for a non leaf group","label":0,"id":409217}
{"project":"presto-0.278","comment":"\/\/ the simulator should advance until memory is full","label":0,"id":409218}
{"project":"presto-0.278","comment":"\/\/ returns NaN for NaN input","label":0,"id":409219}
{"project":"presto-0.278","comment":"\/\/ We need to specialize BOOLEAN case because we can't specify filterRate by manipulating the filter value in getFilter.\/\/ Since the filters allows null, so all nulls would all be selected. To make the total selected positions equal to ( 1- filterRate) * positionCount,\/\/ we need to adapt the filterRate for non null values as follows:","label":0,"id":409220}
{"project":"presto-0.278","comment":"\/\/ load TrustStore if configured, otherwise use KeyStore","label":0,"id":409221}
{"project":"presto-0.278","comment":"\/**     * Gets the Short value of the given Presto column.     *     * @param name Column name     * @return Short value     *\/","label":0,"id":409222}
{"project":"presto-0.278","comment":"\/**     * return a list of partition names by which the values of each partition is at least     * contained which the {@code parts} argument     *     * @param databaseName database name     * @param tableName    table name     * @param parts        list of values which returned partitions should contain     * @return optionally, a list of strings where each entry is in the form of {key}={value}     *\/","label":0,"id":409223}
{"project":"presto-0.278","comment":"\/\/ Select all of the available partitions and load them into the cache","label":0,"id":409224}
{"project":"presto-0.278","comment":"\/** * Buffer for streaming. *\/","label":0,"id":409225}
{"project":"presto-0.278","comment":"\/\/ hack: java classes for types that can be used with magic literals","label":1,"id":409226}
{"project":"presto-0.278","comment":"\/** * The update logic is built with the following rules: * bounds is null => if any file has a missing bound for a column, that bound will not be reported * bounds is missing id => not reported in Parquet => that bound will not be reported * bound value is null => not an expected case * bound value is present => this is the normal case and bounds will be reported correctly *\/","label":0,"id":409227}
{"project":"presto-0.278","comment":"\/\/ This is for transactions with write.","label":0,"id":409228}
{"project":"presto-0.278","comment":"\/\/ Add null values so that the StreamReader nullVectors are not empty.","label":0,"id":409229}
{"project":"presto-0.278","comment":"\/\/ drop first view","label":0,"id":409230}
{"project":"presto-0.278","comment":"\/\/ if not non-deterministic, constant folding code accidentally fix invalid characters","label":0,"id":409231}
{"project":"presto-0.278","comment":"\/\/ * Each LookupOuterOperator count as 1","label":0,"id":409232}
{"project":"presto-0.278","comment":"\/\/ Asserting that calling construct_tdigest with the raw values","label":0,"id":409233}
{"project":"presto-0.278","comment":"\/\/ the fallback logic (in visitPlan) for node types we don't know about introduces a limit node,","label":0,"id":409234}
{"project":"presto-0.278","comment":"\/\/example.com\/path1\/p.php?k1=v1&k2=v2#Ref1\", \"http\", \"example.com\", null, \"\/path1\/p.php\", \"k1=v1&k2=v2\", \"Ref1\");","label":0,"id":409235}
{"project":"presto-0.278","comment":"\/\/ further requests will see a completed result","label":0,"id":409236}
{"project":"presto-0.278","comment":"\/\/ read compression","label":0,"id":409237}
{"project":"presto-0.278","comment":"\/\/ Summary String","label":0,"id":409238}
{"project":"presto-0.278","comment":"\/**     * Gets a slice with offset {@code offset} at {@code internalPosition - getOffsetBase()}.     *\/","label":0,"id":409239}
{"project":"presto-0.278","comment":"\/\/ Suppress race condition between test for existence and creation","label":0,"id":409240}
{"project":"presto-0.278","comment":"\/\/ The page supplier has incremented the page reference count, and addPages below also increments","label":0,"id":409241}
{"project":"presto-0.278","comment":"\/** * A point on the continuous space defined by the specified type. * Each point may be just below, exact, or just above the specified value according to the Bound. *\/","label":0,"id":409242}
{"project":"presto-0.278","comment":"\/\/ the `expected` Cast expression comes out of the AstBuilder with the `typeOnly` flag set to false.","label":0,"id":409243}
{"project":"presto-0.278","comment":"\/\/ a map of users to the columns per table that they access","label":0,"id":409244}
{"project":"presto-0.278","comment":"\/\/ Actual read will be 1 byte larger to ensure we encounter an EOF where expected","label":0,"id":409245}
{"project":"presto-0.278","comment":"\/\/ You can get concurrent tests with the same name when using @Factory.  Instead of adding complex support for\/\/ having multiple running tests with the same name, we simply don't use @Factory.","label":0,"id":409246}
{"project":"presto-0.278","comment":"\/\/ - Aggregation only query limit is ignored.","label":0,"id":409247}
{"project":"presto-0.278","comment":"\/\/ File system\/\/ For file system changes, only operations outside of writing paths (as specified in declared intentions to write)\/\/ need to MOVE_BACKWARD tasks scheduled. Files in writing paths are handled by rollbackShared().","label":0,"id":409248}
{"project":"presto-0.278","comment":"\/**     * Utility method to get the end times in decimal seconds that divide up the query into chunks     * The times will be used in queries to Prometheus like: `http:\/\/localhost:9090\/api\/v1\/query?query=up[21d]&time=1568229904.000\"`     * ** NOTE: Prometheus instant query wants the duration and end time specified.     * We use now() for the defaultUpperBound when none is specified, for instance, from predicate push down     *     * @param defaultUpperBound a LocalDateTime likely from PrometheusTimeMachine class for testability     * @return list of end times as decimal epoch seconds, like [\"1568053244.143\", \"1568926595.321\"]     *\/","label":0,"id":409249}
{"project":"presto-0.278","comment":"\/\/ We implemented replacementBlockForWrite, so we will never need to write a lazy block","label":0,"id":409250}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to create the specified table in this catalog.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":409251}
{"project":"presto-0.278","comment":"\/\/ no need to revoke","label":0,"id":409252}
{"project":"presto-0.278","comment":"\/**     * Subtracts subset stats from supersets stats.     * It is assumed that each NDV from subset has a matching NDV in superset.     *\/","label":0,"id":409253}
{"project":"presto-0.278","comment":"\/**     * During table scan, the illegal storage format for some specific table should not fail the whole table scan     *\/","label":0,"id":409254}
{"project":"presto-0.278","comment":"\/\/ of the view (e.g., if the underlying tables referenced by the view changed)","label":0,"id":409255}
{"project":"presto-0.278","comment":"\/**     * The grouping function is used in conjunction with GROUPING SETS, ROLLUP and CUBE to     * indicate which columns are present in that grouping.     *     * <p>The grouping function must be invoked with arguments that exactly match the columns     * referenced in the corresponding GROUPING SET, ROLLUP or CUBE clause at the associated     * query level. Those column arguments are not evaluated and instead the function is     * re-written with the arguments below.     *     * <p>To compute the resulting bit set for a particular row, bits are assigned to the     * argument columns with the rightmost column being the most significant bit. For a     * given grouping, a bit is set to 0 if the corresponding column is included in the     * grouping and 1 otherwise. For an example, see the SQL documentation for the     * function.     *     * @param columns The column arguments with which the function was invoked     * converted to ordinals with respect to the base table column ordering.     * @param groupingSet A collection containing the ordinals of the     * columns present in the grouping.     * @return A bit set converted to decimal indicating which columns are present in     * the grouping. If a column is NOT present in the grouping its corresponding     * bit is set to 1 and to 0 if the column is present in the grouping.     *\/","label":0,"id":409256}
{"project":"presto-0.278","comment":"\/** * Calculates sample entropy using jacknife estimates on a fixed histogram. * See http:\/\/cs.brown.edu\/~pvaliant\/unseen_nips.pdf. *\/","label":0,"id":409257}
{"project":"presto-0.278","comment":"\/\/ Drop function and alter function by name","label":0,"id":409258}
{"project":"presto-0.278","comment":"\/\/ MethodHandles are only used in MapBlock\/MapBlockBuilder,","label":0,"id":409259}
{"project":"presto-0.278","comment":"\/\/ notify finish listener outside of lock, since it may make a callback\/\/ NOTE: due the race in this method, the onFinish may be called multiple times\/\/ it is expected that the implementer handles this (which is why this source\/\/ is passed to the function)","label":0,"id":409260}
{"project":"presto-0.278","comment":"\/** * Test that the unreferenced output pruning works correctly when WindowNode is pruned as no downstream operators are consuming the window function output *\/","label":0,"id":409261}
{"project":"presto-0.278","comment":"\/\/ remove the memory usage for this group for now; add it back after update","label":0,"id":409262}
{"project":"presto-0.278","comment":"\/\/ It is caller's responsibility to create a copy if FileSystemFactory is used.","label":0,"id":409263}
{"project":"presto-0.278","comment":"\/\/ the analysis below. If the value is null, it means that we can't apply the HashSet","label":0,"id":409264}
{"project":"presto-0.278","comment":"\/\/ are we disabled?","label":0,"id":409265}
{"project":"presto-0.278","comment":"\/** * Factory for Kafka specific {@link RecordSet} instances. *\/","label":0,"id":409266}
{"project":"presto-0.278","comment":"\/\/ Both partitioned join and broadcast join should have the same raw input data set.","label":0,"id":409267}
{"project":"presto-0.278","comment":"\/\/ all null values in simple struct","label":0,"id":409268}
{"project":"presto-0.278","comment":"\/\/ Any class using Hashtables as a field (MapBlock, MapBlockBuilder) should not include this class's implementation as this is","label":0,"id":409269}
{"project":"presto-0.278","comment":"\/\/ The sample query has 2^30 leaf nodes in query plan, expect to timeout during plan statement phase.","label":0,"id":409270}
{"project":"presto-0.278","comment":"\/\/ remove last item due to a trailing slash","label":0,"id":409271}
{"project":"presto-0.278","comment":"\/\/ add exchange + push function to child","label":0,"id":409272}
{"project":"presto-0.278","comment":"\/\/ * DriverFactory are marked as noMoreDriver\/Operator for particular lifespans as soon as they can be:","label":0,"id":409273}
{"project":"presto-0.278","comment":"\/\/ end of the queue would be be an error, but this specific case is","label":0,"id":409274}
{"project":"presto-0.278","comment":"\/** * Data format to use (selects the decoder). Can be null. *\/","label":0,"id":409275}
{"project":"presto-0.278","comment":"\/\/ maxCompatibleBucketCount must be larger than or equal to smallerBucketCount","label":0,"id":409276}
{"project":"presto-0.278","comment":"\/\/ When the AfterBurner module is configured not to use the value classloader","label":0,"id":409277}
{"project":"presto-0.278","comment":"\/\/ either leftNDV or rightNDV is NaN","label":0,"id":409278}
{"project":"presto-0.278","comment":"\/**     * Use {@link #missingAttributeException(Expression, QualifiedName)} instead.     *\/","label":0,"id":409279}
{"project":"presto-0.278","comment":"\/\/ Keep track of number of elements for each groupId. This will later help us know the size of each","label":0,"id":409280}
{"project":"presto-0.278","comment":"\/\/ t1.val1 is in range [0, 1000)\/\/ t1.bucket is in [0, 1000)","label":0,"id":409281}
{"project":"presto-0.278","comment":"\/\/ Fetch grpc port from Pinot instance config.","label":0,"id":409282}
{"project":"presto-0.278","comment":"\/\/ SqlTime","label":0,"id":409283}
{"project":"presto-0.278","comment":"\/**     * check column access permissions for each table     * @param analysis the Analysis that needs to check ACL for     *\/","label":0,"id":409284}
{"project":"presto-0.278","comment":"\/\/ It should be added in STATS_PROPERTIES so that it can be skipped when","label":0,"id":409285}
{"project":"presto-0.278","comment":"\/\/ Synthesize identity assignments for the inputs of expressions that were inlined","label":0,"id":409286}
{"project":"presto-0.278","comment":"\/\/ if the split had a particularly long quanta, accrue time to each level as if it had run","label":0,"id":409287}
{"project":"presto-0.278","comment":"\/\/ Nothing to assert except that the digest is empty","label":0,"id":409288}
{"project":"presto-0.278","comment":"\/**     * Determines if this key property satisfies a key requirement.     * This is true if any of the keys in the collection satisfies the key requirement.     *     * @param keyRequirement     * @return True if keyRequirement is satisfied by this key property or False otherwise.     *\/","label":0,"id":409289}
{"project":"presto-0.278","comment":"\/\/ Error code range 0x0003 is reserved for Presto-on-Spark\/\/ See com.facebook.presto.spark.SparkErrorCode\/\/ Connectors can use error codes starting at the range 0x0100_0000\/\/ See https:\/\/github.com\/prestodb\/presto\/wiki\/Error-Codes","label":0,"id":409290}
{"project":"presto-0.278","comment":"\/\/ parallel arrays with data for","label":0,"id":409291}
{"project":"presto-0.278","comment":"\/** * Finish a table creation with data after the data is written. *\/","label":0,"id":409292}
{"project":"presto-0.278","comment":"\/\/ table commit requires that all data be in one stream","label":0,"id":409293}
{"project":"presto-0.278","comment":"\/\/ The encoding wrappings, can be comma separated strings for multiple level of encodings","label":0,"id":409294}
{"project":"presto-0.278","comment":"\/**     * Reserves the given number of bytes. Caller should wait on the returned future, before allocating more memory.     *\/","label":0,"id":409295}
{"project":"presto-0.278","comment":"\/**     * Creates a Base32 codec used for decoding and encoding.     * <p>     * When encoding the line length is given in the constructor, the line separator is CRLF.     * <\/p>     *     * @param lineLength Each line of encoded data will be at most of the given length (rounded down to nearest multiple of     * 8). If lineLength &lt;= 0, then the output will not be divided into lines (chunks). Ignored when     * decoding.     *\/","label":0,"id":409296}
{"project":"presto-0.278","comment":"\/\/ ignore request for start past end of object","label":0,"id":409297}
{"project":"presto-0.278","comment":"\/\/ 1 byte to denote if null + 4 bytes to denote offset","label":0,"id":409298}
{"project":"presto-0.278","comment":"\/** * Commits page sink for table insertion. *\/","label":0,"id":409299}
{"project":"presto-0.278","comment":"\/\/ always use localNode as coordinator","label":0,"id":409300}
{"project":"presto-0.278","comment":"\/\/ US\/Pacific-New removed http:\/\/mm.icann.org\/pipermail\/tz-announce\/2020-October\/000059.html","label":0,"id":409301}
{"project":"presto-0.278","comment":"\/\/ ------------------Test First Half Sizes---------------------------------------------------","label":0,"id":409302}
{"project":"presto-0.278","comment":"\/\/abc\").put(\"fragment-result-cache.block-encoding-compression-enabled\", \"true\").put(\"fragment-result-cache.max-cached-entries\", \"100000\").put(\"fragment-result-cache.cache-ttl\", \"1d\").put(\"fragment-result-cache.max-in-flight-size\", \"2GB\").put(\"fragment-result-cache.max-single-pages-size\", \"200MB\").put(\"fragment-result-cache.max-cache-size\", \"200GB\").build();","label":0,"id":409303}
{"project":"presto-0.278","comment":"\/\/ MAJOR HACK: if searchFunction is of shape `f(probe) > build_symbol` it is not fit for binary search below,\/\/ but it does not imply extra constraints on start position; so we just ignore it.\/\/ It does not break logic for `f(probe) < build_symbol` as the binary search below would return same value.\/\/ todo: Explicitly handle less-than and greater-than functions separately.","label":1,"id":409304}
{"project":"presto-0.278","comment":"\/\/ ignore pages after finish","label":0,"id":409305}
{"project":"presto-0.278","comment":"\/\/ based on session properties","label":0,"id":409306}
{"project":"presto-0.278","comment":"\/\/ However, if these 100 million objects are combined with 10 different sizes, the collision rate is around 0.1%.","label":0,"id":409307}
{"project":"presto-0.278","comment":"\/\/ retain their original (maybe intermixed) order from the input predicate. However, this is not implemented yet.","label":1,"id":409308}
{"project":"presto-0.278","comment":"\/\/ run ANALYZE","label":0,"id":409309}
{"project":"presto-0.278","comment":"\/\/ This should test missing at the root level","label":0,"id":409310}
{"project":"presto-0.278","comment":"\/\/ Invalid calls: zoom level out of range","label":0,"id":409311}
{"project":"presto-0.278","comment":"\/** * Invoked when a probe operator factory indicates that it will not * create any more operators, for any lifespan. * <p> * It is expected that this method will only be invoked after * {@link #probeOperatorFactoryClosed(Lifespan)} has been invoked * for every known lifespan. *\/","label":0,"id":409312}
{"project":"presto-0.278","comment":"\/\/ to extracting hashes on the fly in the loop below.","label":0,"id":409313}
{"project":"presto-0.278","comment":"\/**     * Number of concurrently running queries after which new queries will only run if     * all peer resource groups below their soft limits are ineligible or if all     * eligible peers are above soft limits.     *\/","label":0,"id":409314}
{"project":"presto-0.278","comment":"\/\/ Use the original serialized block as the underlying block for the state to save object creation overhead","label":0,"id":409315}
{"project":"presto-0.278","comment":"\/\/ adding column on table, simulates dropping a column on partition","label":0,"id":409316}
{"project":"presto-0.278","comment":"\/\/ The block after peeling off the Dictionary or RLE wrappings.","label":0,"id":409317}
{"project":"presto-0.278","comment":"\/\/ TODO: Deprecate compatible table partitioning","label":1,"id":409318}
{"project":"presto-0.278","comment":"\/\/ Build the nested block of size offsets[positionCount].","label":0,"id":409319}
{"project":"presto-0.278","comment":"\/\/ Done serializing rows, so flush and close the writer and indexer","label":0,"id":409320}
{"project":"presto-0.278","comment":"\/\/ 0: LongArrayBlock 1: VariableWidthBlock","label":0,"id":409321}
{"project":"presto-0.278","comment":"\/\/ There is a perf penalty of having a large topN since the structures are allocated to this size","label":0,"id":409322}
{"project":"presto-0.278","comment":"\/\/ A white-list is used to select types eligible for DIRECT_SWITCH.","label":0,"id":409323}
{"project":"presto-0.278","comment":"\/\/ short short -> short","label":0,"id":409324}
{"project":"presto-0.278","comment":"\/\/ For now heuristically pick sort expression which has most search expressions assigned to it.\/\/ TODO: make it cost based decision based on symbol statistics","label":1,"id":409325}
{"project":"presto-0.278","comment":"\/\/ extra credentials and authenticator for Presto-on-Spark","label":0,"id":409326}
{"project":"presto-0.278","comment":"\/\/ at this point, Task1 = 3 total bytes, Task2 = 2 total bytes\/\/ this ensures that we are waiting for the memory revocation listener and not using polling-based revoking","label":0,"id":409327}
{"project":"presto-0.278","comment":"\/\/ when Redis key string follows \"schema:table:*\" format\/\/ scan command can efficiently query tables\/\/ by returning matching keys\/\/ the alternative is to set key-prefix-schema-table to false\/\/ and treat entire redis as single schema , single table\/\/ redis Hash\/Set types are to be supported - they can also be\/\/ used to filter out table data\/\/ \"default\" schema is not prefixed to the key","label":0,"id":409328}
{"project":"presto-0.278","comment":"\/\/ An alternative is calling getLongValue and then BigintOperators.castToDouble.","label":0,"id":409329}
{"project":"presto-0.278","comment":"\/\/ TODO timestamp is not correctly read (see comment in StandardReadMappings.timestampReadMapping), but testing this is hard because of #7122","label":1,"id":409330}
{"project":"presto-0.278","comment":"\/**     * For shards and delta     *     * Insert into `shards`                         for both shards and delta shards     * Insert into `shard_nodes`  (non-bucketed)    for both shards and delta shards     * Insert into index table                      only for shards     *\/","label":0,"id":409331}
{"project":"presto-0.278","comment":"\/\/ hiveColumnIndex value does not matter in this test","label":0,"id":409332}
{"project":"presto-0.278","comment":"\/\/ t1_a -> t1.a is direct mapped","label":0,"id":409333}
{"project":"presto-0.278","comment":"\/** * Gets a byte value at {@code internalPosition - getOffsetBase()}. *\/","label":0,"id":409334}
{"project":"presto-0.278","comment":"\/\/ Test table does not exist","label":0,"id":409335}
{"project":"presto-0.278","comment":"\/\/ hack to work around the metastore not being configured for S3 or other FS","label":1,"id":409336}
{"project":"presto-0.278","comment":"\/\/ Map<VariableReferenceExpression, RowExpression> stores the candidate IF expressions for rewrite.","label":0,"id":409337}
{"project":"presto-0.278","comment":"\/** * Determines whether a given Expression is deterministic * * @deprecated Use {@link com.facebook.presto.sql.relational.RowExpressionDeterminismEvaluator} *\/","label":1,"id":409338}
{"project":"presto-0.278","comment":"\/\/ Returns the estimated memory increase in map","label":0,"id":409339}
{"project":"presto-0.278","comment":"\/* 16:39:07 = 01:39:07 - +01:00 shift + Bahia_Banderas's shift (-8) (modulo 24h which we \"un-modulo\" below) *\/","label":0,"id":409340}
{"project":"presto-0.278","comment":"\/\/ TODO: implement masking based on maskChannel field once Window Functions support DISTINCT arguments to the functions.","label":1,"id":409341}
{"project":"presto-0.278","comment":"\/\/ 9:   296801082 -> entry3 -> node3","label":0,"id":409342}
{"project":"presto-0.278","comment":"\/\/ Always map a trivial symbol projection","label":0,"id":409343}
{"project":"presto-0.278","comment":"\/\/ non partition tables","label":0,"id":409344}
{"project":"presto-0.278","comment":"\/\/ FileHiveMetastore has various incompatibilities","label":0,"id":409345}
{"project":"presto-0.278","comment":"\/\/ Set only at the deepest level","label":0,"id":409346}
{"project":"presto-0.278","comment":"\/** * Converts the given String into a Java object based on the given Presto type * * @param str String to convert * @param type Presto Type * @return Java object * @throws PrestoException If the type is not supported by this function *\/","label":0,"id":409347}
{"project":"presto-0.278","comment":"\/\/ t.a is not a \"constant\" column, group by does not guarantee single row per correlated subquery","label":0,"id":409348}
{"project":"presto-0.278","comment":"\/\/ table is under half full, e.g. 127 elements gets 256 slots.","label":0,"id":409349}
{"project":"presto-0.278","comment":"\/\/ This helper method would check if the provided sql could generate the same leaf canonical plan fragment when it appears\/\/ at two sides of UNION ALL. The provided sql should only contain queries that don't have subplan fanout like JOIN.","label":0,"id":409350}
{"project":"presto-0.278","comment":"\/\/ Client should have sent 16 requests for a single page (0) and gotten them back","label":0,"id":409351}
{"project":"presto-0.278","comment":"\/\/ Calculation of getRegionSizeInBytes is expensive in this class.\/\/ On the other hand, getSizeInBytes result is cached.","label":0,"id":409352}
{"project":"presto-0.278","comment":"\/\/ having only a min or max should work","label":0,"id":409353}
{"project":"presto-0.278","comment":"\/**         * Matches only if WindowNode.getHashVariable() is a non-empty option containing hashVariable.         *\/","label":0,"id":409354}
{"project":"presto-0.278","comment":"\/\/ Materialized view fetched from Hive Metastore uses TableType.MANAGED_TABLE before Hive 3.0. Cast it back to MATERIALIZED_VIEW here.","label":0,"id":409355}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to create a view that selects from the specified columns in a relation. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":409356}
{"project":"presto-0.278","comment":"\/\/ Disabling partial pre-aggregation memory limit effectively","label":0,"id":409357}
{"project":"presto-0.278","comment":"\/\/ Only verify names here as filter expression would contain type cast, which will be translated to an non-existent variable in","label":0,"id":409358}
{"project":"presto-0.278","comment":"\/\/ write the header","label":0,"id":409359}
{"project":"presto-0.278","comment":"\/\/ Test Logical properties generated for the TopN node. It updates the MaxCardProperty from the source properties.","label":0,"id":409360}
{"project":"presto-0.278","comment":"\/** * The PrestoSparkTaskExecution is a simplified version of SqlTaskExecution. * It doesn't support grouped execution that is not needed on Presto on Spark. * Unlike the SqlTaskExecution the PrestoSparkTaskExecution does not require * the output buffer to be drained to mark the task as finished. As long as * all driver as finished the task execution is marked as finished. That allows to * have more control over the output Iterator lifecycle in the PrestoSparkTaskExecutor *\/","label":0,"id":409361}
{"project":"presto-0.278","comment":"\/\/\/\/ Invoke dynamic\/\/","label":0,"id":409362}
{"project":"presto-0.278","comment":"\/\/ Verify the manifest version","label":0,"id":409363}
{"project":"presto-0.278","comment":"\/\/ TODO: support this","label":1,"id":409364}
{"project":"presto-0.278","comment":"\/\/ ratio must be power of two","label":0,"id":409365}
{"project":"presto-0.278","comment":"\/\/ valuesNode should be the Build side","label":0,"id":409366}
{"project":"presto-0.278","comment":"\/\/ No remote function","label":0,"id":409367}
{"project":"presto-0.278","comment":"\/\/ We expect the following events","label":0,"id":409368}
{"project":"presto-0.278","comment":"\/\/ RCBinary interprets empty VARCHAR as nulls","label":0,"id":409369}
{"project":"presto-0.278","comment":"\/\/ Set max task time = timeMultiplier x time taken to reach minCompletionRatioThreshold","label":0,"id":409370}
{"project":"presto-0.278","comment":"\/** * Get total physical size of all tables in a distribution. *\/","label":0,"id":409371}
{"project":"presto-0.278","comment":"\/** * @return a set of reference expressions which cannot be resolved within this plan. For plan representing: * SELECT a, b FROM (VALUES 1) T(a). It will return a set containing single expression reference to 'b'. *\/","label":0,"id":409372}
{"project":"presto-0.278","comment":"\/\/ must include the row block overhead in addition to the per position size in bytes","label":0,"id":409373}
{"project":"presto-0.278","comment":"\/**     * Loads the cardinality for the given Range. Uses a BatchScanner and sums the cardinality for all values that encapsulate the Range.     *     * @param key Range to get the cardinality for     * @return The cardinality of the column, which would be zero if the value does not exist     *\/","label":0,"id":409374}
{"project":"presto-0.278","comment":"\/\/ SerDe is not applicable for PAGEFILE","label":0,"id":409375}
{"project":"presto-0.278","comment":"\/\/ force gather","label":0,"id":409376}
{"project":"presto-0.278","comment":"\/\/ The build\/right side needs to buffer fully for this JOIN, but the probe\/left side will still stream through.","label":0,"id":409377}
{"project":"presto-0.278","comment":"\/\/ this.state.set(requireNonNull(newState, \"newState is null\"));","label":0,"id":409378}
{"project":"presto-0.278","comment":"\/\/ mix functions","label":0,"id":409379}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to show current roles on the specified catalog.     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":409380}
{"project":"presto-0.278","comment":"\/\/ INVARIANT: maxcard is set to K (by Values or Filter) and TopN and\/or Limit comes along and tries to set it to N<K. Should still be set to N.","label":0,"id":409381}
{"project":"presto-0.278","comment":"\/\/\/\/ Debug\/\/","label":0,"id":409382}
{"project":"presto-0.278","comment":"\/\/ Only keeps the first given `weights` due to maintaining the\/\/ selected index for weighted round-robin.","label":0,"id":409383}
{"project":"presto-0.278","comment":"\/\/VOL1:9000\/db_name\/table_name\", \"com.facebook.hive.orc.OrcInputFormat\", \"com.facebook.hive.orc.OrcOutputFormat\", false, 100, new SerDeInfo(\"table_name\", \"com.facebook.hive.orc.OrcSerde\", ImmutableMap.of(\"sdk1\", \"sdv1\", \"sdk2\", \"sdv2\")), ImmutableList.of(\"col2\", \"col3\"), ImmutableList.of(new Order(\"col2\", 1)), ImmutableMap.of());","label":0,"id":409384}
{"project":"presto-0.278","comment":"\/\/ only page 2 is not removed","label":0,"id":409385}
{"project":"presto-0.278","comment":"\/\/ partitioned on (k_1, k_2, ..., k_n) => partitioned on (k_1, k_2, ..., k_n, k_n+1, ...)","label":0,"id":409386}
{"project":"presto-0.278","comment":"\/\/ 2nd column (1010), Dictionary (300), Present (10), Data(600), Length(100)","label":0,"id":409387}
{"project":"presto-0.278","comment":"\/** * Create a row block directly from columnar nulls and field blocks. *\/","label":0,"id":409388}
{"project":"presto-0.278","comment":"\/\/ Subscript on Row hasn't got a dedicated operator. It is interpreted by hand.","label":0,"id":409389}
{"project":"presto-0.278","comment":"\/\/ Collect candidate IF expressions in assignments","label":0,"id":409390}
{"project":"presto-0.278","comment":"\/\/ optimize should do nothing","label":0,"id":409391}
{"project":"presto-0.278","comment":"\/\/ The ArrayAllocator used by BlockFlattener for decoding blocks.\/\/ There could be queries that shuffles data with up to 1000 columns so we need to set the maxOutstandingArrays a high number.","label":0,"id":409392}
{"project":"presto-0.278","comment":"\/*     * Return a new SymbolAliases that contains a map with the original bindings     * updated based on assignments given that assignments is a map of     * newSymbol := oldSymbolReference.     *     * INCLUDE aliases for SymbolReferences that aren't in assignments.values()     *     * Example:     * SymbolAliases = { \"ALIAS1\": SymbolReference(\"foo\"), \"ALIAS2\": SymbolReference(\"bar\")}     * updateAssignments({\"baz\": SymbolReference(\"foo\")})     * returns a new     * SymbolAliases = { \"ALIAS1\": SymbolReference(\"baz\"), \"ALIAS2\": SymbolReference(\"bar\")}     *\/","label":0,"id":409393}
{"project":"presto-0.278","comment":"\/\/ no matching schema","label":0,"id":409394}
{"project":"presto-0.278","comment":"\/\/ * Remember we will need to delete the location of the old partition at the end if transaction successfully commits","label":0,"id":409395}
{"project":"presto-0.278","comment":"\/\/ if the stripe is big enough to flush, stop before we hit the absolute max, so we are","label":0,"id":409396}
{"project":"presto-0.278","comment":"\/**     * Test BlockFlattener's allocator does not return borrowed arrays among blocks     *\/","label":0,"id":409397}
{"project":"presto-0.278","comment":"\/\/ Set any locality groups on the data table","label":0,"id":409398}
{"project":"presto-0.278","comment":"\/\/ positive","label":0,"id":409399}
{"project":"presto-0.278","comment":"\/\/ 2**63-1","label":0,"id":409400}
{"project":"presto-0.278","comment":"\/\/ were removed (minus one):","label":0,"id":409401}
{"project":"presto-0.278","comment":"\/**         * Position where next character should be written in the buffer.         *\/","label":0,"id":409402}
{"project":"presto-0.278","comment":"\/\/ - c covers b;","label":0,"id":409403}
{"project":"presto-0.278","comment":"\/\/ TODO: add adaptations so these will pass","label":1,"id":409404}
{"project":"presto-0.278","comment":"\/\/ * Adapt the method signature when necessary (for example, when the parameter type or return type is declared as Object).","label":0,"id":409405}
{"project":"presto-0.278","comment":"\/\/ Map from output Variables to source Variables","label":0,"id":409406}
{"project":"presto-0.278","comment":"\/\/ The times for both read and write are empty since neither read nor write is involved.","label":0,"id":409407}
{"project":"presto-0.278","comment":"\/\/ U+10000 to U+10FFFF","label":0,"id":409408}
{"project":"presto-0.278","comment":"\/\/ disabled because test takes almost 10s","label":0,"id":409409}
{"project":"presto-0.278","comment":"\/** * Encapsulates normalization of the key property in alignment with equivalence class property, * and possible setting of max card property if a one record condition is detected. * The key property is modified. Maxcard will be modified if a one record condition is detected. *\/","label":0,"id":409410}
{"project":"presto-0.278","comment":"\/** * This class exists to force the creation of a jar for the presto-thrift-spec module. * This is needed to deploy the presto-thrift-spec module to Nexus. *\/","label":0,"id":409411}
{"project":"presto-0.278","comment":"\/** * Splits a logical plan into fragments that can be shipped and executed on distributed nodes *\/","label":0,"id":409412}
{"project":"presto-0.278","comment":"\/\/ parse in time zone of client","label":0,"id":409413}
{"project":"presto-0.278","comment":"\/** * Fixed-bucket histogram of weights. For each bucket, it stores the total weights it accrued. *\/","label":0,"id":409414}
{"project":"presto-0.278","comment":"\/\/ To force the task to be scheduled we create a PrestoSparkTaskSourceRdd that contains exactly one partition.","label":0,"id":409415}
{"project":"presto-0.278","comment":"\/\/ TODO: this should use GROUPING() instead of relying on specific group numbering","label":1,"id":409416}
{"project":"presto-0.278","comment":"\/** * Given plan hashes and corresponding statistics after a query is run, store them for future retrieval. *\/","label":0,"id":409417}
{"project":"presto-0.278","comment":"\/\/ Semi join","label":0,"id":409418}
{"project":"presto-0.278","comment":"\/\/ * Even if `splitSource.isFinished()` return true, it is not necessarily safe to tear down the split source.","label":0,"id":409419}
{"project":"presto-0.278","comment":"\/\/ Trace the index join variables to the index source lookup variables","label":0,"id":409420}
{"project":"presto-0.278","comment":"\/** * Writes data to the output. The output must be exactly * {@link #size()} bytes. *\/","label":0,"id":409421}
{"project":"presto-0.278","comment":"\/\/ can not fail on first failure","label":0,"id":409422}
{"project":"presto-0.278","comment":"\/\/ normal table","label":0,"id":409423}
{"project":"presto-0.278","comment":"\/\/ if task has less than the minimum guaranteed splits running,","label":0,"id":409424}
{"project":"presto-0.278","comment":"\/\/ expressions that are in the inlining targets list.","label":0,"id":409425}
{"project":"presto-0.278","comment":"\/** * @throws UnsupportedOperationException if this connector does not support connector type serde *\/","label":0,"id":409426}
{"project":"presto-0.278","comment":"\/\/ When present stream is null, there are no nulls in the Column. The filter is no-op","label":0,"id":409427}
{"project":"presto-0.278","comment":"\/\/ members are projected by the aggregation node.","label":0,"id":409428}
{"project":"presto-0.278","comment":"\/\/ (999L, MICROSECONDS),        \"1970-01-01 00:00:00.999\"","label":0,"id":409429}
{"project":"presto-0.278","comment":"\/\/localhost:8080?extraCredentials=\", \"Connection property 'extraCredentials' value is empty\");","label":0,"id":409430}
{"project":"presto-0.278","comment":"\/\/ catalog session properties can not be validated until the transaction has stated, so we delay system property validation also","label":0,"id":409431}
{"project":"presto-0.278","comment":"\/\/ TODO: will merge BigQueryEmptySplitPageSource into BigQueryResultPageSource to simplify the logic","label":1,"id":409432}
{"project":"presto-0.278","comment":"\/\/ write the post script","label":0,"id":409433}
{"project":"presto-0.278","comment":"\/\/ however, a discrete distribution should return an integer, not something in between","label":0,"id":409434}
{"project":"presto-0.278","comment":"\/** * Gets only the visible fields. * No assumptions should be made about the order of the fields returned from this method. * To obtain the index of a field, call indexOf. *\/","label":0,"id":409435}
{"project":"presto-0.278","comment":"\/\/ no 'unsupported_column'","label":0,"id":409436}
{"project":"presto-0.278","comment":"\/\/ Trigger a process through getOutput() or needsInput()","label":0,"id":409437}
{"project":"presto-0.278","comment":"\/\/ Union hanging bug: https:\/\/github.com\/Esri\/geometry-api-java\/issues\/266","label":0,"id":409438}
{"project":"presto-0.278","comment":"\/\/ There are remote projections, but the previous stage is local, so merge them","label":0,"id":409439}
{"project":"presto-0.278","comment":"\/\/ ROUND long DECIMAL -> short DECIMAL","label":0,"id":409440}
{"project":"presto-0.278","comment":"\/\/ todo get rid of that and only use revocable memory","label":1,"id":409441}
{"project":"presto-0.278","comment":"\/** * Integrations tests for various optimization (such as filter pushdown, nested column project\/filter pushdown etc) * that speed up reading data from Delta tables. *\/","label":0,"id":409442}
{"project":"presto-0.278","comment":"\/** * @return the underlying valueIsNull array, or null when all values are guaranteed to be non-null *\/","label":0,"id":409443}
{"project":"presto-0.278","comment":"\/\/ ORDER BY requires output fields, groups and translated aggregations to be visible for queries with aggregation","label":0,"id":409444}
{"project":"presto-0.278","comment":"\/\/ the challenge, but this doesn't help as most clients pre-authenticate.","label":0,"id":409445}
{"project":"presto-0.278","comment":"\/\/ For this to works, locations must never be added after is closed is set","label":0,"id":409446}
{"project":"presto-0.278","comment":"\/\/ Same unprocessableExpression means that we can do more extraction\/\/ If both sides are operating on the same single symbol","label":0,"id":409447}
{"project":"presto-0.278","comment":"\/**     * Gets future status for the task after the state changes from     * {@code current state}. If the task has not been created yet, an     * uninitialized task is created and the future is returned.  If the task     * is already in a final state, the status is returned immediately.     * <p>     * NOTE: this design assumes that only tasks that will eventually exist are     * queried.     *\/","label":0,"id":409448}
{"project":"presto-0.278","comment":"\/\/ aren't they so fancy","label":0,"id":409449}
{"project":"presto-0.278","comment":"\/\/ Row ID = column value","label":0,"id":409450}
{"project":"presto-0.278","comment":"\/\/ These tables have too few rows to benefit from parallel processing","label":0,"id":409451}
{"project":"presto-0.278","comment":"\/\/ Freeing zero bytes is a no-op","label":0,"id":409452}
{"project":"presto-0.278","comment":"\/\/ common type for symbol and value","label":0,"id":409453}
{"project":"presto-0.278","comment":"\/\/ Assert logicalSize for the whole block. Note that copyBlockViaBlockSerde would flatten DictionaryBlock or RleBlock","label":0,"id":409454}
{"project":"presto-0.278","comment":"\/\/ group1 has a weight of 1 and group2 has a weight of 2, so group2 should account for (2 \/ (1 + 2)) of the queries.\/\/ since this is stochastic, we check that the result of 1000 trials are 2\/3 with 99.9999% confidence","label":0,"id":409455}
{"project":"presto-0.278","comment":"\/\/ A query is rewritten to either an Insert or a CreateTableAsSelect","label":0,"id":409456}
{"project":"presto-0.278","comment":"\/\/ added to this staging area. This staging area will be drained asynchronously. That's when","label":0,"id":409457}
{"project":"presto-0.278","comment":"\/\/ the average row size: averageRowSize * the number of rows: positionCount","label":0,"id":409458}
{"project":"presto-0.278","comment":"\/** * This exception is for stopping retries for S3 Select calls that shouldn't be retried. * For example, \"Caused by: com.amazonaws.services.s3.model.AmazonS3Exception: Forbidden (Service: Amazon S3; Status Code: 403 ...\" *\/","label":0,"id":409459}
{"project":"presto-0.278","comment":"\/\/ Adapted from io.airlift.slice.Slice","label":0,"id":409460}
{"project":"presto-0.278","comment":"\/\/ ignore pages after no more pages is set","label":0,"id":409461}
{"project":"presto-0.278","comment":"\/\/ There is a chance of the files to be deleted are being read.\/\/ We may just fail the cache hit and do it in a simple way given the chance is low.","label":0,"id":409462}
{"project":"presto-0.278","comment":"\/\/ if fixed run length is greater than threshold then it will be fixed","label":0,"id":409463}
{"project":"presto-0.278","comment":"\/\/ Don't traverse into Subqueries within an Expression","label":0,"id":409464}
{"project":"presto-0.278","comment":"\/\/ 0 or 2+ colons.  Bare hostname or IPv6 literal.","label":0,"id":409465}
{"project":"presto-0.278","comment":"\/\/ transform the map key into string for use as JSON object key","label":0,"id":409466}
{"project":"presto-0.278","comment":"\/** * @param collectKeyStats - if true the builder will collect key entries and produce MapColumnStatistics, * if false the builder won't collect key entries and will produce generic ColumnStatistics *\/","label":0,"id":409467}
{"project":"presto-0.278","comment":"\/\/ Dividing by 10 million milliseconds, so the tests will have the same seed","label":0,"id":409468}
{"project":"presto-0.278","comment":"\/\/ constant literal versus a subquery","label":0,"id":409469}
{"project":"presto-0.278","comment":"\/**     * @param callMaker Always validates the function call     * @param functionHandle Optionally validates the function handle     * @param frameMaker Optionally validates the frame     *\/","label":0,"id":409470}
{"project":"presto-0.278","comment":"\/\/ TODO: do we need a full function call? (nullability checks, etc)","label":1,"id":409471}
{"project":"presto-0.278","comment":"\/\/ Clean up root temp directories","label":0,"id":409472}
{"project":"presto-0.278","comment":"\/\/ only do this a few times, since computing the cardinality is currently not","label":0,"id":409473}
{"project":"presto-0.278","comment":"\/\/ note there is no reason to add the run values to the buffer since it is not used\/\/ when in a run length sequence","label":0,"id":409474}
{"project":"presto-0.278","comment":"\/\/ TODO: Hack to make TPCH connector work","label":1,"id":409475}
{"project":"presto-0.278","comment":"\/**     * Initiate spilling of pages stream. Returns back serialized     * storage handle which identifies the spill file     *\/","label":0,"id":409476}
{"project":"presto-0.278","comment":"\/* Presto Materialized View *\/","label":0,"id":409477}
{"project":"presto-0.278","comment":"\/\/ the column value will be null","label":0,"id":409478}
{"project":"presto-0.278","comment":"\/\/ and there is no performance gain from storing full hashes","label":0,"id":409479}
{"project":"presto-0.278","comment":"\/\/ Todo: 1) The stream.slice() in both MultiBufferInputStream and SingleBufferInputStream will clone the memory.\/\/ Need to check how much the memory consumption goes up. Since we skip reading pages, that would reduce\/\/ a lot of memory consumption and compensate.\/\/ 2) It adds exception IOException. It is OK because eventually it rewinds to readAllPages() which\/\/ already has IOException","label":1,"id":409480}
{"project":"presto-0.278","comment":"\/\/ Test Timestamp","label":0,"id":409481}
{"project":"presto-0.278","comment":"\/\/ initial read was not large enough, so read missing section","label":0,"id":409482}
{"project":"presto-0.278","comment":"\/\/ This can happen in two cases:","label":0,"id":409483}
{"project":"presto-0.278","comment":"\/\/ TODO: add RowExpression support","label":1,"id":409484}
{"project":"presto-0.278","comment":"\/\/ For each channel within the page, i.e. column","label":0,"id":409485}
{"project":"presto-0.278","comment":"\/**     * @return true if more pages may be produced; false otherwise     *\/","label":0,"id":409486}
{"project":"presto-0.278","comment":"\/*                 * If the actual value is a value list, but the expected is e.g. a SymbolReference,                 * we need to unpack the value from the list so that when we hit visitSymbolReference, the                 * actual.toString() call returns something that the symbolAliases expectedly contains.                 * For example, InListExpression.toString returns \"(onlyitem)\" rather than \"onlyitem\".                 *                 * This is required because expected passes through the analyzer, planner, and possibly optimizers,                 * one of which sometimes takes the liberty of unpacking the InListExpression.                 *                 * Since the actual value doesn't go through all of that, we have to deal with the case                 * of the expected value being unpacked, but the actual value being an InListExpression.                 *\/","label":0,"id":409487}
{"project":"presto-0.278","comment":"\/\/ show no decimals -- we have enough digits in the integer part","label":0,"id":409488}
{"project":"presto-0.278","comment":"\/\/ processor finishes computations (yield signal is still on, but previous process() call yielded)","label":0,"id":409489}
{"project":"presto-0.278","comment":"\/\/ [33]","label":0,"id":409490}
{"project":"presto-0.278","comment":"\/**     * Enforce query output size limits     *\/","label":0,"id":409491}
{"project":"presto-0.278","comment":"\/\/ splits from unbucketed table","label":0,"id":409492}
{"project":"presto-0.278","comment":"\/**     * Gets a set of locality groups that should be added to the index table (not the metrics table).     *     * @param table Table for the locality groups, see AccumuloClient#getTable     * @return Mapping of locality group to column families in the locality group, 1:1 mapping in     * this case     *\/","label":0,"id":409493}
{"project":"presto-0.278","comment":"\/\/ UserGroupInformation.authenticationMethod static field must be set to KERBEROS","label":0,"id":409494}
{"project":"presto-0.278","comment":"\/\/ so we don't need to wait for no-more-buffers to finish the buffer.","label":0,"id":409495}
{"project":"presto-0.278","comment":"\/\/ TODO: split this method into two: createPartitionedDriverRunner and createUnpartitionedDriverRunner.\/\/ The former will take two arguments, and the latter will take one. This will simplify the signature quite a bit.","label":1,"id":409496}
{"project":"presto-0.278","comment":"\/**     * Build Flatbush RTree for `items` with default number of children per node.     * <p>     * This will use the default degree.     *     * @param items Items to index.     *\/","label":0,"id":409497}
{"project":"presto-0.278","comment":"\/\/ !isPresent() indicates the property was satisfied completely","label":0,"id":409498}
{"project":"presto-0.278","comment":"\/\/ Optimized writer will drop the file","label":0,"id":409499}
{"project":"presto-0.278","comment":"\/\/ write the tail smaller than maxBufferSize to the buffer","label":0,"id":409500}
{"project":"presto-0.278","comment":"\/\/ make sure invokeExact will not take uninitialized keys during compile time\/\/ but if we reach this point during runtime, it is an exception\/\/ also close the block builder before throwing as we may be in a TRY() call\/\/ so that subsequent calls do not find it in an inconsistent state","label":0,"id":409501}
{"project":"presto-0.278","comment":"\/\/ For each indexed column","label":0,"id":409502}
{"project":"presto-0.278","comment":"\/\/ was already called for this node when fetching materialized view status","label":0,"id":409503}
{"project":"presto-0.278","comment":"\/** * Gets the values at the specified position as a single element page.  The method creates independent * copy of the data. *\/","label":0,"id":409504}
{"project":"presto-0.278","comment":"\/**     * Drop the given table from HMS     *\/","label":0,"id":409505}
{"project":"presto-0.278","comment":"\/\/ the probe covers some sequential positions","label":0,"id":409506}
{"project":"presto-0.278","comment":"\/\/ Transactional commit is not supported yet.","label":0,"id":409507}
{"project":"presto-0.278","comment":"\/\/ Invalid Polygon (duplicated point)","label":0,"id":409508}
{"project":"presto-0.278","comment":"\/\/ now create the same file but with the specifically configured cache\/\/ size to fit data only for two stripes","label":0,"id":409509}
{"project":"presto-0.278","comment":"\/\/ Simulate fallback to plain encoding e.g. too many unique entries","label":0,"id":409510}
{"project":"presto-0.278","comment":"\/\/ However, RelationPlanner.visitUnnest and visitValues invokes evaluateConstantExpression.","label":0,"id":409511}
{"project":"presto-0.278","comment":"\/\/ sorting of B,D,A,C descending should result in D,C,B,A but when swap is applied to adjacent windows only without recursions, then:","label":0,"id":409512}
{"project":"presto-0.278","comment":"\/\/ test decoding using default field decoder","label":0,"id":409513}
{"project":"presto-0.278","comment":"\/** * The ZAddressRange class contains a minimum and maximum address. Both are inclusive. *\/","label":0,"id":409514}
{"project":"presto-0.278","comment":"\/\/ TODO This is a hack. Engine should provide an API for connectors to overwrite functions. Connector should not hard code the builtin function namespace.","label":1,"id":409515}
{"project":"presto-0.278","comment":"\/\/ ignore errors reading keyboard input","label":0,"id":409516}
{"project":"presto-0.278","comment":"\/\/ temporal_column","label":0,"id":409517}
{"project":"presto-0.278","comment":"\/\/ For partitioned table, there should be nothing directly under this directory.\/\/ But including this location in the set makes the directory content assert more\/\/ extensive, which is desirable.","label":0,"id":409518}
{"project":"presto-0.278","comment":"\/\/ So only node2 and node3 have enough TTL to run additional work","label":0,"id":409519}
{"project":"presto-0.278","comment":"\/** * Get a slice containing an index slice for a given stripe. *\/","label":0,"id":409520}
{"project":"presto-0.278","comment":"\/** * Milliseconds since the epoch date format decoder. * <p> * Uses hardcoded UTC timezone and english locale. *\/","label":0,"id":409521}
{"project":"presto-0.278","comment":"\/*     * BingTiles don't contain their eastern\/southern edges, so that each point lies     * on a unique tile.  However, the easternmost and southernmost tiles must contain     * their eastern and southern bounds (respectively), because they are the only     * tiles that can.     *\/","label":0,"id":409522}
{"project":"presto-0.278","comment":"\/**     * When referent is freed by the garbage collector, run cleanup.     * <p>     * Note: cleanup must not contain a reference to the referent object.     *\/","label":0,"id":409523}
{"project":"presto-0.278","comment":"\/\/ Removing non-existing key should return default value","label":0,"id":409524}
{"project":"presto-0.278","comment":"\/\/ If it's grouped execution, knowing no new probe operators will be created for a group\/\/ should be immediately propagated to build state, so that corresponding build\/\/ can move forward (e.g. clean up).\/\/ On the other hand, if there's a single build, knowing no new probe operators will be\/\/ created for a group has no immediate use.","label":0,"id":409525}
{"project":"presto-0.278","comment":"\/\/ replace invalid characters with '_'","label":0,"id":409526}
{"project":"presto-0.278","comment":"\/\/ Create a file with 5 stripes of 20 rows each.","label":0,"id":409527}
{"project":"presto-0.278","comment":"\/\/ nodes that are supposed to be decrypted by the reader","label":0,"id":409528}
{"project":"presto-0.278","comment":"\/\/ and run on the node assigned to the bucket.","label":0,"id":409529}
{"project":"presto-0.278","comment":"\/\/ bit packing the zigzag encoded literals","label":0,"id":409530}
{"project":"presto-0.278","comment":"\/\/ If sortKey is an long literal, it can be referenced by column index.","label":0,"id":409531}
{"project":"presto-0.278","comment":"\/\/ ArithmeticException in case of overflow","label":0,"id":409532}
{"project":"presto-0.278","comment":"\/\/ create a filter function that yields for every probe match\/\/ verify we will yield #match times totally","label":0,"id":409533}
{"project":"presto-0.278","comment":"\/\/ NOTE: We do not use interrupted stack information to know that another\/\/ thread has attempted to interrupt the driver, and interrupt this new lock\/\/ owner.  The interrupted stack information is for debugging purposes only.\/\/ In the case of interruption, the caller should (and does) have a separate\/\/ state to prevent further processing in the Driver.","label":0,"id":409534}
{"project":"presto-0.278","comment":"\/\/ Write to nullsBuffer if there is a possibility to have nulls. It is possible that the\/\/ decodedBlock contains nulls, but rows that go into this partition don't. Write to nullsBuffer anyway.","label":0,"id":409535}
{"project":"presto-0.278","comment":"\/\/ so that each bucket has multiple splits","label":0,"id":409536}
{"project":"presto-0.278","comment":"\/\/ update an existing group;","label":0,"id":409537}
{"project":"presto-0.278","comment":"\/**     * Stripe footer slices by the stripe offset.     *\/","label":0,"id":409538}
{"project":"presto-0.278","comment":"\/\/ \/  \\","label":0,"id":409539}
{"project":"presto-0.278","comment":"\/\/ don't update to an older version (same version is ok)","label":0,"id":409540}
{"project":"presto-0.278","comment":"\/\/ So in the worst case, we can only accumulate up to the sizeInBytes of the probe page.","label":0,"id":409541}
{"project":"presto-0.278","comment":"\/\/ to failures of previously successful queries.","label":0,"id":409542}
{"project":"presto-0.278","comment":"\/\/ everything will be filtered out after applying negation","label":0,"id":409543}
{"project":"presto-0.278","comment":"\/\/ Rules applied after this need to handle locality of ProjectNode properly.","label":0,"id":409544}
{"project":"presto-0.278","comment":"\/\/ Test INTERSECT","label":0,"id":409545}
{"project":"presto-0.278","comment":"\/\/ Let the NestedLoopBuildOperator declare that it's finished.","label":0,"id":409546}
{"project":"presto-0.278","comment":"\/\/ successfully finished","label":0,"id":409547}
{"project":"presto-0.278","comment":"\/\/ TODO - move this to a RowExpressionUtil class","label":1,"id":409548}
{"project":"presto-0.278","comment":"\/\/ \/ \\  e","label":0,"id":409549}
{"project":"presto-0.278","comment":"\/\/ TODO: Add INT96 and FIXED_LEN_BYTE_ARRAY later","label":1,"id":409550}
{"project":"presto-0.278","comment":"\/\/ Expect only one child sub plan doing partial aggregation.","label":0,"id":409551}
{"project":"presto-0.278","comment":"\/\/ Create a bounded executor with a pool size at 4x number of processors","label":0,"id":409552}
{"project":"presto-0.278","comment":"\/**     * List applicable roles, including the transitive grants, for the specified principal     *\/","label":0,"id":409553}
{"project":"presto-0.278","comment":"\/\/ multiple filter functions","label":0,"id":409554}
{"project":"presto-0.278","comment":"\/\/ test LIMIT 0","label":0,"id":409555}
{"project":"presto-0.278","comment":"\/\/ Generate methods","label":0,"id":409556}
{"project":"presto-0.278","comment":"\/\/ reader is done","label":0,"id":409557}
{"project":"presto-0.278","comment":"\/**     * Stages of `TopNNode`:     *     * SINGLE:    `TopNNode` is in the logical plan.     * PARTIAL:   `TopNNode` is in the distributed plan, and generates partial results of `TopN` on local workers.     * FINAL:     `TopNNode` is in the distributed plan, and finalizes the partial results from `PARTIAL` nodes.     *\/","label":0,"id":409558}
{"project":"presto-0.278","comment":"\/\/ skip hash variable generation for single bigint","label":0,"id":409559}
{"project":"presto-0.278","comment":"\/\/ Test out the extraction of all basic comparisons with null literals","label":0,"id":409560}
{"project":"presto-0.278","comment":"\/** * Elements of {@code nulls} array determine if a value for a corresponding row is null. * Elements of {@code dates} array are date values for each row represented as the number * of days passed since 1970-01-01. * If row is null then value is ignored. *\/","label":0,"id":409561}
{"project":"presto-0.278","comment":"\/** * Gets the unique name of this encoding. *\/","label":0,"id":409562}
{"project":"presto-0.278","comment":"\/\/ transient_lastDdlTime is the parameter recording the latest ddl time.\/\/ It should be added in STATS_PROPERTIES so that it can be skipped when\/\/ updating StatisticsParameters, which allows hive find this dismiss\/\/ parameter and create a new transient_lastDdlTime with present time\/\/ rather than copying the old transient_lastDdlTime to hive partition.","label":0,"id":409563}
{"project":"presto-0.278","comment":"\/\/ 4 bytes: MetadataLength","label":0,"id":409564}
{"project":"presto-0.278","comment":"\/\/ mappedScenario1.blocked","label":0,"id":409565}
{"project":"presto-0.278","comment":"\/\/ part","label":0,"id":409566}
{"project":"presto-0.278","comment":"\/\/ This method bypasses transaction interface because this method is inherently hacky and doesn't work well with the transaction abstraction.","label":1,"id":409567}
{"project":"presto-0.278","comment":"\/\/ Add implicit coercions if view query produces types that don't match the declared output types","label":0,"id":409568}
{"project":"presto-0.278","comment":"\/\/ For distinct types, we only allow implicit coercion among themselves if they have a common supertype.\/\/ We don't allow any implicit coercion to\/from its base type.","label":0,"id":409569}
{"project":"presto-0.278","comment":"\/\/ no JOIN reordering","label":0,"id":409570}
{"project":"presto-0.278","comment":"\/\/ reduce the included columns to the set that is also present","label":0,"id":409571}
{"project":"presto-0.278","comment":"\/**     * Finish insert query     *\/","label":0,"id":409572}
{"project":"presto-0.278","comment":"\/\/ Create a new AccumuloColumnHandle object","label":0,"id":409573}
{"project":"presto-0.278","comment":"\/\/ [A, B] [(A, C)]     ->   List.of(Optional.of(GroupingProperty(C)))","label":0,"id":409574}
{"project":"presto-0.278","comment":"\/**     * Write a short to the current entry;     *\/","label":0,"id":409575}
{"project":"presto-0.278","comment":"\/\/ non existing partition","label":0,"id":409576}
{"project":"presto-0.278","comment":"\/\/ The actual native container type does not matter here.","label":0,"id":409577}
{"project":"presto-0.278","comment":"\/\/ fails the whole split. Filters on prefilled columns","label":0,"id":409578}
{"project":"presto-0.278","comment":"\/\/ delegate's accumulator","label":0,"id":409579}
{"project":"presto-0.278","comment":"\/** * Task (and split) priority is composed of a level and a within-level * priority. Level decides which queue the split is placed in, while * within-level priority decides which split is executed next in that level. * <p> * Tasks move from a lower to higher level as they exceed level thresholds * of total scheduled time accrued to a task. * <p> * The priority within a level increases with the scheduled time accumulated * in that level. This is necessary to achieve fairness when tasks acquire * scheduled time at varying rates. * <p> * However, this priority is <b>not<\/b> equal to the task total accrued * scheduled time. When a task graduates to a higher level, the level * priority is set to the minimum current priority in the new level. This * allows us to maintain instantaneous fairness in terms of scheduled time. *\/","label":0,"id":409580}
{"project":"presto-0.278","comment":"\/\/ verify quarantine exists","label":0,"id":409581}
{"project":"presto-0.278","comment":"\/** * Aggregation push downs are supported only on primitive types and supported aggregation functions are: * count(*), count(columnName), min(columnName), max(columnName) *\/","label":0,"id":409582}
{"project":"presto-0.278","comment":"\/\/ order based on the name of the VariableReferenceExpressions.","label":0,"id":409583}
{"project":"presto-0.278","comment":"\/\/ convert greater than to less than","label":0,"id":409584}
{"project":"presto-0.278","comment":"\/\/ Row(RLE(LongArrayBlock), RLE(LongArrayBlock))","label":0,"id":409585}
{"project":"presto-0.278","comment":"\/**     * Adds a split-up page to a specific partition.  If no-more-pages has been set, the enqueue     * page call is ignored.  This can happen with limit queries.     *\/","label":0,"id":409586}
{"project":"presto-0.278","comment":"\/\/ stream is only sorted if sort operator is executed without parallelism","label":0,"id":409587}
{"project":"presto-0.278","comment":"\/\/ parquet is case-sensitive, but hive is not. all hive columns get converted to lowercase","label":0,"id":409588}
{"project":"presto-0.278","comment":"\/**     * Indicates that the aggregation can be decomposed, and run as partial aggregations followed by a final aggregation to combine the intermediate results     *\/","label":0,"id":409589}
{"project":"presto-0.278","comment":"\/** * Get lookup result and re-map output columns based on requested order. *\/","label":0,"id":409590}
{"project":"presto-0.278","comment":"\/\/ Dictionary writer stores nulls in rowGroupIndex (min 1 byte to max 4 bytes), direct writer uses bit.","label":0,"id":409591}
{"project":"presto-0.278","comment":"\/**     * Scale down the value for 10**tenScale (this := this \/ 5**tenScale). This     * method rounds-up, eg 44\/10=4, 44\/10=5.     *\/","label":0,"id":409592}
{"project":"presto-0.278","comment":"\/\/ specification (https:\/\/orc.apache.org\/docs\/encodings.html) says scale stream is unsigned,\/\/ however Hive writer stores scale as signed integer (org.apache.hadoop.hive.ql.io.orc.WriterImpl.DecimalTreeWriter)\/\/ BUG link: https:\/\/issues.apache.org\/jira\/browse\/HIVE-13229","label":0,"id":409593}
{"project":"presto-0.278","comment":"\/\/ adds references to 0 and all odd indexes","label":0,"id":409594}
{"project":"presto-0.278","comment":"\/\/ Native array of hashes for faster collisions resolution compared\/\/ to accessing values in blocks. We use bytes to reduce memory foot print\/\/ and there is no performance gain from storing full hashes","label":0,"id":409595}
{"project":"presto-0.278","comment":"\/** * Interface to provide canonical info for a PlanNode. *\/","label":0,"id":409596}
{"project":"presto-0.278","comment":"\/\/ values are not discrete, so we can't exclude this section","label":0,"id":409597}
{"project":"presto-0.278","comment":"\/\/ NOTE: finish() may be called multiple times (see comment at Driver::processInternal).","label":0,"id":409598}
{"project":"presto-0.278","comment":"\/\/ a VALUES query).","label":0,"id":409599}
{"project":"presto-0.278","comment":"\/\/ TODO: add heuristic to jump to load strategy that is most likely to succeed\/\/ Try to load all the requests","label":1,"id":409600}
{"project":"presto-0.278","comment":"\/\/ test unsupported","label":0,"id":409601}
{"project":"presto-0.278","comment":"\/\/ checkRepresentation(\"TIME '00:39:05'\", Types.TIME, (rs, column) -> {","label":0,"id":409602}
{"project":"presto-0.278","comment":"\/**     * Decrypts the given {@link ByteBuffer} contents and returns them in a new {@link ByteBuffer}. The returned     * instance will be at position 0 and ready to read.     *\/","label":0,"id":409603}
{"project":"presto-0.278","comment":"\/\/ TODO if the non-deterministic operation only appears in the only sub-predicates that has size >1, we can still expand it.","label":1,"id":409604}
{"project":"presto-0.278","comment":"\/** * Processes input elements and returns current transformation state. * * @param elementOptional an element to be transformed. Will be empty * when there are no more elements. In such case transformation should * finish processing and flush any remaining data. * @return the current transformation state, optionally bearing a result * @see TransformationState#needsMoreData() * @see TransformationState#blocked(ListenableFuture) * @see TransformationState#yield() * @see TransformationState#ofResult(Object) * @see TransformationState#ofResult(Object, boolean) * @see TransformationState#finished() *\/","label":0,"id":409605}
{"project":"presto-0.278","comment":"\/**     * Attempt to match the desired properties to a sequence of known properties.     * <p>     * Returns a list of the same length as the original. Entries are:     * - Optional.empty(): the property was satisfied completely     * - non-empty: the (simplified) property that was not satisfied     *\/","label":0,"id":409606}
{"project":"presto-0.278","comment":"\/\/ two constants, first and forth position (partkey_mod_9 BIGINT, suppkey_varchar VARCHAR)","label":0,"id":409607}
{"project":"presto-0.278","comment":"\/\/ the transaction. It should only be failed if the transaction commit fails.","label":0,"id":409608}
{"project":"presto-0.278","comment":"\/\/ The BALANCED sharding strategy causes the server to","label":0,"id":409609}
{"project":"presto-0.278","comment":"\/\/ TODO: implement column level permissions","label":1,"id":409610}
{"project":"presto-0.278","comment":"\/\/ todo we can do better","label":1,"id":409611}
{"project":"presto-0.278","comment":"\/\/ Whenever schedule is called, holding onto the previous listener is not useful anymore.","label":0,"id":409612}
{"project":"presto-0.278","comment":"\/\/ NAME","label":0,"id":409613}
{"project":"presto-0.278","comment":"\/**     * {@code currentLocation} needs to be supplied if a writePath exists for the table.     *\/","label":0,"id":409614}
{"project":"presto-0.278","comment":"\/\/ less selective filter","label":0,"id":409615}
{"project":"presto-0.278","comment":"\/\/ All input RDD's are expected to have the same number of partitions in order to be zipped.\/\/ If task sources (splits) are missing for a partition, the partition itself must still be present.\/\/ Usually this can happen when joining a bucketed table with a non bucketed table.\/\/ The non bucketed table will be shuffled into K partitions, where K is the number of buckets.\/\/ The bucketed table may have some buckets missing. To make sure the partitions for bucketed and\/\/ non bucketed tables match, an empty partition must be inserted if bucket is missing.","label":0,"id":409616}
{"project":"presto-0.278","comment":"\/** * Gets the info for the specified task.  If the task has not been created * yet, an uninitialized task is created and the info is returned. * <p> * NOTE: this design assumes that only tasks that will eventually exist are * queried. *\/","label":0,"id":409617}
{"project":"presto-0.278","comment":"\/** * Builds all (distinct) {@link JoinGraph}-es whole plan tree. *\/","label":0,"id":409618}
{"project":"presto-0.278","comment":"\/\/ decodedBlock contains nulls, but rows that go into this partition don't. Write to nullsBuffer anyway.","label":0,"id":409619}
{"project":"presto-0.278","comment":"\/\/ Reset nested level positions before checking positionCount. Failing to do so may result in valuesBuffers having stale values when positionCount is 0.","label":0,"id":409620}
{"project":"presto-0.278","comment":"\/\/ expires due to lack of activity.","label":0,"id":409621}
{"project":"presto-0.278","comment":"\/\/ This is required so that default outputs from multiple instances of partial aggregations are passed to a single final aggregation.","label":0,"id":409622}
{"project":"presto-0.278","comment":"\/** * Use createRowBlockInternal or fromFieldBlocks instead of this method.  The caller of this method is assumed to have * validated the arguments with validateConstructorArguments. *\/","label":0,"id":409623}
{"project":"presto-0.278","comment":"\/**     * Apply limit to current context and return the updated context. Throws error for invalid operations.     *\/","label":0,"id":409624}
{"project":"presto-0.278","comment":"\/\/ We choose default initial size to be 8 for PageBuilder and BlockBuilder\/\/ so the underlying data is larger than the object overhead, and the size is power of 2.\/\/\/\/ This could be any other small number.","label":0,"id":409625}
{"project":"presto-0.278","comment":"\/**     * Gets the column cardinality for all of the given range values. May reach out to the     * metrics table in Accumulo to retrieve new cache elements.     *     * @param schema Table schema     * @param table Table name     * @param auths Scan authorizations     * @param family Accumulo column family     * @param qualifier Accumulo column qualifier     * @param colValues All range values to summarize for the cardinality     * @return The cardinality of the column     *\/","label":0,"id":409626}
{"project":"presto-0.278","comment":"\/\/ if Varchar(x) value length (including spaces) is greater than y, we can just truncate it","label":0,"id":409627}
{"project":"presto-0.278","comment":"\/\/ Type: (U, V)R => (V, T1, T2, ..., Tn, U)R","label":0,"id":409628}
{"project":"presto-0.278","comment":"\/** * Build the output blocks for the current batch for this unnester. * * @param maxLengths A vector that holds the max unnested row count for each position of all blocks to be unnested. * @param startPosition The start position of this batch. * @param batchSize The number of rows to be processed in this batch. * @param currentBatchTotalLength The total row count for this batch after the unnest is done. * @return *\/","label":0,"id":409629}
{"project":"presto-0.278","comment":"\/\/ MAX_VALUE_SIZE_IN_BYTES","label":0,"id":409630}
{"project":"presto-0.278","comment":"\/\/ offset is always 0","label":0,"id":409631}
{"project":"presto-0.278","comment":"\/\/ delete the table and index tables","label":0,"id":409632}
{"project":"presto-0.278","comment":"\/\/ non-string map keys are not supported","label":0,"id":409633}
{"project":"presto-0.278","comment":"\/\/ evaluated in context of actual source node type (and their sources).","label":0,"id":409634}
{"project":"presto-0.278","comment":"\/** * Extra information needed for a plan node *\/","label":0,"id":409635}
{"project":"presto-0.278","comment":"\/\/ Create a different scope for ORDER BY expressions when aggregation is present.","label":0,"id":409636}
{"project":"presto-0.278","comment":"\/\/ at this hash there were only 3 rows","label":0,"id":409637}
{"project":"presto-0.278","comment":"\/\/ Get the corresponding assignments in the input project.","label":0,"id":409638}
{"project":"presto-0.278","comment":"\/\/ Joni can infinite loop with UTF8Encoding when invalid UTF-8 is encountered.\/\/ NonStrictUTF8Encoding must be used to avoid this issue.","label":0,"id":409639}
{"project":"presto-0.278","comment":"\/\/ This session property is just a solution to force enabling when we know the execution would benefit from partial streaming aggregation.","label":0,"id":409640}
{"project":"presto-0.278","comment":"\/\/ After ReorderJoins, `statsEquivalentPlanNode` will be unassigned to intermediate join nodes.\/\/ We run it again to mark this for intermediate join nodes.","label":0,"id":409641}
{"project":"presto-0.278","comment":"\/** * Add a listener which fires anytime the buffer state changes. * Listener is always notified asynchronously using a dedicated notification thread pool so, care should * be taken to avoid leaking {@code this} when adding a listener in a constructor. Additionally, it is * possible notifications are observed out of order due to the asynchronous execution. *\/","label":0,"id":409642}
{"project":"presto-0.278","comment":"\/\/ all nested primitive\/varchar coercions and adding\/removing tailing nested fields are covered across row_to_row, list_to_list, and map_to_map","label":0,"id":409643}
{"project":"presto-0.278","comment":"\/\/ Arbitrary binary representing key metadata. It could be identifier\/\/ of key in KMS, encrypted DEK or other form of user defined key metadata.\/\/ this is optional and can use first keyMetadata from stripe","label":0,"id":409644}
{"project":"presto-0.278","comment":"\/\/ in memory page removed","label":0,"id":409645}
{"project":"presto-0.278","comment":"\/**     * Builds all (distinct) {@link JoinGraph}-es whole plan tree.     *\/","label":0,"id":409646}
{"project":"presto-0.278","comment":"\/\/ node1 shard1 \/ node2 shard2 \/ node3 shard3\/\/ Add delta to shard1\/\/ Delete shard2","label":0,"id":409647}
{"project":"presto-0.278","comment":"\/**     * @param startPosition - inclusive     * @param endPosition   - exclusive     * @param comparator    - returns true if positions given as parameters are equal     * @return the end of the group position exclusive (the position the very next group starts)     *\/","label":0,"id":409648}
{"project":"presto-0.278","comment":"\/\/ Structured type composed from types with spaces. i.e. array(timestamp with time zone)","label":0,"id":409649}
{"project":"presto-0.278","comment":"\/\/ increment the patch to point to next entry in patch list","label":0,"id":409650}
{"project":"presto-0.278","comment":"\/** * JSON specific row decoder. *\/","label":0,"id":409651}
{"project":"presto-0.278","comment":"\/\/ For Kerberized environments this variable will be equal to the hive.hdfs.presto.principal property as set in hive.properties","label":0,"id":409652}
{"project":"presto-0.278","comment":"\/\/ Scale down.","label":0,"id":409653}
{"project":"presto-0.278","comment":"\/\/ get output to consume the input","label":0,"id":409654}
{"project":"presto-0.278","comment":"\/\/ subqueries with ORDER BY","label":0,"id":409655}
{"project":"presto-0.278","comment":"\/\/ special values","label":0,"id":409656}
{"project":"presto-0.278","comment":"\/\/ remove empty row group stats for empty flat maps","label":0,"id":409657}
{"project":"presto-0.278","comment":"\/\/ we need to adapt the filterRate for non null values as follows:","label":0,"id":409658}
{"project":"presto-0.278","comment":"\/\/ Keep adding the element to the set as long as there are no dupes.","label":0,"id":409659}
{"project":"presto-0.278","comment":"\/\/ blocks at 20 per node","label":0,"id":409660}
{"project":"presto-0.278","comment":"\/** * Check that a partition step was done correctly.  For debugging and testing. * * @param order      The array of indexes representing a permutation of the keys. * @param values     The keys to sort. * @param pivotValue The value that splits the data * @param start      The beginning of the data of interest. * @param low        Values from start (inclusive) to low (exclusive) are &lt; pivotValue. * @param high       Values from low to high are equal to the pivot. * @param end        Values from high to end are above the pivot. *\/","label":0,"id":409661}
{"project":"presto-0.278","comment":"\/\/ create gap vs patch list","label":0,"id":409662}
{"project":"presto-0.278","comment":"\/\/ (b || a)  && (a || b || c) && (a || b) && (a || b || nd) && e\/\/ we cannot eliminate nd because it is non-deterministic","label":0,"id":409663}
{"project":"presto-0.278","comment":"\/\/ Invoke Constructor","label":0,"id":409664}
{"project":"presto-0.278","comment":"\/\/ bucket the unique constraint columns by constraint name","label":0,"id":409665}
{"project":"presto-0.278","comment":"\/\/ Reading with milli precision works fine","label":0,"id":409666}
{"project":"presto-0.278","comment":"\/** * Gets the pending metadata update requests that are to be sent to the coordinator. * * @return List of pending metadata update requests *\/","label":0,"id":409667}
{"project":"presto-0.278","comment":"\/\/ The number of rows is MAP_POSITIONS(100)","label":0,"id":409668}
{"project":"presto-0.278","comment":"\/** * @implNote Based on Alizadeh Noughabi, Hadi & Arghami, N. (2010). \"A New Estimator of Entropy\". *\/","label":0,"id":409669}
{"project":"presto-0.278","comment":"\/\/ bucket to partition mapping has to be populated to builder side remote fragment.","label":0,"id":409670}
{"project":"presto-0.278","comment":"\/** * Gets a list of {@link AccumuloColumnConstraint} based on the given constraint ID, excluding the row ID column * * @param rowIdName Presto column name mapping to the Accumulo row ID * @param constraint Set of query constraints * @return List of all column constraints *\/","label":0,"id":409671}
{"project":"presto-0.278","comment":"\/\/ It is okay to skip directory creation when currentPath is equal to targetPath","label":0,"id":409672}
{"project":"presto-0.278","comment":"\/\/ This is not how SqlTaskExecution is currently implemented. And such a delay in closing DriverFactory does not matter much.","label":0,"id":409673}
{"project":"presto-0.278","comment":"\/\/ direct column reference","label":0,"id":409674}
{"project":"presto-0.278","comment":"\/\/ PageSorter","label":0,"id":409675}
{"project":"presto-0.278","comment":"\/\/ It is necessary to add a 1 to the groupId because the underlying array is indexed starting at 1","label":0,"id":409676}
{"project":"presto-0.278","comment":"\/\/\/\/ Complex expressions\/\/","label":0,"id":409677}
{"project":"presto-0.278","comment":"\/\/ TODO: filtering mechanism could be used to return NoOp method when only precision is increased","label":1,"id":409678}
{"project":"presto-0.278","comment":"\/** * This optimizers looks for InPredicate expressions in ApplyNodes and replaces the nodes with SemiJoin nodes. * <p\/> * Plan before optimizer: * <pre> * Filter(a IN b): *   Apply *     - correlation: []  \/\/ empty *     - input: some plan A producing symbol a *     - subquery: some plan B producing symbol b * <\/pre> * <p\/> * Plan after optimizer: * <pre> * Filter(semijoinresult): *   SemiJoin *     - source: plan A *     - filteringSource: symbol a *     - sourceJoinSymbol: plan B *     - filteringSourceJoinSymbol: symbol b *     - semiJoinOutput: semijoinresult * <\/pre> *\/","label":0,"id":409679}
{"project":"presto-0.278","comment":"\/\/ dictionary","label":0,"id":409680}
{"project":"presto-0.278","comment":"\/\/ verify hashStrategy is consistent with equals and hash code from block","label":0,"id":409681}
{"project":"presto-0.278","comment":"\/\/ only expire them if they are older than minQueryExpireAge. We need to keep them","label":0,"id":409682}
{"project":"presto-0.278","comment":"\/\/ test integer","label":0,"id":409683}
{"project":"presto-0.278","comment":"\/\/ We can always enable streaming aggregation for partial aggregations. But if the table is not pre-group by the groupby columns, it may have regressions.","label":0,"id":409684}
{"project":"presto-0.278","comment":"\/\/ determine ranges of the stripe to read","label":0,"id":409685}
{"project":"presto-0.278","comment":"\/\/ start all the queries we can","label":0,"id":409686}
{"project":"presto-0.278","comment":"\/\/ Hence it is safe to hardcode the token to be 0.","label":0,"id":409687}
{"project":"presto-0.278","comment":"\/\/ Therefore, even if the query appears to be gone here, it might be back when one inspects nodes later.","label":0,"id":409688}
{"project":"presto-0.278","comment":"\/\/ Note: technically we could more efficiently utilize the overlapped columns, but this way is simpler for now","label":1,"id":409689}
{"project":"presto-0.278","comment":"\/\/ Pre-create a value block with a single null value to avoid creating a block","label":0,"id":409690}
{"project":"presto-0.278","comment":"\/\/ Currently variable argument functions do not play well with arguments using parametrized types.","label":0,"id":409691}
{"project":"presto-0.278","comment":"\/\/ full join","label":0,"id":409692}
{"project":"presto-0.278","comment":"\/** * Given an expression and values domain, determine whether the expression qualifies as a * \"column\" and return its desired representation. * * Return Optional.empty() if expression doesn't qualify. *\/","label":0,"id":409693}
{"project":"presto-0.278","comment":"\/\/ fourth byte contains 3 bits for page gap width and 5 bits for","label":0,"id":409694}
{"project":"presto-0.278","comment":"\/\/ materialize the output to catch some type errors","label":0,"id":409695}
{"project":"presto-0.278","comment":"\/\/ Delete is currently unsupported","label":0,"id":409696}
{"project":"presto-0.278","comment":"\/\/ Storage format property","label":0,"id":409697}
{"project":"presto-0.278","comment":"\/\/ Only when this is the last batch in the page and it filled the buffer, the buffers can be recycled.","label":0,"id":409698}
{"project":"presto-0.278","comment":"\/\/ Mid-size, med of 3","label":0,"id":409699}
{"project":"presto-0.278","comment":"\/\/ We need to specialize BOOLEAN case because we can't specify filterRate by manipulating the filter value in getFilter.","label":0,"id":409700}
{"project":"presto-0.278","comment":"\/\/ Recheck after synchronizing but before creating a real listener","label":0,"id":409701}
{"project":"presto-0.278","comment":"\/\/ update new range info","label":0,"id":409702}
{"project":"presto-0.278","comment":"\/\/ Ensure that we can directly move to failed from queued","label":0,"id":409703}
{"project":"presto-0.278","comment":"\/** * Separate JoinFilterFunctions have to be created and supplied for each thread using PositionLinks * since JoinFilterFunction is not thread safe... *\/","label":0,"id":409704}
{"project":"presto-0.278","comment":"\/\/ Retain only the row IDs for this column that have already been added\/\/ This is your set intersection operation!","label":0,"id":409705}
{"project":"presto-0.278","comment":"\/\/ can never return a null value. Therefore, the if below is sufficient.","label":0,"id":409706}
{"project":"presto-0.278","comment":"\/\/ Since the markers are strictly ordered, the value of the comparisons should be equivalent to the comparisons","label":0,"id":409707}
{"project":"presto-0.278","comment":"\/\/ create a page supplier with 3 initial pages","label":0,"id":409708}
{"project":"presto-0.278","comment":"\/\/\/\/ Arithmetic operations\/\/","label":0,"id":409709}
{"project":"presto-0.278","comment":"\/\/ generic implementations\/\/ these will not work right now because MethodHandle is not properly adapted","label":1,"id":409710}
{"project":"presto-0.278","comment":"\/\/ time field is `TIMESTAMP`, try to convert time value from `DATE` to `TIMESTAMP`","label":0,"id":409711}
{"project":"presto-0.278","comment":"\/\/ Column 13L","label":0,"id":409712}
{"project":"presto-0.278","comment":"\/**     * Quick sort in place of several paired arrays.  On return,     * keys[...] is in order and the values[] arrays will be     * reordered as well in the same way.     *     * @param key    Values to sort on     * @param values The auxiliary values to sort.     *\/","label":0,"id":409713}
{"project":"presto-0.278","comment":"\/\/ add buffers, which does not cause an error","label":0,"id":409714}
{"project":"presto-0.278","comment":"\/\/ simpler to explicitly call it out.","label":0,"id":409715}
{"project":"presto-0.278","comment":"\/\/ read from existing columns","label":0,"id":409716}
{"project":"presto-0.278","comment":"\/*         * Define \"full siblings\" to be found distinct ties with the same parent -- ie, the parent's children.         * If we order a set of tiles first by zoom (descending) and then by quadkey, any siblings will adjacent         * to each other.  If we put the tiles on a min-heap (so head is the lowest zoom, first quadkey), then if         * the next four elements are full siblings, we can coalesce them into a parent which we put back on the         * heap.  If the first items in the heap are not full siblings, there is no possibility to make full siblings         * (since we are starting with highest zoom first), so we can add them to the results.         *         * In the end, we will have a fully dissolved set of tiles.         *\/","label":0,"id":409717}
{"project":"presto-0.278","comment":"\/**     * Return a partitioning handle which the connector can transparently convert both {@code left} and {@code right} into.     *\/","label":0,"id":409718}
{"project":"presto-0.278","comment":"\/**     * Write a file that contains a given number of maps where each row has 10 entries in total     * and some entries have null keys\/values.     *\/","label":0,"id":409719}
{"project":"presto-0.278","comment":"\/\/ Projected\/selected column definition in query","label":0,"id":409720}
{"project":"presto-0.278","comment":"\/\/ if delta is fixed then we don't need to store delta blob","label":0,"id":409721}
{"project":"presto-0.278","comment":"\/\/ Partition 2 is altered (dropped and then added back)","label":0,"id":409722}
{"project":"presto-0.278","comment":"\/**         * We haven't yet computed or have already returned the element.         *\/","label":0,"id":409723}
{"project":"presto-0.278","comment":"\/**     * Aggregation push downs are supported only on primitive types and supported aggregation functions are:     * count(*), count(columnName), min(columnName), max(columnName)     *\/","label":0,"id":409724}
{"project":"presto-0.278","comment":"\/\/ No positions getPositionSizeInBytes","label":0,"id":409725}
{"project":"presto-0.278","comment":"\/\/ TODO: this might explode stats","label":1,"id":409726}
{"project":"presto-0.278","comment":"\/\/ never be a non-failed SectionExecution for a section that's ready for execution","label":0,"id":409727}
{"project":"presto-0.278","comment":"\/** * Add a listener for the final stage info.  This notification is guaranteed to be fired only once. * Listener is always notified asynchronously using a dedicated notification thread pool so, care should * be taken to avoid leaking {@code this} when adding a listener in a constructor. Additionally, it is * possible notifications are observed out of order due to the asynchronous execution. *\/","label":0,"id":409728}
{"project":"presto-0.278","comment":"\/**     * Returns a batch of rows for the given split.     *     * @param splitId split id as returned in split batch     * @param columns a list of column names to return     * @param maxBytes maximum size of returned data in bytes     * @param nextToken token from a previous batch or {@literal null} if it is the first call     * @return a batch of table data     *\/","label":0,"id":409729}
{"project":"presto-0.278","comment":"\/\/ if we do not have any equi conjunct we do not pushdown non-equality condition into\/\/ inner join, so we plan execution as nested-loops-join followed by filter instead\/\/ hash join.\/\/ todo: remove the code when we have support for filter function in nested loop join","label":1,"id":409730}
{"project":"presto-0.278","comment":"\/\/ Test ST_Contains(build, probe)","label":0,"id":409731}
{"project":"presto-0.278","comment":"\/\/ Nothing filtered out. So just return the original.","label":0,"id":409732}
{"project":"presto-0.278","comment":"\/**         * for existing table in S3 (both new and existing partition) or when staging directory is disabled         *\/","label":0,"id":409733}
{"project":"presto-0.278","comment":"\/\/ first try to estimate in the fair way","label":0,"id":409734}
{"project":"presto-0.278","comment":"\/\/ Number of buckets in the table, as specified in table metadata","label":0,"id":409735}
{"project":"presto-0.278","comment":"\/\/ TODO - Alluxio should return the actual table type","label":1,"id":409736}
{"project":"presto-0.278","comment":"\/\/ all combinations of segments","label":0,"id":409737}
{"project":"presto-0.278","comment":"\/\/ Compute input table statistics for the plan node. This is useful in history based optimizations,\/\/ where historical plan statistics are reused if input tables are similar in size across runs.","label":0,"id":409738}
{"project":"presto-0.278","comment":"\/\/ All the REPLICATED cases were handled in the code above, so now we only consider PARTITIONED cases here","label":0,"id":409739}
{"project":"presto-0.278","comment":"\/\/ NO filter","label":0,"id":409740}
{"project":"presto-0.278","comment":"\/* * Rate Limiting per query with token bucket * Rate = rateLimitBucketMaxSize\/second * When having sufficient tokens, Request will be responded immediately. * When not having enough tokens available, it uses the delayed processing method. *\/","label":0,"id":409741}
{"project":"presto-0.278","comment":"\/\/ This helps when we have large queries that can potentially cause COMPUTE_FRAMES","label":0,"id":409742}
{"project":"presto-0.278","comment":"\/** * Returns a direct or equivalent mapping of the provided variable reference. *\/","label":0,"id":409743}
{"project":"presto-0.278","comment":"\/\/ end index could run over length because of large code points (e.g., 4-byte code points)\/\/ or within length because of small code points (e.g., 1-byte code points)","label":0,"id":409744}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to drop columns from the specified table in a catalog. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":409745}
{"project":"presto-0.278","comment":"\/\/ When considering where we want to swap forms (i.e. an AND expression for DNF or OR expression for CNF), there are 3 cases for each argument","label":0,"id":409746}
{"project":"presto-0.278","comment":"\/** * Runs Driver in another thread until it is finished *\/","label":0,"id":409747}
{"project":"presto-0.278","comment":"\/\/ use prefix block to build the hash table","label":0,"id":409748}
{"project":"presto-0.278","comment":"\/\/ baseTable: t2, partitioned by [a]","label":0,"id":409749}
{"project":"presto-0.278","comment":"\/* any *\/","label":0,"id":409750}
{"project":"presto-0.278","comment":"\/\/ null        X            X","label":0,"id":409751}
{"project":"presto-0.278","comment":"\/**     * Computes how much of the queue can be filled by splits with the network topology distance to a node given by     * splitAffinity. A split with zero affinity can only fill half the queue, whereas one that matches     * exactly can fill the entire queue.     *\/","label":0,"id":409752}
{"project":"presto-0.278","comment":"\/\/ we will prefer most simplified expression than correct conjunctive\/disjunctive form","label":0,"id":409753}
{"project":"presto-0.278","comment":"\/\/ create file foo.txt and rename to existing bar.txt","label":0,"id":409754}
{"project":"presto-0.278","comment":"\/\/ the operator should be unblocked","label":0,"id":409755}
{"project":"presto-0.278","comment":"\/** * Splits blocked by the driver. *\/","label":0,"id":409756}
{"project":"presto-0.278","comment":"\/\/ TODO : Use thrift to serialize metadata objects instead of json serde on catalog server in the future\/\/ TODO : Add e2e tests for this class","label":1,"id":409757}
{"project":"presto-0.278","comment":"\/\/ updating system memory usage should happen after page is loaded.","label":0,"id":409758}
{"project":"presto-0.278","comment":"\/\/ since all sources are finished there is no reason to allow new pages to be added","label":0,"id":409759}
{"project":"presto-0.278","comment":"\/\/ Rollbacks for inserts are off the table when it comes to data in Accumulo.","label":0,"id":409760}
{"project":"presto-0.278","comment":"\/\/ expectedColumnIndex'th column returned by Pinot can be discarded.","label":0,"id":409761}
{"project":"presto-0.278","comment":"\/\/ Assert the spill codec flags match the expected configuration","label":0,"id":409762}
{"project":"presto-0.278","comment":"\/\/ We write the actual underlying block, so we will never need to read a lazy block","label":0,"id":409763}
{"project":"presto-0.278","comment":"\/\/ delegate to metafactory, we may choose to generate code ourselves in the future.","label":0,"id":409764}
{"project":"presto-0.278","comment":"\/\/ point on the border separating two partitions","label":0,"id":409765}
{"project":"presto-0.278","comment":"\/\/ Starting Edge 2,3","label":0,"id":409766}
{"project":"presto-0.278","comment":"\/\/ readNoFilter","label":0,"id":409767}
{"project":"presto-0.278","comment":"\/\/ groupId for the null value","label":0,"id":409768}
{"project":"presto-0.278","comment":"\/**     * Resolves a function using implicit type coercions. We enforce explicit naming for dynamic function namespaces.     * All unqualified function names will only be resolved against the built-in static function namespace. While it is     * possible to define an ordering (through SQL path or other means) and convention (best match \/ first match), in     * reality when complicated namespaces are involved such implicit resolution might hide errors and cause confusion.     *     * @throws PrestoException if there are no matches or multiple matches     *\/","label":0,"id":409769}
{"project":"presto-0.278","comment":"\/\/ Delete original file","label":0,"id":409770}
{"project":"presto-0.278","comment":"\/\/ Reserved 200 ARRAY(ARRAY(BIGINT)), and 201 ints for offsets and 200 booleans for nulls","label":0,"id":409771}
{"project":"presto-0.278","comment":"\/\/ Copy the slice if the value was trimmed and is now smaller than the backing buffer","label":0,"id":409772}
{"project":"presto-0.278","comment":"\/\/ we will yield 40 times due to filterFunction","label":0,"id":409773}
{"project":"presto-0.278","comment":"\/** * Creates the index tables from the given Accumulo table. No op if * {@link AccumuloTable#isIndexed()} is false. * * @param table Table to create index tables *\/","label":0,"id":409774}
{"project":"presto-0.278","comment":"\/\/ This test case tests the Accumulo connectors override capabilities\/\/ When a row is inserted into a table where a row with the same row ID already exists,\/\/ the cells of the existing row are overwritten with the new values","label":0,"id":409775}
{"project":"presto-0.278","comment":"\/\/ We're done.","label":0,"id":409776}
{"project":"presto-0.278","comment":"\/\/ advance time forward, but not enough to fail the client","label":0,"id":409777}
{"project":"presto-0.278","comment":"\/\/ check field count consistency for rows","label":0,"id":409778}
{"project":"presto-0.278","comment":"\/\/ Small arrays, middle element","label":0,"id":409779}
{"project":"presto-0.278","comment":"\/\/ Fill in user-specified properties","label":0,"id":409780}
{"project":"presto-0.278","comment":"\/\/ analyze query","label":0,"id":409781}
{"project":"presto-0.278","comment":"\/\/ fileName will be null when this class is used to represent metadata request","label":0,"id":409782}
{"project":"presto-0.278","comment":"\/** * append the index for the probe and copy the row for the build *\/","label":0,"id":409783}
{"project":"presto-0.278","comment":"\/\/ write the records","label":0,"id":409784}
{"project":"presto-0.278","comment":"\/\/ process first row of first page of LookupJoinOperator","label":0,"id":409785}
{"project":"presto-0.278","comment":"\/\/ Thrown when a serialization error occurs when reading\/writing data from\/to Accumulo","label":0,"id":409786}
{"project":"presto-0.278","comment":"\/**     * Return true for valid port numbers.     *\/","label":0,"id":409787}
{"project":"presto-0.278","comment":"\/\/ 4. Anything that doesn't starts with \\ or $ is considered regular bytes","label":0,"id":409788}
{"project":"presto-0.278","comment":"\/**     * Standard quick sort except that sorting rearranges parallel arrays     *     * @param key    Values to sort on     * @param values The auxiliary values to sort.     * @param start  The beginning of the values to sort     * @param end    The value after the last value to sort     * @param limit  The minimum size to recurse down to.     *\/","label":0,"id":409789}
{"project":"presto-0.278","comment":"\/\/ fill buffer with the value","label":0,"id":409790}
{"project":"presto-0.278","comment":"\/\/ don't consider partitioned inequality joins because they execute on a single node.","label":0,"id":409791}
{"project":"presto-0.278","comment":"\/\/ another thread, which will cause unsafe publication of this instance.","label":0,"id":409792}
{"project":"presto-0.278","comment":"\/** * When selectAuthorizedIdentity API is enabled, * 1. Check the delegation permission, which is inside the API call * 2. Select and return the authorized identity *\/","label":0,"id":409793}
{"project":"presto-0.278","comment":"\/\/ It could be a Presto bug that we don't see effectivePredicate.getDomains().get() has more than 1 domain.\/\/ For example, the 'where c1=3 or c1=10002' clause should have two domains but it has none\/\/ we assume the relation cross domains are 'or'","label":1,"id":409794}
{"project":"presto-0.278","comment":"\/\/ Drop samples immediately after a RESET, since this will be a \"since boot\" event","label":0,"id":409795}
{"project":"presto-0.278","comment":"\/\/ All the config set above are independent of the URI","label":0,"id":409796}
{"project":"presto-0.278","comment":"\/\/ TODO #7122 should be 1970-01-01 00:00:00","label":1,"id":409797}
{"project":"presto-0.278","comment":"\/\/ delete every row","label":0,"id":409798}
{"project":"presto-0.278","comment":"\/**         * Base repetition level marks at which level either:         * 1. A new collection starts         * 2. A collection is null or empty         * 3. A primitive column stays         *\/","label":0,"id":409799}
{"project":"presto-0.278","comment":"\/\/ TODO enabled when DECIMAL is default for literal:\/\/ assertOptimizedEquals(\"case true \" +\/\/ \"when false then 1234567890.0987654321 \" +\/\/ \"when true then 3.3 \" +\/\/ \"end\",\/\/ \"CAST(3.3 AS DECIMAL(20,10))\");","label":1,"id":409800}
{"project":"presto-0.278","comment":"\/\/ Confidence of exchange stats should be logical AND of its source nodes' confidence","label":0,"id":409801}
{"project":"presto-0.278","comment":"\/\/ create TrustManagerFactory","label":0,"id":409802}
{"project":"presto-0.278","comment":"\/\/ connector metadata update handle serde manager","label":0,"id":409803}
{"project":"presto-0.278","comment":"\/\/ Asserting that calling construct_tdigest with the raw values\/\/ produces a varbinary that equals the generated tdigest declared above","label":0,"id":409804}
{"project":"presto-0.278","comment":"\/\/ short","label":0,"id":409805}
{"project":"presto-0.278","comment":"\/\/ in order to change this value, the master Apache ORC proto file must be updated","label":0,"id":409806}
{"project":"presto-0.278","comment":"\/\/ ProjectNode projects only equivalence class members(E,F). Equivalence classes should have (E,F).\/\/ KeyProperty should become empty since A,B,C are removed from projection.","label":0,"id":409807}
{"project":"presto-0.278","comment":"\/\/ some hive input formats are broken and bad things can happen if you close them multiple times","label":0,"id":409808}
{"project":"presto-0.278","comment":"\/\/ Test Delta connector is able to read the checkpointed commits in a parquet file.","label":0,"id":409809}
{"project":"presto-0.278","comment":"\/\/ this connector uses a non-canonical type for varchar columns in tpch","label":0,"id":409810}
{"project":"presto-0.278","comment":"\/\/ not splittable, use the hosts from the first block if it exists","label":0,"id":409811}
{"project":"presto-0.278","comment":"\/\/ if the base value is negative then set MSB to 1","label":0,"id":409812}
{"project":"presto-0.278","comment":"\/** * LOWER UNBOUNDED is specified with an empty value and a ABOVE bound * UPPER UNBOUNDED is specified with an empty value and a BELOW bound *\/","label":0,"id":409813}
{"project":"presto-0.278","comment":"\/\/ Unique constraints","label":0,"id":409814}
{"project":"presto-0.278","comment":"\/**     * A value lower than {@link #STARTING_VERSION}. This value can be used to     * create an initial local task that is always older than any remote task.     *\/","label":0,"id":409815}
{"project":"presto-0.278","comment":"\/\/ Peak Total Memory: 1.98GB","label":0,"id":409816}
{"project":"presto-0.278","comment":"\/\/ column 0: INT (Node 0)","label":0,"id":409817}
{"project":"presto-0.278","comment":"\/\/ May contain null elements","label":0,"id":409818}
{"project":"presto-0.278","comment":"\/\/ The needsUpdate flag needs to be set to false BEFORE adding the Future callback since callback might change the flag value","label":0,"id":409819}
{"project":"presto-0.278","comment":"\/** * Both the statistics and the row_count + fragments are transferred over the same communication * link between the TableWriterOperator and the TableFinishOperator. Thus the multiplexing is needed. * <p> * The transferred page layout looks like: * <p> * [[row_count_channel], [fragment_channel], [statistic_channel_1] ... [statistic_channel_N]] * <p> * [row_count_channel] - contains number of rows processed by a TableWriterOperator instance * [fragment_channel] - contains arbitrary binary data provided by the ConnectorPageSink#finish for * the further post processing on the coordinator * <p> * [statistic_channel_1] ... [statistic_channel_N] - contain pre-aggregated statistics computed by the * statistics aggregation operator within the * TableWriterOperator * <p> * Since the final aggregation operator in the TableFinishOperator doesn't know what to do with the * first two channels, those must be pruned. For the convenience we never set both, the * [row_count_channel] + [fragment_channel] and the [statistic_channel_1] ... [statistic_channel_N]. * <p> * If this is a row that holds statistics - the [row_count_channel] + [fragment_channel] will be NULL. * <p> * It this is a row that holds the row count or the fragment - all the statistics channels will be set * to NULL. * <p> * Since neither [row_count_channel] or [fragment_channel] cannot hold the NULL value naturally, by * checking isNull on these two channels we can determine if this is a row that contains statistics. *\/","label":0,"id":409820}
{"project":"presto-0.278","comment":"\/\/ Generate temporary table name.","label":0,"id":409821}
{"project":"presto-0.278","comment":"\/\/bucket\/path\/tbl@v5\", \"s3:\/\/bucket\/path\/tbl\", 5L);","label":0,"id":409822}
{"project":"presto-0.278","comment":"\/\/ un-normalize remainder which is stored in dividend","label":0,"id":409823}
{"project":"presto-0.278","comment":"\/\/ where rows did not exist in the inner table.  For some aggregate functions, such as count, the result","label":0,"id":409824}
{"project":"presto-0.278","comment":"\/\/ presents the table to the engine for read.","label":0,"id":409825}
{"project":"presto-0.278","comment":"\/\/ TaskOutput-0","label":0,"id":409826}
{"project":"presto-0.278","comment":"\/\/ instance credentials are disabled by default","label":0,"id":409827}
{"project":"presto-0.278","comment":"\/\/ Validate the columns are distinct","label":0,"id":409828}
{"project":"presto-0.278","comment":"\/\/ If the lastKilledQuery is marked as leaked by the ClusterMemoryLeakDetector we consider the lastKilledQuery as gone,","label":0,"id":409829}
{"project":"presto-0.278","comment":"\/\/ Update the taskInfo with the new taskStatus.","label":0,"id":409830}
{"project":"presto-0.278","comment":"\/\/ kerberos config without service name","label":0,"id":409831}
{"project":"presto-0.278","comment":"\/\/ try block","label":0,"id":409832}
{"project":"presto-0.278","comment":"\/\/ some state be preserved between calls of encode() and decode().","label":0,"id":409833}
{"project":"presto-0.278","comment":"\/\/ This approach makes the '=' padding characters completely optional.","label":0,"id":409834}
{"project":"presto-0.278","comment":"\/\/ Even recursive listing can still contain empty \"directory\" objects, must filter them out","label":0,"id":409835}
{"project":"presto-0.278","comment":"\/\/ split is empty, skip it","label":0,"id":409836}
{"project":"presto-0.278","comment":"\/\/ Due to the way MemoryRevokingScheduler works, revoking tasks one by one, simultaneous revoke of two tasks is impossible","label":0,"id":409837}
{"project":"presto-0.278","comment":"\/\/ return empty to indicate that scheduling for this lifespan is blocked, or skip the current","label":0,"id":409838}
{"project":"presto-0.278","comment":"\/\/ translate preference to input variables","label":0,"id":409839}
{"project":"presto-0.278","comment":"\/\/ Longest possible output is when the pattern is empty, than the replacement will be placed in between","label":0,"id":409840}
{"project":"presto-0.278","comment":"\/\/ We do not record errors in the dictionary results.","label":0,"id":409841}
{"project":"presto-0.278","comment":"\/\/ grow base array if necessary","label":0,"id":409842}
{"project":"presto-0.278","comment":"\/**     * The partitioning for the table streams.     * If empty, the table layout is partitioned arbitrarily.     * Otherwise, table steams are partitioned on the given set of columns (or unpartitioned, if the set is empty)     * <p>     * If the table is partitioned, the connector guarantees that each combination of values for     * the partition columns will be contained within a single split (i.e., partitions cannot     * straddle multiple splits)     *\/","label":0,"id":409843}
{"project":"presto-0.278","comment":"\/\/ Coerce expressions in body if necessary","label":0,"id":409844}
{"project":"presto-0.278","comment":"\/\/ this test case is geared toward pages with 6 rows to create two stripes with 4 and 2 rows each\/\/ row group size is 2 rows (MAP_STATS_TEST_ROW_GROUP_MAX_ROW_COUNT)","label":0,"id":409845}
{"project":"presto-0.278","comment":"\/\/ check slice version","label":0,"id":409846}
{"project":"presto-0.278","comment":"\/\/ the test creates a table with one column and 10 row groups (i.e., 100K rows)","label":0,"id":409847}
{"project":"presto-0.278","comment":"\/\/ Thrift RPC","label":0,"id":409848}
{"project":"presto-0.278","comment":"\/\/ eliminate duplicated items with different order, prefers the ones appears first.","label":0,"id":409849}
{"project":"presto-0.278","comment":"\/** * test clickhouse table properties * <p> * Because the current connector does not support the `show create table` statement to display all the table properties, * so we cannot use this statement to test whether the properties of the created table meet our expectations, * and we will modify the test case after the `show create table` is full supported *\/","label":0,"id":409850}
{"project":"presto-0.278","comment":"\/\/ e.g. make outputPositions a subset of positions array","label":0,"id":409851}
{"project":"presto-0.278","comment":"\/**     * Maximum number of records per poll()     *\/","label":0,"id":409852}
{"project":"presto-0.278","comment":"\/\/ in order to make queries like `DESC \"@sheetId\"` or `DESC \"#1\"` work","label":0,"id":409853}
{"project":"presto-0.278","comment":"\/\/ 2.d. Rewrite aggregates","label":0,"id":409854}
{"project":"presto-0.278","comment":"\/\/ query should not block","label":0,"id":409855}
{"project":"presto-0.278","comment":"\/\/ decimal type is not supported by the Hive hash code function","label":0,"id":409856}
{"project":"presto-0.278","comment":"\/\/ For source operators, they never take input, but they may produce output.","label":0,"id":409857}
{"project":"presto-0.278","comment":"\/\/ The positions (row numbers) of the incoming Block to be copied to this buffer.","label":0,"id":409858}
{"project":"presto-0.278","comment":"\/**     * This logical properties builder should be used by PlanNode's that simply     * propagate source properties without changes. For example, a SemiJoin node     * propagates the inputs of its non-filtering source without adding new properties.     * A SortNode also propagates the logical properties of its source without change.     *\/","label":0,"id":409859}
{"project":"presto-0.278","comment":"\/\/ add hash variables to inputs","label":0,"id":409860}
{"project":"presto-0.278","comment":"\/\/ Distinct type","label":0,"id":409861}
{"project":"presto-0.278","comment":"\/** * Validated port number in the range [0..65535], or NO_PORT *\/","label":0,"id":409862}
{"project":"presto-0.278","comment":"\/\/ Character","label":0,"id":409863}
{"project":"presto-0.278","comment":"\/\/ Should not prune even if WHERE condition can be short-circuited","label":0,"id":409864}
{"project":"presto-0.278","comment":"\/** * Get a slice containing a stripe footer for a given stripe. *\/","label":0,"id":409865}
{"project":"presto-0.278","comment":"\/\/ Maps VariableReferenceExpression in both partitions to an COALESCE expression, keeps constant arguments unchanged.","label":0,"id":409866}
{"project":"presto-0.278","comment":"\/\/ The first segment is allocated initially with INITIAL_SEGMENT_LENGTH","label":0,"id":409867}
{"project":"presto-0.278","comment":"\/\/ unescape all escaped commas","label":0,"id":409868}
{"project":"presto-0.278","comment":"\/**     * Called by {@link SpatialJoinOperator} on completion to signal that spatial index     * is no longer needed.     *\/","label":0,"id":409869}
{"project":"presto-0.278","comment":"\/\/ size is 10 times the size of the underlying dictionary (VariableWidthBlock).","label":0,"id":409870}
{"project":"presto-0.278","comment":"\/**     * List the table privileges granted to the specified grantee for the tables that have the specified prefix considering the selected session role     *\/","label":0,"id":409871}
{"project":"presto-0.278","comment":"\/\/ The stats created by this method is only for diagnostics.\/\/ It does not guarantee a consistent view between different exchange clients.\/\/ Guaranteeing a consistent view introduces significant lock contention.","label":0,"id":409872}
{"project":"presto-0.278","comment":"\/\/ See if there is a varchar key","label":0,"id":409873}
{"project":"presto-0.278","comment":"\/\/ Only","label":0,"id":409874}
{"project":"presto-0.278","comment":"\/\/ make sure we have 40 matches","label":0,"id":409875}
{"project":"presto-0.278","comment":"\/\/ Hack to allow Presto Admin to access the \"system\" catalog for retrieving server status.","label":1,"id":409876}
{"project":"presto-0.278","comment":"\/\/ break infinite loop due to null pages","label":0,"id":409877}
{"project":"presto-0.278","comment":"\/\/ here - our level time math will be off. However, the staleness is bounded by","label":0,"id":409878}
{"project":"presto-0.278","comment":"\/\/ create equality inference on available variables","label":0,"id":409879}
{"project":"presto-0.278","comment":"\/\/ Geometries at tile borders","label":0,"id":409880}
{"project":"presto-0.278","comment":"\/\/ map column with no nulls","label":0,"id":409881}
{"project":"presto-0.278","comment":"\/\/ TODO Cassandra connector supports CTAS and inserts, but the test would fail","label":1,"id":409882}
{"project":"presto-0.278","comment":"\/\/ entry2 ( -546736344): node2","label":0,"id":409883}
{"project":"presto-0.278","comment":"\/** * Is the byte sequences at {@code offset} in the value at {@code position} equal * to the byte sequence at {@code otherOffset} in {@code otherSlice}. * This method must be implemented if @{code getSlice} is implemented. *\/","label":0,"id":409884}
{"project":"presto-0.278","comment":"\/\/\/\/ State transitions\/\/","label":0,"id":409885}
{"project":"presto-0.278","comment":"\/\/ if the cluster is out of memory and we didn't trigger the oom killer we log the state to make debugging easier","label":0,"id":409886}
{"project":"presto-0.278","comment":"\/\/ because we haven't created the task context that holds the memory context yet.","label":0,"id":409887}
{"project":"presto-0.278","comment":"\/\/ Comment on why error message references varchar(214783647) instead of varchar(2) which seems expected result type for concatenation in expression.\/\/ Currently variable argument functions do not play well with arguments using parametrized types.\/\/ The variable argument functions mechanism requires that all the arguments are of exactly same type. We cannot enforce that base must match but parameters may differ.","label":1,"id":409888}
{"project":"presto-0.278","comment":"\/\/ verify the future completed\/\/ broadcast buffer does not return a \"complete\" result in this case, but it doesn't mapper","label":0,"id":409889}
{"project":"presto-0.278","comment":"\/\/ Return type of intermediate aggregation is the same as the input type.","label":0,"id":409890}
{"project":"presto-0.278","comment":"\/**     * ORC metadata and DWRF stripe cache sizes are mutually exclusive because     * only ORC files have metadata, and only DWRF files have stripe cache.     * <p>     * Let's check that either both sizes are 0, or only one of them is     * greater than 0.     *\/","label":0,"id":409891}
{"project":"presto-0.278","comment":"\/\/ https:\/\/www.ibm.com\/support\/knowledgecenter\/en\/SSEPEK_10.0.0\/codes\/src\/tpc\/db2z_sqlstatevalues.html#db2z_sqlstatevalues__code01","label":0,"id":409892}
{"project":"presto-0.278","comment":"\/\/ Original keys","label":0,"id":409893}
{"project":"presto-0.278","comment":"\/\/ b","label":0,"id":409894}
{"project":"presto-0.278","comment":"\/\/ it's possible that memory revoking is requested for some operator\/\/ before we update driverBlockedFuture above and we don't want to miss that\/\/ notification, so we check to see whether that's the case before returning.","label":0,"id":409895}
{"project":"presto-0.278","comment":"\/\/ acquire reference to scheduler before checking finalQueryInfo, because","label":0,"id":409896}
{"project":"presto-0.278","comment":"\/\/ If the lower 4 bytes match, the above calculation is correct; otherwise fallback to","label":0,"id":409897}
{"project":"presto-0.278","comment":"\/\/ tiny stripes","label":0,"id":409898}
{"project":"presto-0.278","comment":"\/\/ This step help to eliminate all the cases when the estimation is greater than q by 2","label":0,"id":409899}
{"project":"presto-0.278","comment":"\/\/doesnotmatter.example:9090\/api\/v1\/query?query=up[\" + getQueryChunkSizeDurationAsPrometheusCompatibleDurationString(config) + \"]\" + \"&time=\" + timeShouldBe).getQuery());","label":0,"id":409900}
{"project":"presto-0.278","comment":"\/**     * Write a long to the current entry;     *\/","label":0,"id":409901}
{"project":"presto-0.278","comment":"\/\/ TODO: figure out a type-agnostic way of dealing with this. Maybe add a special unary operator\/\/ that types can chose to implement, or piggyback on the existence of the negation operator","label":1,"id":409902}
{"project":"presto-0.278","comment":"\/\/ if there are encrypted columns and dwrfEncryptionInfo hasn't been set yet","label":0,"id":409903}
{"project":"presto-0.278","comment":"\/\/ create  analysis for the query we are describing.","label":0,"id":409904}
{"project":"presto-0.278","comment":"\/\/ assert that the streams are indeed ordered","label":0,"id":409905}
{"project":"presto-0.278","comment":"\/** * Remove key k and its corresponding value from the map * * @param k key * @return The old value for key k before it's removed *\/","label":0,"id":409906}
{"project":"presto-0.278","comment":"\/**     * True if the type supports equalTo and hash.     *\/","label":0,"id":409907}
{"project":"presto-0.278","comment":"\/\/ Otherwise partition on any common columns if available","label":0,"id":409908}
{"project":"presto-0.278","comment":"\/\/ now we move to the start of the next day, and the counter should reset","label":0,"id":409909}
{"project":"presto-0.278","comment":"\/\/ Lambda expression below requires final variable, so we define a new variable parquetDataSource.","label":0,"id":409910}
{"project":"presto-0.278","comment":"\/\/ Catch all exceptions here since throwing an exception from executor#scheduleWithFixedDelay method","label":0,"id":409911}
{"project":"presto-0.278","comment":"\/\/ Otherwise,","label":0,"id":409912}
{"project":"presto-0.278","comment":"\/\/ Size of the first batch should equal to the initial batch size (set to MAX_BATCH_SIZE)","label":0,"id":409913}
{"project":"presto-0.278","comment":"\/\/ Use half the queue for any split","label":0,"id":409914}
{"project":"presto-0.278","comment":"\/\/ with generated classes and\/or dynamically-created MethodHandles.","label":0,"id":409915}
{"project":"presto-0.278","comment":"\/\/ Only users that are granted with \"admin\" role can create, drop and list roles\/\/ Alice is not granted with \"admin\" role","label":0,"id":409916}
{"project":"presto-0.278","comment":"\/\/ TODO: format block","label":1,"id":409917}
{"project":"presto-0.278","comment":"\/**     * This method should be called before {@link #appendAtChannel(int, Block, int)} to update the internal linked list, where     * {@link #appendAtChannel(int, Block, int)} is called for each channel that has a new entry to be added.     *\/","label":0,"id":409918}
{"project":"presto-0.278","comment":"\/\/ Test null value","label":0,"id":409919}
{"project":"presto-0.278","comment":"\/\/ old failed, shards present","label":0,"id":409920}
{"project":"presto-0.278","comment":"\/\/ Add a new driver to output the unmatched rows in an outer join.\/\/ We duplicate all of the factories above the JoinOperator (the ones reading from the joins),\/\/ and replace the JoinOperator with the OuterOperator (the one that produces unmatched rows).","label":0,"id":409921}
{"project":"presto-0.278","comment":"\/**     * Gets the key type of the given map type. Does not validate that the given type is a map.     *     * @param type A map type     * @return Key type of the map     * @throws IndexOutOfBoundsException If type is not a map     * @see Types#isMapType     *\/","label":0,"id":409922}
{"project":"presto-0.278","comment":"\/\/ there are still some positions to process therefore we need to retain page and account its memory","label":0,"id":409923}
{"project":"presto-0.278","comment":"\/\/ Keep in mind, though, that WO stats are very low level and tightly coupled to implementation.","label":0,"id":409924}
{"project":"presto-0.278","comment":"\/\/ Remove the row number domain because it is absorbed into the node","label":0,"id":409925}
{"project":"presto-0.278","comment":"\/** * Returns the remaining predicates after the tuple domain push down in getTableLayout(). This doesn't have overlap with the {@code predicate} and {@code discretePredicates}. * Note that if the predicate is fully pushed down to the connector, it may reference columns which are not in the output of the table scan if the columns are not used in the * downstream plan. *\/","label":0,"id":409926}
{"project":"presto-0.278","comment":"\/**     * Each LookupSource has it's own copy of OuterPositionTracker instance.     * Each of those OuterPositionTracker must be committed after last write     * and before first read.     * <p>     * All instances share visitedPositions array, but it is safe because each thread     * starts with visitedPositions filled with false values and marks only some positions     * to true. Since we don't care what will be the order of those writes to     * visitedPositions, writes can be without synchronization.     * <p>     * Memory visibility between last writes in commit() and first read in     * getVisitedPositions() is guaranteed by accessing AtomicLong referenceCount     * variables in those two methods.     *\/","label":0,"id":409927}
{"project":"presto-0.278","comment":"\/\/ aggregation, we don't need to rewrite symbols in the partitioning function","label":1,"id":409928}
{"project":"presto-0.278","comment":"\/\/ LambdaExpression, Cube, Rollup, and GroupingSets are not visited by the default traversal, so we visit them explicitly to capture any column references","label":0,"id":409929}
{"project":"presto-0.278","comment":"\/** * This method has to be called to initialize the local memory contexts. Otherwise, calls to methods * localUserMemoryContext(), localSystemMemoryContext(), etc. will fail. *\/","label":0,"id":409930}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to drop the specified view in this catalog.     *     * @throws AccessDeniedException if not allowed     *\/","label":0,"id":409931}
{"project":"presto-0.278","comment":"\/\/ nested array\/map\/row","label":0,"id":409932}
{"project":"presto-0.278","comment":"\/\/ disconnected graph, find new starting point","label":0,"id":409933}
{"project":"presto-0.278","comment":"\/** * @return true if value at {@code internalPosition - getOffsetBase()} is null *\/","label":0,"id":409934}
{"project":"presto-0.278","comment":"\/\/ for the smaller table (<200 partitions by default) connector fetches all the partitions id","label":0,"id":409935}
{"project":"presto-0.278","comment":"\/**     * The shift used to compute the segment associated with an index (equivalently, the logarithm of the segment size).     *\/","label":0,"id":409936}
{"project":"presto-0.278","comment":"\/\/ Skip the Dictionary\/RLE block node. The mapping info is not needed when creating buffers.\/\/ This is because the AbstractBlockEncodingBuffer is only created once, while position mapping for Dictionary\/RLE blocks\/\/ need to be done for every incoming block.","label":0,"id":409937}
{"project":"presto-0.278","comment":"\/\/ Assert that: (canFirstCoerceToSecond || canSecondCoerceToFirst) => commonSuperType.isPresent","label":0,"id":409938}
{"project":"presto-0.278","comment":"\/**     * Declare that createOperator will not be called any more for the specified Lifespan,     * and release any resources associated with this factory.     * <p>     * This method will be called only once for each Lifespan.     * Implementation doesn't need to worry about duplicate invocations.     * <p>     * It is guaranteed that this method will be invoked for all applicable driver groups     * before {@link #noMoreOperators()} is invoked.     *\/","label":0,"id":409939}
{"project":"presto-0.278","comment":"\/\/ This function reduces the 64 bit hashcode to [0, hashTableSize) uniformly. It first reduces the hashcode to 32 bit\/\/ integer x then normalize it to x \/ 2^32 * hashSize to reduce the range of x from [0, 2^32) to [0, hashTableSize)","label":0,"id":409940}
{"project":"presto-0.278","comment":"\/\/ TODO results from array_agg() are not deterministic so we just compare cardinality for the time being","label":1,"id":409941}
{"project":"presto-0.278","comment":"\/\/ Simple smoke tests for materialized partitioning\/\/ Comprehensive testing is done by TestHiveDistributedAggregationsWithExchangeMaterialization, TestHiveDistributedQueriesWithExchangeMaterialization\/\/ simple aggregation","label":0,"id":409942}
{"project":"presto-0.278","comment":"\/\/ TODO: do not limit the max size of blocks to read for now; enable the limit when the Hive connector is ready","label":1,"id":409943}
{"project":"presto-0.278","comment":"\/\/ Multi-linestring with adjacent paths is equivalent to a single linestring","label":0,"id":409944}
{"project":"presto-0.278","comment":"\/\/ Mismatched","label":0,"id":409945}
{"project":"presto-0.278","comment":"\/\/ Skip structural types. TODO: Evaluate Apache Iceberg's support for predicate on structural types","label":1,"id":409946}
{"project":"presto-0.278","comment":"\/** * Split filter expression into groups of conjuncts that depend on the same set of inputs, * then compile each group into FilterFunction. *\/","label":0,"id":409947}
{"project":"presto-0.278","comment":"\/\/ replace table with a version that's implicitly coercible to the previous one","label":0,"id":409948}
{"project":"presto-0.278","comment":"\/\/ TEST: 1 to n right join between customers and orders. Limit(10) on the left table.","label":0,"id":409949}
{"project":"presto-0.278","comment":"\/\/ Rest of string","label":0,"id":409950}
{"project":"presto-0.278","comment":"\/\/ negative rounding of half (odd and even)","label":0,"id":409951}
{"project":"presto-0.278","comment":"\/\/ Groups we did not touch are null","label":0,"id":409952}
{"project":"presto-0.278","comment":"\/** * Converting Domain into TupleDomainFilter is expensive, hence, we use a cache keyed on Domain. * However, by default, the cache uses Domain.hashCode and Domain.equals to check if key already * exists. These methods are also expensive. Hence, we use this wrapper to replace Domain.hashCode * and Domain.equals with much cheaper identity hashCode and equals. These work because the Domain * objects come from HiveTableLayoutHandle which is reused across splits. *\/","label":0,"id":409953}
{"project":"presto-0.278","comment":"\/\/ ROUND_N short DECIMAL -> short DECIMAL","label":0,"id":409954}
{"project":"presto-0.278","comment":"\/** * Try to reserve the given number of bytes. Return value indicates whether the caller may use the requested memory. *\/","label":0,"id":409955}
{"project":"presto-0.278","comment":"\/\/ verify data channels","label":0,"id":409956}
{"project":"presto-0.278","comment":"\/\/ failed request took 7 seconds.","label":0,"id":409957}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to create the specified view. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":409958}
{"project":"presto-0.278","comment":"\/** * Gets the column family of the index table based on the given column family and qualifier. * * @param columnFamily Presto column family * @param columnQualifier Presto column qualifier * @return ByteBuffer of the given index column family *\/","label":0,"id":409959}
{"project":"presto-0.278","comment":"\/\/ DWRF doesn't support date type. Convert date columns to varchar for lineitem and orders.","label":0,"id":409960}
{"project":"presto-0.278","comment":"\/\/ Set the fileName future","label":0,"id":409961}
{"project":"presto-0.278","comment":"\/\/ Cursor now points to the next message.","label":0,"id":409962}
{"project":"presto-0.278","comment":"\/\/ * if a max string has a surrogate character, the max string is truncated","label":0,"id":409963}
{"project":"presto-0.278","comment":"\/\/ all rows minus nulls times range coverage (0%)","label":0,"id":409964}
{"project":"presto-0.278","comment":"\/\/ dispatcher","label":0,"id":409965}
{"project":"presto-0.278","comment":"\/\/ verify the view owner can select from the view even without special view creation privileges","label":0,"id":409966}
{"project":"presto-0.278","comment":"\/**     * Scans the index table, applying the index based on the given column constraints to return a set of tablet splits.     * <p>     * If this function returns true, the output parameter tabletSplits contains a list of TabletSplitMetadata objects.     * These in turn contain a collection of Ranges containing the exact row IDs determined using the index.     * <p>     * If this function returns false, the secondary index should not be used. In this case,     * either the accumulo session has disabled secondary indexing,     * or the number of row IDs that would be used by the secondary index is greater than the configured threshold     * (again retrieved from the session).     *     * @param schema Schema name     * @param table Table name     * @param session Current client session     * @param constraints All column constraints (this method will filter for if the column is indexed)     * @param rowIdRanges Collection of Accumulo ranges based on any predicate against a record key     * @param tabletSplits Output parameter containing the bundles of row IDs determined by the use of the index.     * @param serializer Instance of a row serializer     * @param auths Scan-time authorizations     * @return True if the tablet splits are valid and should be used, false otherwise     * @throws Exception If something bad happens. What are the odds?     *\/","label":0,"id":409967}
{"project":"presto-0.278","comment":"\/\/ A map that maps the column definition in terms of input relation column(s)","label":0,"id":409968}
{"project":"presto-0.278","comment":"\/\/ Disabling flaky test","label":0,"id":409969}
{"project":"presto-0.278","comment":"\/\/ table and update it here to the correct location.","label":0,"id":409970}
{"project":"presto-0.278","comment":"\/\/ write the name to the output","label":0,"id":409971}
{"project":"presto-0.278","comment":"\/\/ If the partition was spilled during processing, its position count will be considered twice.","label":0,"id":409972}
{"project":"presto-0.278","comment":"\/\/ 2. Iterate grouped-by keys and add the elements that's not in the set to the result","label":0,"id":409973}
{"project":"presto-0.278","comment":"\/\/ 1970-01-01 00:00:01.000000","label":0,"id":409974}
{"project":"presto-0.278","comment":"\/** * Returns the index of the median of the three positions. *\/","label":0,"id":409975}
{"project":"presto-0.278","comment":"\/**         * Size of a single segment of a BigArray         *\/","label":0,"id":409976}
{"project":"presto-0.278","comment":"\/** * Internal session properties are those defined by the connector itself. * These properties control certain aspects of connector's work. *\/","label":0,"id":409977}
{"project":"presto-0.278","comment":"\/** * @param nodePointer - index\/pointer into parallel arrays of data structs *\/","label":0,"id":409978}
{"project":"presto-0.278","comment":"\/\/ must be odd >= 3 (1 for each < and > marker, the rest for \"=\"","label":0,"id":409979}
{"project":"presto-0.278","comment":"\/** * Cartesian cross product of List of List. * For example, [[a], [b, c], [d]] becomes [[a,b,d], [a,c,d]] *\/","label":0,"id":409980}
{"project":"presto-0.278","comment":"\/**     * Task execution failed.     *\/","label":0,"id":409981}
{"project":"presto-0.278","comment":"\/\/ prefer predicates that appears earlier.","label":0,"id":409982}
{"project":"presto-0.278","comment":"\/** * This class performs merge of previously hash sorted pages streams. * <p> * Positions are compared using their hash value. It is possible * that two distinct values to have same hash value, thus returned * stream of Pages can have interleaved positions with same hash value. *\/","label":0,"id":409983}
{"project":"presto-0.278","comment":"\/\/ left = 3, right = 3 --> (3) expand and distribute both","label":0,"id":409984}
{"project":"presto-0.278","comment":"\/\/192.0.2.9\"), new NodeVersion(\"1\"), false, false, false);","label":0,"id":409985}
{"project":"presto-0.278","comment":"\/** * Defines a set of valid tuples according to the constraints on each of its constituent columns *\/","label":0,"id":409986}
{"project":"presto-0.278","comment":"\/\/ at this point, Task1 = 150k total bytes, Task2 = 100k total bytes","label":0,"id":409987}
{"project":"presto-0.278","comment":"\/\/ update max size per primitive column chunk","label":0,"id":409988}
{"project":"presto-0.278","comment":"\/\/ Copy of TestQueues with tests for db reconfiguration of resource groups","label":0,"id":409989}
{"project":"presto-0.278","comment":"\/\/ UPDATE table_name","label":0,"id":409990}
{"project":"presto-0.278","comment":"\/\/ Set builder is has a single channel which goes in channel 0, if hash is present, add a hashBlock to channel 1","label":0,"id":409991}
{"project":"presto-0.278","comment":"\/**     * Number of bytes already flushed to the data sink.     *\/","label":0,"id":409992}
{"project":"presto-0.278","comment":"\/\/ noinspection deprecation","label":0,"id":409993}
{"project":"presto-0.278","comment":"\/\/ Lookup variables can only be passed through if they are part of the partitioning","label":0,"id":409994}
{"project":"presto-0.278","comment":"\/\/ Spiller","label":0,"id":409995}
{"project":"presto-0.278","comment":"\/\/ TODO: fix coercion for JSON or PAGEFILE","label":1,"id":409996}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to set the specified system property.     *     * @throws AccessDeniedException if not allowed     *\/","label":0,"id":409997}
{"project":"presto-0.278","comment":"\/\/ Reset nested level positions before checking positionCount. Failing to do so may result in elementsBuffers having stale values when positionCount is 0.","label":0,"id":409998}
{"project":"presto-0.278","comment":"\/\/ containing the old data cannot be deleted until commit. Nor can the old data be moved","label":0,"id":409999}
{"project":"presto-0.278","comment":"\/\/ metastore counts null as a distinct value","label":0,"id":410000}
{"project":"presto-0.278","comment":"\/\/ The whole filter (summed over all columns) contains too much values or exceeds maxFilterSizeInBytes.","label":0,"id":410001}
{"project":"presto-0.278","comment":"\/**     * Ensures the given Accumulo namespace exist, creating it if necessary     *     * @param schema Presto schema (Accumulo namespace)     *\/","label":0,"id":410002}
{"project":"presto-0.278","comment":"\/\/ encode column ordering in the cassandra table comment field since there is no better place to store this","label":0,"id":410003}
{"project":"presto-0.278","comment":"\/\/ If needed, introduce a projection to constrain the outputs to what was originally expected\/\/ Some nodes are sensitive to what's produced (e.g., DistinctLimit node)","label":0,"id":410004}
{"project":"presto-0.278","comment":"\/** * Sets the element of the given big array of specified index. * * @param array a big array. * @param index a position in the big array. *\/","label":0,"id":410005}
{"project":"presto-0.278","comment":"\/\/ This iterator is crafted to return a valid partition for the first calls to\/\/ hasNext() and next(), and then it should throw for the second call to hasNext()","label":0,"id":410006}
{"project":"presto-0.278","comment":"\/\/ can be null","label":0,"id":410007}
{"project":"presto-0.278","comment":"\/\/ varchar literal is coerced to column (char) type","label":0,"id":410008}
{"project":"presto-0.278","comment":"\/\/ DWRF format duplicates the stripe footer and index streams, and stores them before the footer.","label":0,"id":410009}
{"project":"presto-0.278","comment":"\/\/ add source for pipeline 2, and mark as no more splits","label":0,"id":410010}
{"project":"presto-0.278","comment":"\/\/ However, for the purpose of validation, some global properties (single-node vs distributed)","label":0,"id":410011}
{"project":"presto-0.278","comment":"\/\/ The additional sequences IDs for a flat map aren't a consecutive range [1,N], the odd\/\/ sequence IDs have been removed.  This is to simulate the case where a file has been modified to delete\/\/ certain keys from the map by dropping the ColumnEncodings and the associated data.","label":0,"id":410012}
{"project":"presto-0.278","comment":"\/\/ should not happen, but be safe and fail the operator","label":0,"id":410013}
{"project":"presto-0.278","comment":"\/** * For a given fixed bit this function will return the closest available fixed bit *\/","label":0,"id":410014}
{"project":"presto-0.278","comment":"\/\/ By enabling test function namespace only on coordinator, we ensure that workers","label":0,"id":410015}
{"project":"presto-0.278","comment":"\/\/ 97-122: 'a'-'z'","label":0,"id":410016}
{"project":"presto-0.278","comment":"\/\/ boundary cases....\/\/ head projects but no members project -> trivial class, do not store\/\/ head does not project and one member projects -> trivial class, do not store\/\/ head does not project and more than one member projects -> pick a new head and update equivalence class","label":0,"id":410017}
{"project":"presto-0.278","comment":"\/\/ logically reevaluated for each source row.","label":0,"id":410018}
{"project":"presto-0.278","comment":"\/\/ Both with compression enabled and disabled","label":0,"id":410019}
{"project":"presto-0.278","comment":"\/\/ block thread in operator processing","label":0,"id":410020}
{"project":"presto-0.278","comment":"\/\/ Cassandra connector currently does not support create table","label":0,"id":410021}
{"project":"presto-0.278","comment":"\/**     * this function namespace manager does not support transaction.     *\/","label":0,"id":410022}
{"project":"presto-0.278","comment":"\/\/ c[2] >= 0 AND c[4] <= 0","label":0,"id":410023}
{"project":"presto-0.278","comment":"\/\/ Transition task to failed state without waiting for the final task info returned by the abort request.\/\/ The abort request is very likely not to succeed, leaving the task and the stage in the limbo state for\/\/ the entire duration of abort retries. If the task is failed, it is not that important to actually\/\/ record the final statistics and the final information about a failed task.","label":0,"id":410024}
{"project":"presto-0.278","comment":"\/\/ digest length","label":0,"id":410025}
{"project":"presto-0.278","comment":"\/** * At least one split has been added to pendingSplits set. *\/","label":0,"id":410026}
{"project":"presto-0.278","comment":"\/\/ get the pages elements from the buffer","label":0,"id":410027}
{"project":"presto-0.278","comment":"\/\/ getInputChannels","label":0,"id":410028}
{"project":"presto-0.278","comment":"\/** * From given base table partitions, removes all partitions that are already used to compute * related view partitions, only returning partitions that are not reflected in Materialized View. * We assume that given materialized view partitions are still fresh, * and in sync with base table partitions, i.e. related Materialized View partitions are already invalidated * when new base table partitions land. * @param baseTablePredicatesInfo Partitions info for base table * @param viewPredicatesInfo Partitions info for view * @param viewToBaseTablePredicatesKeyMap Partitions mapping from view to base table. Only includes direct mapping, i.e. excludes mapping from outer joins EQ clauses. * @param viewToBaseTableIndirectMap Extra partitions mapping from view to base table, computed from viewToBaseTableOnOuterJoinSideIndirectMappedPartitions() * @return Base Table partitions that have not been used to refresh view. *\/","label":0,"id":410029}
{"project":"presto-0.278","comment":"\/\/ buffer remaining bits","label":0,"id":410030}
{"project":"presto-0.278","comment":"\/\/ All RHS expressions are not unique","label":0,"id":410031}
{"project":"presto-0.278","comment":"\/\/ assign allNodes to a local variable for use in the callback below","label":0,"id":410032}
{"project":"presto-0.278","comment":"\/\/ compute the histogram","label":0,"id":410033}
{"project":"presto-0.278","comment":"\/\/ Filtering source does not change the effective predicate over the output symbols","label":0,"id":410034}
{"project":"presto-0.278","comment":"\/\/ The values are stored after the keys","label":0,"id":410035}
{"project":"presto-0.278","comment":"\/\/ Convert to standard sql name","label":0,"id":410036}
{"project":"presto-0.278","comment":"\/\/ change to new value if old value is not changed and new value has a newer version","label":0,"id":410037}
{"project":"presto-0.278","comment":"\/** * Assert the retained size in Bytes of {@param builder} with * {@param groupByHash}, * a list of {@param types} of the input pages, * a list of how many positions ({@param pagePositions}) of each page, and * a list of how many rows ({}@param rowCounts}) of each group. * Currently we do not assert the size of emptyPageReferenceSlots and assume the queue is always with INITIAL_CAPACITY = 4. *\/","label":1,"id":410038}
{"project":"presto-0.278","comment":"\/\/ the most significant bit in the result. That is why we shift 1L starting","label":0,"id":410039}
{"project":"presto-0.278","comment":"\/\/ partitioning but the other properties of the probe will be maintained.","label":0,"id":410040}
{"project":"presto-0.278","comment":"\/** * The corresponding Thrift implementation for {@link ServerInfoResource}. * Only \/state endpoint has been implemented. *\/","label":0,"id":410041}
{"project":"presto-0.278","comment":"\/\/ test structural values (tempto can't handle map and row)","label":0,"id":410042}
{"project":"presto-0.278","comment":"\/\/ 0: Dictionary(LongArrayBlock) 1: Array(Dictionary(VariableWidthBlock))","label":0,"id":410043}
{"project":"presto-0.278","comment":"\/\/ Throws if the bucket counts are different.\/\/ We currently cannot access these counts from HLL so we must\/\/ catch and rethrow a more useful exception","label":0,"id":410044}
{"project":"presto-0.278","comment":"\/** * Drop the specified function. * TODO: Support transaction *\/","label":1,"id":410045}
{"project":"presto-0.278","comment":"\/**     * Return driver groups who recently became known to not need any new drivers.     * Once it is determined that a driver group will not need any new driver groups,     * the driver group will be returned in the next invocation of this method.     * Once a driver group is returned, it is considered acknowledged, and will not be returned again.     * In other words, each driver group will be returned by this method only once.     *\/","label":0,"id":410046}
{"project":"presto-0.278","comment":"\/\/ read percentile","label":0,"id":410047}
{"project":"presto-0.278","comment":"\/\/ Again, there should be a \"full cover\" of all of the equalities used\/\/ THUS, we should be able to plug the generated equalities back in and get an equivalent set of equalities back the next time around","label":0,"id":410048}
{"project":"presto-0.278","comment":"\/** * Used to apply is [not] null filters to complex types, e.g. * a[1] is null AND a[3] is not null, where a is an array(array(T)). * <p> * In these case, the exact values are not known, but it is known whether they are * null or not. Furthermore, for some positions only nulls are allowed (a[1] is null), * for others only non-nulls (a[3] is not null), and for the rest both are allowed * (a[2] and a[N], where N > 3). *\/","label":0,"id":410049}
{"project":"presto-0.278","comment":"\/\/ Schedule 5 splits in another query. Since the new node does not have any splits, all 5 splits are assigned to the new node","label":0,"id":410050}
{"project":"presto-0.278","comment":"\/\/ check if request for splits was sent","label":0,"id":410051}
{"project":"presto-0.278","comment":"\/\/ Update probe indices and size","label":0,"id":410052}
{"project":"presto-0.278","comment":"\/\/ Empty blocks have no nulls and can also discard their null mask","label":0,"id":410053}
{"project":"presto-0.278","comment":"\/\/ 6","label":0,"id":410054}
{"project":"presto-0.278","comment":"\/**     * Converting Domain into TupleDomainFilter is expensive, hence, we use a cache keyed on Domain.     * However, by default, the cache uses Domain.hashCode and Domain.equals to check if key already     * exists. These methods are also expensive. Hence, we use this wrapper to replace Domain.hashCode     * and Domain.equals with much cheaper identity hashCode and equals. These work because the Domain     * objects come from HiveTableLayoutHandle which is reused across splits.     *\/","label":0,"id":410055}
{"project":"presto-0.278","comment":"\/\/ For example, the 'where c1=3 or c1=10002' clause should have two domains but it has none","label":0,"id":410056}
{"project":"presto-0.278","comment":"\/\/ tells client that buffer is complete","label":0,"id":410057}
{"project":"presto-0.278","comment":"\/\/ make sure we release marker after match or","label":0,"id":410058}
{"project":"presto-0.278","comment":"\/\/ * The list of suppliers of each part is captured into an array of JSON objects(about 4 suppliers for each part).","label":0,"id":410059}
{"project":"presto-0.278","comment":"\/**     * @param operatorFactory creates an Operator that should directly or indirectly contain GroupByHash     * @param getHashCapacity returns the hash table capacity for the input operator     * @param additionalMemoryInBytes the memory used in addition to the GroupByHash in the operator (e.g., aggregator)     *\/","label":0,"id":410060}
{"project":"presto-0.278","comment":"\/\/ unbox the boxed result","label":0,"id":410061}
{"project":"presto-0.278","comment":"\/\/ * If any child is \"not capable\", return \"not capable\"","label":0,"id":410062}
{"project":"presto-0.278","comment":"\/\/ We need to adjust the offset by startingPosition for presto because dataSource.readFully() started at startingPosition","label":0,"id":410063}
{"project":"presto-0.278","comment":"\/\/ different number of buckets","label":0,"id":410064}
{"project":"presto-0.278","comment":"\/\/ Some destination partitions might get 0 rows. In that case the BlockEncodingBuffer won't be created.","label":0,"id":410065}
{"project":"presto-0.278","comment":"\/\/ Accumulating operator allocates insignificant amount of memory (usually none) before first input page is received","label":0,"id":410066}
{"project":"presto-0.278","comment":"\/\/ column is the logical columns index for a table with n columns\/\/ This index range from 0 to n - 1","label":0,"id":410067}
{"project":"presto-0.278","comment":"\/\/127.0.0.1:8000\/v1\")));","label":0,"id":410068}
{"project":"presto-0.278","comment":"\/\/ attempt to find a cancelable sub stage","label":0,"id":410069}
{"project":"presto-0.278","comment":"\/\/ we explicitly disallow \"X\" as type name, so if the user arrived here,\/\/ it must be because that he intended to give a binaryLiteral instead, but\/\/ added whitespace between the X and quote","label":0,"id":410070}
{"project":"presto-0.278","comment":"\/\/ Find top, bottom, left and right tiles from center of circle","label":0,"id":410071}
{"project":"presto-0.278","comment":"\/\/ add two pages to the buffer queue","label":0,"id":410072}
{"project":"presto-0.278","comment":"\/\/ Build side finished and freed its memory allocations","label":0,"id":410073}
{"project":"presto-0.278","comment":"\/\/ The reference must be set to null afterwards to avoid unaccounted memory.","label":0,"id":410074}
{"project":"presto-0.278","comment":"\/\/ Ensure that the error message is deterministic","label":0,"id":410075}
{"project":"presto-0.278","comment":"\/**     * Compute the bits required to represent pth percentile value     *\/","label":0,"id":410076}
{"project":"presto-0.278","comment":"\/\/ TODO: This is a big hack.","label":1,"id":410077}
{"project":"presto-0.278","comment":"\/\/ we should be blocked","label":0,"id":410078}
{"project":"presto-0.278","comment":"\/\/ Checks to make sure that we properly handle duplicate field references in join clauses","label":0,"id":410079}
{"project":"presto-0.278","comment":"\/\/ this can happen with limit queries","label":0,"id":410080}
{"project":"presto-0.278","comment":"\/\/ read postscript size","label":0,"id":410081}
{"project":"presto-0.278","comment":"\/\/ States can be generated by StateCompiler given the they are simply classes with getters and setters.","label":0,"id":410082}
{"project":"presto-0.278","comment":"\/\/ Simulates the ATN by consuming input tokens and walking transitions.\/\/ The ATN can be in multiple states (similar to an NFA)","label":0,"id":410083}
{"project":"presto-0.278","comment":"\/\/ change negative offsets to 0","label":0,"id":410084}
{"project":"presto-0.278","comment":"\/\/ Cannot use switch case here, because javac will synthesize an inner class and cause IllegalAccessError","label":0,"id":410085}
{"project":"presto-0.278","comment":"\/*      From: X -> Y -> Z      To:   X -> Z     *\/","label":0,"id":410086}
{"project":"presto-0.278","comment":"\/\/ * Invocation of onLifespanExecutionFinished can be parallel and in any thread.","label":0,"id":410087}
{"project":"presto-0.278","comment":"\/\/ It is possible that the following loop would be a no-op for a particular lifespan.","label":0,"id":410088}
{"project":"presto-0.278","comment":"\/\/ ignore duplicate locations","label":0,"id":410089}
{"project":"presto-0.278","comment":"\/\/ the test creates a table with one column and 10 row groups","label":0,"id":410090}
{"project":"presto-0.278","comment":"\/\/ Matched","label":0,"id":410091}
{"project":"presto-0.278","comment":"\/\/ create missing writers","label":0,"id":410092}
{"project":"presto-0.278","comment":"\/\/ Matches that contains empty capturing groups\/\/ Empty block passed to lambda","label":0,"id":410093}
{"project":"presto-0.278","comment":"\/\/ Can not delegate to other callback while holding a lock on this","label":0,"id":410094}
{"project":"presto-0.278","comment":"\/\/ only for nested arguments that are","label":0,"id":410095}
{"project":"presto-0.278","comment":"\/\/ version 1 of T-Digest serialization","label":0,"id":410096}
{"project":"presto-0.278","comment":"\/\/ fill the buffer","label":0,"id":410097}
{"project":"presto-0.278","comment":"\/\/ are padded with whitespace","label":0,"id":410098}
{"project":"presto-0.278","comment":"\/\/ runtime overflow tests","label":0,"id":410099}
{"project":"presto-0.278","comment":"\/** * Sets the metadata update results received from the coordinator. * * @param results List of metadata update results *\/","label":0,"id":410100}
{"project":"presto-0.278","comment":"\/\/ vc > va > vb","label":0,"id":410101}
{"project":"presto-0.278","comment":"\/\/ execute over record set","label":0,"id":410102}
{"project":"presto-0.278","comment":"\/\/ When doing segment level query, we issue one query for every split (which contains the Pinot server to query and the segments to query).","label":0,"id":410103}
{"project":"presto-0.278","comment":"\/**     * The byte value of no {@link PageCodecMarker} values set to true     *\/","label":0,"id":410104}
{"project":"presto-0.278","comment":"\/\/ Each 64-bit long is 32-bit index for blocks + 32-bit position within block","label":0,"id":410105}
{"project":"presto-0.278","comment":"\/\/ Test in forward and reverse order to verify that ordering doesn't affect the output","label":0,"id":410106}
{"project":"presto-0.278","comment":"\/\/ Output the remaining page if we have anything buffered","label":0,"id":410107}
{"project":"presto-0.278","comment":"\/\/ Note: the HiveColumnHandle.hiveColumnIndex starts from '0' while the IcebergColumnHandle.id starts from '1'","label":0,"id":410108}
{"project":"presto-0.278","comment":"\/\/ Similar to Union","label":0,"id":410109}
{"project":"presto-0.278","comment":"\/\/ only consider leaf stages","label":0,"id":410110}
{"project":"presto-0.278","comment":"\/\/ this grouping should not survive a cross join","label":0,"id":410111}
{"project":"presto-0.278","comment":"\/\/ worst case is every bucket has a unique value, so preemptively keep this large enough to have a value for ever bucket","label":1,"id":410112}
{"project":"presto-0.278","comment":"\/\/ if the new key >= key don't add it","label":0,"id":410113}
{"project":"presto-0.278","comment":"\/**     * Encode the given map Block into the given Text object.     *     * @param text Text object to set     * @param type Map type     * @param block Map block     *\/","label":0,"id":410114}
{"project":"presto-0.278","comment":"\/\/ !(a OR b) ==> !a AND !b","label":0,"id":410115}
{"project":"presto-0.278","comment":"\/\/ specific value or null","label":0,"id":410116}
{"project":"presto-0.278","comment":"\/\/ second dictionary block is \"length(firstColumn)\"","label":0,"id":410117}
{"project":"presto-0.278","comment":"\/\/ Column encrypted with column key","label":0,"id":410118}
{"project":"presto-0.278","comment":"\/\/ these must be manually set in each class now; the mechanism to change and test was removed; the enum was kept in case we want to revisit. Retesting showed linear was superior","label":1,"id":410119}
{"project":"presto-0.278","comment":"\/\/ quickSort(order, values, start, low, limit);","label":0,"id":410120}
{"project":"presto-0.278","comment":"\/\/ number of valid entries in keyIndices array","label":0,"id":410121}
{"project":"presto-0.278","comment":"\/\/ TEST: add a superfulous unique constraint on the (custkey, comment) combination","label":0,"id":410122}
{"project":"presto-0.278","comment":"\/\/ per-transaction cache","label":0,"id":410123}
{"project":"presto-0.278","comment":"\/\/ also, this assumes that nodes in a cluster have identical storage capacity","label":0,"id":410124}
{"project":"presto-0.278","comment":"\/\/ don't record the stack","label":0,"id":410125}
{"project":"presto-0.278","comment":"\/\/ original except node","label":0,"id":410126}
{"project":"presto-0.278","comment":"\/**     * Split a freeform string into a host and port, without strict validation.     * <p>     * Note that the host-only formats will leave the port field undefined.  You     * can use {@link #withDefaultPort(int)} to patch in a default value.     *     * @param hostPortString the input string to parse.     * @return if parsing was successful, a populated HostAddress object.     * @throws IllegalArgumentException if nothing meaningful could be parsed.     *\/","label":0,"id":410127}
{"project":"presto-0.278","comment":"\/**     * This method can return false when there is not enough memory available to satisfy a positive delta allocation     * ({@code bytes} is greater than the bytes tracked by this LocalMemoryContext).     * <p\/>     *     * @return true if the bytes tracked by this LocalMemoryContext can be set to {@code bytes}.     *\/","label":0,"id":410128}
{"project":"presto-0.278","comment":"\/\/ this is really a way to do\/\/ quickSort(order, values, high, end, limit);","label":0,"id":410129}
{"project":"presto-0.278","comment":"\/\/ there is a benign race condition here were the lock holder\/\/ can be change between attempting to get lock and grabbing\/\/ the synchronized lock here, but in either case we want to\/\/ interrupt the lock holder thread","label":0,"id":410130}
{"project":"presto-0.278","comment":"\/\/ only one column","label":0,"id":410131}
{"project":"presto-0.278","comment":"\/\/ otherwise, use the previous offset","label":0,"id":410132}
{"project":"presto-0.278","comment":"\/**     * True if the type supports compareTo.     *\/","label":0,"id":410133}
{"project":"presto-0.278","comment":"\/\/ ensure buffer is big enough to hold current centroids and incoming values","label":0,"id":410134}
{"project":"presto-0.278","comment":"\/\/ Do not create tuple domains for every partition at the same time!","label":0,"id":410135}
{"project":"presto-0.278","comment":"\/**     * Sets the metadata update results received from the coordinator.     *     * @param results List of metadata update results     *\/","label":0,"id":410136}
{"project":"presto-0.278","comment":"\/\/ Any filter not true of null on a missing column","label":0,"id":410137}
{"project":"presto-0.278","comment":"\/\/ 3, 3 large with NOT push down","label":0,"id":410138}
{"project":"presto-0.278","comment":"\/**         * Rewrite single value InPredicates as equality if possible         *\/","label":0,"id":410139}
{"project":"presto-0.278","comment":"\/\/ if optimize flag is on, we will ways return evaluated result or throw.","label":0,"id":410140}
{"project":"presto-0.278","comment":"\/** * @throws UnsupportedOperationException if this connector does not support reading tables record at a time *\/","label":0,"id":410141}
{"project":"presto-0.278","comment":"\/\/ non-generic UDFs","label":0,"id":410142}
{"project":"presto-0.278","comment":"\/\/ Now, the following query should have two optimized joins in a single stage (both on the same nationkey), therefore expect only one optimized stage: 1.","label":0,"id":410143}
{"project":"presto-0.278","comment":"\/\/ col2.f1 (key in lowerBounds\/upperBounds is Iceberg ID)","label":0,"id":410144}
{"project":"presto-0.278","comment":"\/** * Releases all resources, and kills all schedulers. It is caller's responsibility to call this method when NativeExecutionTask is no longer needed. *\/","label":0,"id":410145}
{"project":"presto-0.278","comment":"\/\/ We first check already loaded ancestors of both types, to check if lowest common super type exists in them.\/\/ This way, we can avoid loading of parents which are not needed.","label":0,"id":410146}
{"project":"presto-0.278","comment":"\/\/ Adds the mask as the last channel","label":0,"id":410147}
{"project":"presto-0.278","comment":"\/\/ The name here should only be used for display (toString)","label":0,"id":410148}
{"project":"presto-0.278","comment":"\/\/ row type","label":0,"id":410149}
{"project":"presto-0.278","comment":"\/\/ if there are no parameters skip this test","label":0,"id":410150}
{"project":"presto-0.278","comment":"\/\/ 4 left","label":0,"id":410151}
{"project":"presto-0.278","comment":"\/\/ NOT support engine","label":0,"id":410152}
{"project":"presto-0.278","comment":"\/\/ When this method returns the MOVE_QUERY_TAG won't be visible in the tagged memory allocations map.\/\/ Because, we remove the tagged allocations from this MemoryPool for queryId, and then we reserve\/\/ N bytes with MOVE_QUERY_TAG in the targetMemoryPool, and then immediately overwrite it\/\/ with a put() call.","label":0,"id":410153}
{"project":"presto-0.278","comment":"\/\/ Find a mid-point","label":0,"id":410154}
{"project":"presto-0.278","comment":"\/\/ Some non okay http error code","label":0,"id":410155}
{"project":"presto-0.278","comment":"\/\/ presto on spark does not support role management","label":0,"id":410156}
{"project":"presto-0.278","comment":"\/\/ if the block is RLE or dictionary block, we may use dictionary processing","label":0,"id":410157}
{"project":"presto-0.278","comment":"\/\/ ordinal of columns (not counting sample weight column)","label":0,"id":410158}
{"project":"presto-0.278","comment":"\/\/ assertThat(builder, instanceOf(FloatColumnIndexBuilder.class));","label":0,"id":410159}
{"project":"presto-0.278","comment":"\/**     * Updates this equivalence class property with pairs of variable or column references deemed     * equivalent via the application of predicates.     * Side effect is that it sets updated instance variable true if any equivalence class heads changed.     * This can be used to optimize methods that maintain alignment with equivalence classes.     *     * @param firstExpression     * @param secondExpression     *\/","label":0,"id":410160}
{"project":"presto-0.278","comment":"\/** * A requested data conversion is not supported. *\/","label":0,"id":410161}
{"project":"presto-0.278","comment":"\/\/ Generate getter","label":0,"id":410162}
{"project":"presto-0.278","comment":"\/\/ even with streaming aggregation enabled, non-ordered table that can't be applied streaming aggregation would use hash based aggregation","label":0,"id":410163}
{"project":"presto-0.278","comment":"\/\/ In such case, WindowOperator will be inefficient because parallelism will go down.","label":0,"id":410164}
{"project":"presto-0.278","comment":"\/\/ to locate the tablet server for the provided Key.","label":0,"id":410165}
{"project":"presto-0.278","comment":"\/**     * Gets a value stored as a {@link Block}.     *     * @param channel argument number     * @param position row within the partition, starting at zero     *\/","label":0,"id":410166}
{"project":"presto-0.278","comment":"\/\/ however, here it's a raw constructor parameter, so adding this safety check","label":0,"id":410167}
{"project":"presto-0.278","comment":"\/\/ The variable argument functions mechanism requires that all the arguments are of exactly same type. We cannot enforce that base must match but parameters may differ.","label":0,"id":410168}
{"project":"presto-0.278","comment":"\/\/ notice that a || !a cannot be easily optimized away in SQL since we have to handle if a is unknown (null).","label":0,"id":410169}
{"project":"presto-0.278","comment":"\/\/ only update the block if the array changed to prevent creation of new Block objects, since\/\/ the engine currently uses identity equality to test if dictionaries are the same","label":0,"id":410170}
{"project":"presto-0.278","comment":"\/* esc *\/","label":0,"id":410171}
{"project":"presto-0.278","comment":"\/\/ Double and float inequality filter","label":0,"id":410172}
{"project":"presto-0.278","comment":"\/\/ For unpartitioned table, this method augments the location field of the table\/\/ to the staging location.\/\/ This way, if the table is accessed in an ongoing transaction, staged data\/\/ can be found and accessed.","label":0,"id":410173}
{"project":"presto-0.278","comment":"\/\/ and the values in that map are Domains which hold the timestamp predicate range info","label":0,"id":410174}
{"project":"presto-0.278","comment":"\/\/ do we have a valid hours offset time zone?","label":0,"id":410175}
{"project":"presto-0.278","comment":"\/\/ TODO Construct predicate like AddExchanges's LayoutConstraintEvaluator","label":1,"id":410176}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to create the specified schema in this catalog. * * @throws AccessDeniedException if not allowed *\/","label":0,"id":410177}
{"project":"presto-0.278","comment":"\/** * Maximum length of a binary value stored in an index. *\/","label":0,"id":410178}
{"project":"presto-0.278","comment":"\/\/ acknowledge pages first, out side of locks to not trigger callbacks while holding the lock","label":0,"id":410179}
{"project":"presto-0.278","comment":"\/\/ arbitrary","label":0,"id":410180}
{"project":"presto-0.278","comment":"\/*         * This Project is useful for cases when we aggregate on distinct and non-distinct values of same symbol, eg:         *  select a, sum(b), count(c), sum(distinct c) group by a         * Without this Project, we would count additional values for count(c)         *         * This method also populates maps of old to new symbols. For each key of outputNonDistinctAggregateSymbols,         * Higher level aggregation node's aggregation <key, AggregateExpression> will now have to run AggregateExpression on value of outputNonDistinctAggregateSymbols         * Same for outputDistinctAggregateSymbols map         *\/","label":0,"id":410181}
{"project":"presto-0.278","comment":"\/**     * TGS must have the server principal of the form \"krbtgt\/FOO@FOO\".     *     * @return true or false     *\/","label":0,"id":410182}
{"project":"presto-0.278","comment":"\/\/ generate bytecode for SQL function","label":0,"id":410183}
{"project":"presto-0.278","comment":"\/\/ Only propagate serialization schema configs by default","label":0,"id":410184}
{"project":"presto-0.278","comment":"\/**     * Build an expression string used for partition filtering in {@link GetPartitionsRequest}     * <pre>     * Ex: partition keys: ['a', 'b']     *     partition values: ['1', '2']     *     expression: (a='1') AND (b='2')     *     * Partial specification ex:     *      partition values: ['', '2']     *      expression: (b='2')     * <\/pre>     *     * @param partitionKeys List of partition keys to filter on     * @param partitionValues Full or partial list of partition values to filter on. Keys without filter should be empty string.     *\/","label":0,"id":410185}
{"project":"presto-0.278","comment":"\/\/ LIST<INT>","label":0,"id":410186}
{"project":"presto-0.278","comment":"\/* zero or one time '?' *\/","label":0,"id":410187}
{"project":"presto-0.278","comment":"\/\/ then we will get an UNKNOWN_METHOD error.","label":0,"id":410188}
{"project":"presto-0.278","comment":"\/** * Iterate over position links. When there are no more position -1 is returned. *\/","label":0,"id":410189}
{"project":"presto-0.278","comment":"\/** * common mode for new table or existing table (both new and existing partition) and when staging directory is enabled *\/","label":0,"id":410190}
{"project":"presto-0.278","comment":"\/\/ loading of the NetworkLocationCache","label":0,"id":410191}
{"project":"presto-0.278","comment":"\/\/ add a split","label":0,"id":410192}
{"project":"presto-0.278","comment":"\/\/ expectedStringStatistics (or the min\/max of it) could be null while the actual one might not because","label":0,"id":410193}
{"project":"presto-0.278","comment":"\/\/ Do not distribute boolean expressions if there are any non-deterministic elements\/\/ TODO: This can be optimized further if non-deterministic elements are not repeated","label":1,"id":410194}
{"project":"presto-0.278","comment":"\/\/ final topN requires that all data be in one stream\/\/ also, a final changes the input organization completely, so we do not pass through parent preferences","label":0,"id":410195}
{"project":"presto-0.278","comment":"\/\/ quote has already been matched\/\/ seek until we see the close quote","label":0,"id":410196}
{"project":"presto-0.278","comment":"\/\/ did everyone get the same index or maybe there was some skew which could be prevent on the operator level etc.).","label":0,"id":410197}
{"project":"presto-0.278","comment":"\/** * A collection of discrete predicates describing the data in this layout. The union of * these predicates is expected to be equivalent to the overall predicate returned * by {@link #getPredicate()}. They may be used by the engine for further optimizations. *\/","label":0,"id":410198}
{"project":"presto-0.278","comment":"\/\/ last dictionary not effective, so dictionary processing is disabled again","label":0,"id":410199}
{"project":"presto-0.278","comment":"\/**     * Return a table to predicates map. Map key is materialized view name or base table name.     *\/","label":0,"id":410200}
{"project":"presto-0.278","comment":"\/\/ Values associated with one key are direct encoded, and all other keys are","label":0,"id":410201}
{"project":"presto-0.278","comment":"\/**     * Signals that transformation requires more data in order to continue and no result has been produced.     * {@link #process()} will be called with a new input element or with {@link Optional#empty()} if there     * are no more elements.     *\/","label":0,"id":410202}
{"project":"presto-0.278","comment":"\/\/ Check if the left side and right side are both ordered by the join columns","label":0,"id":410203}
{"project":"presto-0.278","comment":"\/\/ so hasData() will return false, and this method can return -1","label":0,"id":410204}
{"project":"presto-0.278","comment":"\/\/ Both Left and Right child empty and full outer join.","label":0,"id":410205}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to create the specified view in this catalog. * * @throws AccessDeniedException if not allowed *\/","label":0,"id":410206}
{"project":"presto-0.278","comment":"\/\/ Don't augment the location for partitioned tables,","label":0,"id":410207}
{"project":"presto-0.278","comment":"\/\/ 'f' + 1","label":0,"id":410208}
{"project":"presto-0.278","comment":"\/\/ query is now done, so abort any work that is still running","label":0,"id":410209}
{"project":"presto-0.278","comment":"\/\/ Remove the operator summaries as OperatorInfo (especially ExchangeClientStatus) can hold onto a large amount of memory","label":0,"id":410210}
{"project":"presto-0.278","comment":"\/\/ test time with time zone","label":0,"id":410211}
{"project":"presto-0.278","comment":"\/** * Returns the strict intersection of the TupleDomains. * The resulting TupleDomain represents the set of tuples that would be valid * in both TupleDomains. *\/","label":0,"id":410212}
{"project":"presto-0.278","comment":"\/\/ Current cost heuristic:","label":0,"id":410213}
{"project":"presto-0.278","comment":"\/\/ output size from the operators between the join and the table scan as much as possible when comparing the sizes of the join sides.","label":0,"id":410214}
{"project":"presto-0.278","comment":"\/\/ encode the signed number as a positive integer","label":0,"id":410215}
{"project":"presto-0.278","comment":"\/** * This class is for generating the schema for environment without delta delete *\/","label":0,"id":410216}
{"project":"presto-0.278","comment":"\/\/ valid nonempty geometries should return as is.","label":0,"id":410217}
{"project":"presto-0.278","comment":"\/** * Creates a Base32 codec used for decoding and encoding. * <p> * When encoding the line length is 0 (no chunking). * <\/p> * * @param useHex if {@code true} then use Base32 Hex alphabet * @param pad byte used as padding byte. *\/","label":0,"id":410218}
{"project":"presto-0.278","comment":"\/\/ nextToken() returns null if the input is parsed correctly,\/\/ but will throw an exception if there are trailing characters.","label":0,"id":410219}
{"project":"presto-0.278","comment":"\/\/ threshold - (operator11 + operator12) => 5 - (3 + 3) = 1 bytes to revoke","label":0,"id":410220}
{"project":"presto-0.278","comment":"\/** * No splits have been added to pendingSplits set. *\/","label":0,"id":410221}
{"project":"presto-0.278","comment":"\/** * Reverses an array in-place. * * @param order The array to reverse *\/","label":0,"id":410222}
{"project":"presto-0.278","comment":"\/\/ * if you hold a read lock but not a write lock, you can do any of the above three operations, but you may","label":0,"id":410223}
{"project":"presto-0.278","comment":"\/\/ filter functions with join predicate pushdown","label":0,"id":410224}
{"project":"presto-0.278","comment":"\/\/ TEST: n to m  full join between values(1) and values(1) - maxcard(1) should get propagated.","label":0,"id":410225}
{"project":"presto-0.278","comment":"\/\/ Canonicalize constraint by removing constants when column is a partition key. This assumes","label":0,"id":410226}
{"project":"presto-0.278","comment":"\/\/ %U Week (00..53), where Sunday is the first day of the week","label":0,"id":410227}
{"project":"presto-0.278","comment":"\/\/ so we treat any exception as an error","label":0,"id":410228}
{"project":"presto-0.278","comment":"\/\/ Verify recorded shard","label":0,"id":410229}
{"project":"presto-0.278","comment":"\/**     * Gets the element of this big array at specified index and then sets the provided     * replacement value to the same index     *     * @param index a position in this big array.     *     * @return the previously stored value for the specified index     *\/","label":0,"id":410230}
{"project":"presto-0.278","comment":"\/\/ may be longer, so we choose max of (x * y \/ 2) and (y). We than add the length we've added to basic length of source (x)","label":0,"id":410231}
{"project":"presto-0.278","comment":"\/\/ ensure that no output fields are referenced from ORDER BY clause","label":0,"id":410232}
{"project":"presto-0.278","comment":"\/\/ Hadoop path strips trailing slashes from the path string,","label":0,"id":410233}
{"project":"presto-0.278","comment":"\/\/ assert that the streams are indeed ordered\/\/ ordered streams come at the head of the all data streams","label":0,"id":410234}
{"project":"presto-0.278","comment":"\/\/ VARINT is returned as a string","label":0,"id":410235}
{"project":"presto-0.278","comment":"\/\/ Hive connector only supports metadata delete. It does not support generic row-by-row deletion.","label":0,"id":410236}
{"project":"presto-0.278","comment":"\/\/ try creating it again from another transaction with ignoreExisting=false","label":0,"id":410237}
{"project":"presto-0.278","comment":"\/\/ Handles queries like: `eventDate <  TIMESTAMP '2014-01-31 00:00:00 UTC'`","label":0,"id":410238}
{"project":"presto-0.278","comment":"\/** * Provides the logical properties for a LimitNode. The properties reflect the application of a limit N to the source properties. * * @param limitNode * @return The logical properties for a LimitNode. *\/","label":0,"id":410239}
{"project":"presto-0.278","comment":"\/\/ This is a heuristic to detect whether the retained size of cachedInstance is bounded.\/\/ * The test runs at least 1000 iterations.\/\/ * The test passes if max retained size doesn't refresh after\/\/ 4x the number of iterations when max was last updated.\/\/ * The test fails if retained size reaches 1MB.\/\/ Note that 1MB is arbitrarily chosen and may be increased if a function implementation\/\/ legitimately needs more.","label":0,"id":410240}
{"project":"presto-0.278","comment":"\/\/ direct and dictionary materialized","label":0,"id":410241}
{"project":"presto-0.278","comment":"\/\/ map","label":0,"id":410242}
{"project":"presto-0.278","comment":"\/\/ This is well handled by Presto execution engine.","label":0,"id":410243}
{"project":"presto-0.278","comment":"\/\/ This guarantees recording will happen once and only once regardless of whether dictionary processing was attempted and whether it succeeded.","label":0,"id":410244}
{"project":"presto-0.278","comment":"\/\/ Two forms of EOF as far as Base32 decoder is concerned: actual","label":0,"id":410245}
{"project":"presto-0.278","comment":"\/** * Initialize iteration over position links. Returns first potentially eligible * join position starting from (and including) position argument. * <p> * When there are no more position -1 is returned *\/","label":0,"id":410246}
{"project":"presto-0.278","comment":"\/\/ INVARIANT. DistinctLimit with nationkey as distinct symbol.","label":0,"id":410247}
{"project":"presto-0.278","comment":"\/\/ If metrics are not enabled","label":0,"id":410248}
{"project":"presto-0.278","comment":"\/\/ Only zone-offset timezones are supported (TODO remove political timezones support for TIME WITH TIME ZONE)","label":1,"id":410249}
{"project":"presto-0.278","comment":"\/\/ if this buffer is finished, notify the client of this, so the client","label":0,"id":410250}
{"project":"presto-0.278","comment":"\/\/ Zero limit","label":0,"id":410251}
{"project":"presto-0.278","comment":"\/\/ state should not change","label":0,"id":410252}
{"project":"presto-0.278","comment":"\/\/ Java's long hash function just XORs itself right shifted 32.\/\/ This is used for bucketing, so if you have 2^k buckets, this only\/\/ keeps the k lowest bits.  This puts the highest entropy bits\/\/ (finest resolution x and y bits) in places that contribute to the\/\/ low bits of the hash.","label":0,"id":410253}
{"project":"presto-0.278","comment":"\/\/ Return the one with smallest K so resolution is not lost. This loss would happen in the case","label":0,"id":410254}
{"project":"presto-0.278","comment":"\/\/ In some zones systems, these will start with UTC, GMT or UT.","label":0,"id":410255}
{"project":"presto-0.278","comment":"\/** * Return the metadata for the specified table handle. * * @throws RuntimeException if table handle is no longer valid *\/","label":0,"id":410256}
{"project":"presto-0.278","comment":"\/** * Signals that process has yielded. {@link #process()} will be called again later. *\/","label":0,"id":410257}
{"project":"presto-0.278","comment":"\/\/ no filter implies output is required","label":0,"id":410258}
{"project":"presto-0.278","comment":"\/\/ Read directly: allows better inspection of the bit sets (helped to fix a lot of bugs)","label":0,"id":410259}
{"project":"presto-0.278","comment":"\/\/ TODO: what if a new connector is added by an existing one","label":1,"id":410260}
{"project":"presto-0.278","comment":"\/\/ visit annotations","label":0,"id":410261}
{"project":"presto-0.278","comment":"\/\/ One split placed on each node","label":0,"id":410262}
{"project":"presto-0.278","comment":"\/\/ Jackson correctly returns 0 for scalar nodes","label":0,"id":410263}
{"project":"presto-0.278","comment":"\/\/ identifier should never be reachable with the exception of lambda within VALUES (#9711)","label":0,"id":410264}
{"project":"presto-0.278","comment":"\/\/ Multi-linestring with one path is equivalent to a single linestring","label":0,"id":410265}
{"project":"presto-0.278","comment":"\/\/ fire failed event with cause","label":0,"id":410266}
{"project":"presto-0.278","comment":"\/\/ Presto Query Engine does not support Map with Null keys.\/\/ Presto ORC reader and Writer are used as library in some other\/\/ projects and it requires null keys to be supported in the Map.","label":0,"id":410267}
{"project":"presto-0.278","comment":"\/\/ and determine the input index and type of bucketing columns","label":0,"id":410268}
{"project":"presto-0.278","comment":"\/\/ Then drop a full shard that contains column already dropped","label":0,"id":410269}
{"project":"presto-0.278","comment":"\/\/ ....","label":0,"id":410270}
{"project":"presto-0.278","comment":"\/\/ spill one","label":0,"id":410271}
{"project":"presto-0.278","comment":"\/\/ read entire table","label":0,"id":410272}
{"project":"presto-0.278","comment":"\/\/ transient_lastDdlTime is the parameter recording the latest ddl time.","label":0,"id":410273}
{"project":"presto-0.278","comment":"\/\/ calling getRegionSizeInBytes(p, 1) of the array block can lead to calling getRegionSizeInBytes with an arbitrary length for the dictionary block,","label":0,"id":410274}
{"project":"presto-0.278","comment":"\/\/ reindex the dictionary","label":0,"id":410275}
{"project":"presto-0.278","comment":"\/** * Process the task either fully, or in part. * * @return a finished status if the task is complete, otherwise includes a continuation future to indicate * when it should be continued to be processed. *\/","label":0,"id":410276}
{"project":"presto-0.278","comment":"\/\/ We will add the hashtable size to the retained size even if it's not built yet. This could be overestimating\/\/ but is necessary to avoid reliability issues. Currently the memory counting framework only pull the retained\/\/ size once for each operator so updating in the middle of the processing would not work.","label":0,"id":410277}
{"project":"presto-0.278","comment":"\/\/ source stats are unknown","label":0,"id":410278}
{"project":"presto-0.278","comment":"\/\/ when worker requirement is met, wait for query execution to finish construction and then start the execution","label":0,"id":410279}
{"project":"presto-0.278","comment":"\/** * Gets the fully-qualified index metrics table name for the given table. * * @param schema Schema name * @param table Table name * @return Qualified index metrics table name *\/","label":0,"id":410280}
{"project":"presto-0.278","comment":"\/\/ spill since revocable memory could not be converted to user memory immediately\/\/ TODO: this should be asynchronous","label":1,"id":410281}
{"project":"presto-0.278","comment":"\/\/ combine common predicates and remaining predicates to flipped nested form. For example: [[a], [b], [ (c || d), (e || f)]","label":0,"id":410282}
{"project":"presto-0.278","comment":"\/\/ TryExpressions should not be pushed down. However they are now being handled as lambda\/\/ passed to a FunctionCall now and should not affect predicate push down. So we want to make\/\/ sure the conjuncts are not TryExpressions.","label":0,"id":410283}
{"project":"presto-0.278","comment":"\/**     * Converts this {@link MaterializedResult} to a new one, representing the data using the same type domain as returned by {@code TestingPrestoClient}.     *\/","label":0,"id":410284}
{"project":"presto-0.278","comment":"\/\/ Leaf nodes start at 0, root is the last element.","label":0,"id":410285}
{"project":"presto-0.278","comment":"\/\/ Forked from org.elasticsearch.common.joda.Joda","label":0,"id":410286}
{"project":"presto-0.278","comment":"\/\/ Compute stats before acquiring the lock","label":0,"id":410287}
{"project":"presto-0.278","comment":"\/\/ ordered is required to be a single stream, so in this ordered case SINGLE is\/\/ considered satisfactory for MULTIPLE and FIXED","label":0,"id":410288}
{"project":"presto-0.278","comment":"\/\/ convert column data to thrift (\"write step\")","label":0,"id":410289}
{"project":"presto-0.278","comment":"\/\/ try again before failing","label":0,"id":410290}
{"project":"presto-0.278","comment":"\/\/ This shouldn't happen, but in case it does, return a reasonable generic message.","label":0,"id":410291}
{"project":"presto-0.278","comment":"\/\/ Filter out duplicate rows and return the page with distinct rows","label":0,"id":410292}
{"project":"presto-0.278","comment":"\/\/ TODO move spill tracking to the new memory tracking framework","label":1,"id":410293}
{"project":"presto-0.278","comment":"\/\/ it is the first referenced slice","label":0,"id":410294}
{"project":"presto-0.278","comment":"\/**     * Revokes the specified privilege on the specified table from the specified user     *\/","label":0,"id":410295}
{"project":"presto-0.278","comment":"\/\/ Explain verification do not fail in case of plan changes.","label":0,"id":410296}
{"project":"presto-0.278","comment":"\/\/ This block handles the case when a distinct aggregation is present in addition to another aggregation function.\/\/ E.g. `SELECT count(distinct COL_A), sum(COL_B) FROM myTable` to Druid as `SELECT distinctCount(COL_A), sum(COL_B) FROM myTable`","label":0,"id":410297}
{"project":"presto-0.278","comment":"\/\/ t2.bucket is in [0, 1000)","label":0,"id":410298}
{"project":"presto-0.278","comment":"\/** * A connector can have preferred shuffle layout for table write. * For example, Hive connector might prefer to shuffle on partitioned columns for partitioned unbucketed table. * * @apiNote this method and {@link #getNewTableLayout} cannot both return non-empty table layout. * @see #getPreferredShuffleLayoutForInsert *\/","label":0,"id":410299}
{"project":"presto-0.278","comment":"\/\/ and then gradually expanded until it reaches MAX_SEGMENT_LENGTH","label":0,"id":410300}
{"project":"presto-0.278","comment":"\/\/ swap in our scheme if the filtered fs is using a different scheme","label":0,"id":410301}
{"project":"presto-0.278","comment":"\/\/ Output: t1_a -> t2.a","label":0,"id":410302}
{"project":"presto-0.278","comment":"\/\/ Testing eliminate constant","label":0,"id":410303}
{"project":"presto-0.278","comment":"\/\/ verify prepared statements","label":0,"id":410304}
{"project":"presto-0.278","comment":"\/\/ This is the case when value node of FLAT_MAP doesn't have encoding for sequence 0","label":0,"id":410305}
{"project":"presto-0.278","comment":"\/**     * Get statistics for table for given columns and filtering constraint.     *\/","label":0,"id":410306}
{"project":"presto-0.278","comment":"\/\/ caller shouldn't close this context as it's managed by the OperatorContext","label":0,"id":410307}
{"project":"presto-0.278","comment":"\/\/ Initialize metadata","label":0,"id":410308}
{"project":"presto-0.278","comment":"\/\/ update join position","label":0,"id":410309}
{"project":"presto-0.278","comment":"\/\/ exclude formats that change table schema with serde","label":1,"id":410310}
{"project":"presto-0.278","comment":"\/\/ same IN query used for left, right and complex condition","label":0,"id":410311}
{"project":"presto-0.278","comment":"\/\/ Add one partition with statistics indicating that it has no rows.","label":0,"id":410312}
{"project":"presto-0.278","comment":"\/\/ Step 2: Initialize function","label":0,"id":410313}
{"project":"presto-0.278","comment":"\/\/ Vertical Tab","label":0,"id":410314}
{"project":"presto-0.278","comment":"\/** * Thrown when a required JDBC method is not yet implemented. *\/","label":0,"id":410315}
{"project":"presto-0.278","comment":"\/** * The table description supplier to use, default is FILE *\/","label":0,"id":410316}
{"project":"presto-0.278","comment":"\/\/ driver to output the unused rows in the lookup source","label":0,"id":410317}
{"project":"presto-0.278","comment":"\/** * Converts INTERSECT and EXCEPT queries into UNION ALL..GROUP BY...WHERE * Eg:  SELECT a FROM foo INTERSECT SELECT x FROM bar * <p\/> * => * <p\/> * SELECT a * FROM * (SELECT a, * COUNT(foo_marker) AS foo_cnt, * COUNT(bar_marker) AS bar_cnt * FROM * ( * SELECT a, true as foo_marker, null as bar_marker FROM foo * UNION ALL * SELECT x, null as foo_marker, true as bar_marker FROM bar * ) T1 * GROUP BY a) T2 * WHERE foo_cnt >= 1 AND bar_cnt >= 1; * <p> * Eg:  SELECT a FROM foo EXCEPT SELECT x FROM bar * <p\/> * => * <p\/> * SELECT a * FROM * (SELECT a, * COUNT(foo_marker) AS foo_cnt, * COUNT(bar_marker) AS bar_cnt * FROM * ( * SELECT a, true as foo_marker, null as bar_marker FROM foo * UNION ALL * SELECT x, null as foo_marker, true as bar_marker FROM bar * ) T1 * GROUP BY a) T2 * WHERE foo_cnt >= 1 AND bar_cnt = 0; *\/","label":0,"id":410318}
{"project":"presto-0.278","comment":"\/\/ one revocation request per-query\/memory pool is processed at a time.","label":0,"id":410319}
{"project":"presto-0.278","comment":"\/\/ 50-57 O-V","label":0,"id":410320}
{"project":"presto-0.278","comment":"\/\/ JDBC driver can return BigDecimal with lower scale than column's scale when there are trailing zeroes","label":0,"id":410321}
{"project":"presto-0.278","comment":"\/\/ expect lifespan committer not to be called and page ignored","label":0,"id":410322}
{"project":"presto-0.278","comment":"\/\/ Nullif expression with subquery","label":0,"id":410323}
{"project":"presto-0.278","comment":"\/\/ the last dictionary was used for more positions than were in the dictionary","label":0,"id":410324}
{"project":"presto-0.278","comment":"\/\/ Since there is no values in the defaultCaseBlock, the defaultCaseBlock will return FALSE.","label":0,"id":410325}
{"project":"presto-0.278","comment":"\/\/ This query is ambiguous. The result can be [[1], NULL] or [[1], [NULL]] depending on interpretation","label":0,"id":410326}
{"project":"presto-0.278","comment":"\/\/ we do not need any output from TransformWork for this case","label":0,"id":410327}
{"project":"presto-0.278","comment":"\/\/ creating a node is idempotent","label":0,"id":410328}
{"project":"presto-0.278","comment":"\/\/ rollback second delete for table1","label":0,"id":410329}
{"project":"presto-0.278","comment":"\/\/ Find the best equijoin clause so we sample both sides the same way optimally","label":0,"id":410330}
{"project":"presto-0.278","comment":"\/\/ filters at different levels","label":0,"id":410331}
{"project":"presto-0.278","comment":"\/\/ set the initial index just before the start of the string\/\/ this is to allow for the initial index increment","label":0,"id":410332}
{"project":"presto-0.278","comment":"\/\/ Comma is not a reserved keyword with or without quote\/\/ See https:\/\/cwiki.apache.org\/confluence\/display\/Hive\/LanguageManual+DDL#LanguageManualDDL-Keywords,Non-reservedKeywordsandReservedKeywords","label":0,"id":410333}
{"project":"presto-0.278","comment":"\/** * Given the query context, implementations can perform actions or ensure that all conditions * are ready for the query to execute. The returned <code>CompletableFuture<\/code> will indicate * when the query is ready to be queued for execution. If the returned future finishes successfully, * it will trigger the query to be queued and its failure will fail the query. *\/","label":0,"id":410334}
{"project":"presto-0.278","comment":"\/**     * Returns true if the metadata indicates that {@code table} has positive row count for the rows matching {@code tupleDomain}.     * This function could be expensive as it involves a blocking operation to obtain the table metadata.     *\/","label":0,"id":410335}
{"project":"presto-0.278","comment":"\/**     * Add a listener for the final stage info.  This notification is guaranteed to be fired only once.     * Listener is always notified asynchronously using a dedicated notification thread pool so, care should     * be taken to avoid leaking {@code this} when adding a listener in a constructor. Additionally, it is     * possible notifications are observed out of order due to the asynchronous execution.     *\/","label":0,"id":410336}
{"project":"presto-0.278","comment":"\/\/ note: partial aggregation function has no parameter","label":0,"id":410337}
{"project":"presto-0.278","comment":"\/\/ file can have 2 sections separated by a line of equals signs","label":0,"id":410338}
{"project":"presto-0.278","comment":"\/**     * A snapshot of {@link LookupJoinOperator#joinPosition} \"de-partitioned\", i.e. {@link LookupJoinOperator#joinPosition} is a join position     * with respect to (potentially) partitioned lookup source, while this value is a join position with respect to containing partition.     *\/","label":0,"id":410339}
{"project":"presto-0.278","comment":"\/** * Calculate the indices for each level. * * A given level contains a certain number of items.  We give it a capacity * equal to the next multiple of `degree`, so that each parent will have * an equal number (`degree`) of children.  This means the next level will * have `capacity\/degree` nodes, which yields a capacity equal to the next * multiple, and so on, until the number of items is 1. * * Since we are storing each node as 4 doubles, we will actually multiply * every index by 4. *\/","label":0,"id":410340}
{"project":"presto-0.278","comment":"\/\/ 2. Update shards table","label":0,"id":410341}
{"project":"presto-0.278","comment":"\/\/ write some data that can fit the initial capacity = 256","label":0,"id":410342}
{"project":"presto-0.278","comment":"\/\/ The grouping result should have key (nationkey)","label":0,"id":410343}
{"project":"presto-0.278","comment":"\/\/ column statistics for k1 should be merged together","label":0,"id":410344}
{"project":"presto-0.278","comment":"\/**     * We create a undirected graph where each node corresponds to a base table column.     * Edges represent mapping by JOIN criteria, UNION, INTERSECT etc.     * <p>     * For example, given SELECT column_a AS column_x FROM table_a JOIN table_b ON (table_a.column_a = table_b.column_b),     * (table_a.column_a, table_b.column_b) is an edge in the graph.     * <\/p>     *\/","label":0,"id":410345}
{"project":"presto-0.278","comment":"\/\/ the resulting method needs to return a boxed type","label":0,"id":410346}
{"project":"presto-0.278","comment":"\/**     * @return a blocked future when {@link WorkProcessor#isBlocked()} returned true.     *\/","label":0,"id":410347}
{"project":"presto-0.278","comment":"\/\/ Negative test.","label":0,"id":410348}
{"project":"presto-0.278","comment":"\/\/ Don't serialize this field because it can be big","label":0,"id":410349}
{"project":"presto-0.278","comment":"\/**     * Looks for the target sub array in the buffer scanning backwards starting at offset. Returns the     * index where the target is found or -1 if not found.     *\/","label":0,"id":410350}
{"project":"presto-0.278","comment":"\/\/ u2 * b * b + u1 * b - v1 * b * qhat >=  v0 * qhat - u0","label":0,"id":410351}
{"project":"presto-0.278","comment":"\/\/ skip capture variables and ConnectorSession","label":0,"id":410352}
{"project":"presto-0.278","comment":"\/\/ start query and make sure it is not finished","label":0,"id":410353}
{"project":"presto-0.278","comment":"\/\/ group having all null entries","label":0,"id":410354}
{"project":"presto-0.278","comment":"\/\/ Size of the data retrieved by read call to storage","label":0,"id":410355}
{"project":"presto-0.278","comment":"\/**     * Reserves the given number of bytes to spill. If more than the maximum, throws an exception.     *     * @throws ExceededSpillLimitException     *\/","label":0,"id":410356}
{"project":"presto-0.278","comment":"\/**     * Merges {@code metric} into this object with name {@code name}.     *\/","label":0,"id":410357}
{"project":"presto-0.278","comment":"\/\/ Anyways, we are good because the partition is not there anymore.","label":0,"id":410358}
{"project":"presto-0.278","comment":"\/\/ Only include fields in the description if they are actual constraints.","label":0,"id":410359}
{"project":"presto-0.278","comment":"\/\/ select schemas to use","label":0,"id":410360}
{"project":"presto-0.278","comment":"\/\/ for unencrypted uncompressed input read the entire input and discard the original sliceInput","label":0,"id":410361}
{"project":"presto-0.278","comment":"\/\/ Collect all file names","label":0,"id":410362}
{"project":"presto-0.278","comment":"\/\/ constant offset","label":0,"id":410363}
{"project":"presto-0.278","comment":"\/\/ Unsupported statement types","label":0,"id":410364}
{"project":"presto-0.278","comment":"\/\/ Do not hold the entire slice where the actual stats could be small","label":0,"id":410365}
{"project":"presto-0.278","comment":"\/** * The maximum resources a query can consume before being killed. *\/","label":0,"id":410366}
{"project":"presto-0.278","comment":"\/\/ Remove any features that had a constant value","label":0,"id":410367}
{"project":"presto-0.278","comment":"\/\/ which leads to hash collision","label":0,"id":410368}
{"project":"presto-0.278","comment":"\/\/ * The execution strategy of the plan node is ungrouped. And lifespan is task wide.","label":0,"id":410369}
{"project":"presto-0.278","comment":"\/\/ getLambda(Object[] capturedValues)","label":0,"id":410370}
{"project":"presto-0.278","comment":"\/\/ for simplicity keep the average row size the same as in the input","label":0,"id":410371}
{"project":"presto-0.278","comment":"\/\/ These functions, which are defined in the ODBC standard, are implemented within\/\/ the Simba JDBC and ODBC drivers.  The drivers translate them into equivalent Presto syntax.\/\/ The translated SQL is executed by Presto.  These tests do not make use of edge-case values or null\/\/ values because those code paths are covered by other (non-Simba specific) tests.","label":0,"id":410372}
{"project":"presto-0.278","comment":"\/\/ visit method annotations","label":0,"id":410373}
{"project":"presto-0.278","comment":"\/\/ * Each probe operator count as 1","label":0,"id":410374}
{"project":"presto-0.278","comment":"\/** * Given a logical expression, the goal is to push negation to the leaf nodes. * This only applies to propositional logic and comparison. this utility cannot be applied to high-order logic. * Examples of non-applicable cases could be f(a AND b) > 5 * * An applicable example: * *        NOT *         | *      ___OR_                          AND *     \/      \\                      \/      \\ *    NOT     OR        ==>        AND      AND *     |     \/  \\                 \/  \\     \/   \\ *    AND   c   NOT              a    b   NOT  d *   \/  \\        |                         | *  a    b       d                         c *\/","label":0,"id":410375}
{"project":"presto-0.278","comment":"\/\/ Just making sure that the table exists","label":0,"id":410376}
{"project":"presto-0.278","comment":"\/\/proxy.com:443\/v1\/proxy?uri=\";","label":0,"id":410377}
{"project":"presto-0.278","comment":"\/\/ ts1    join23","label":0,"id":410378}
{"project":"presto-0.278","comment":"\/\/ Map contains 4 elements.","label":0,"id":410379}
{"project":"presto-0.278","comment":"\/** * Special schema used when querying a Delta table by storage location. * Ex. SELECT * FROM delta.\"$PATH$\".\"s3:\/\/bucket\/path\/to\/table\". User is not able to list any tables * in this schema. It is just used to query a Delta table by storage location. *\/","label":0,"id":410380}
{"project":"presto-0.278","comment":"\/\/ currentNodeCapable:\/\/ Whether grouped execution is possible with the current node.\/\/ For example, a table scan is capable iff it supports addressable split discovery.\/\/ subTreeUseful:\/\/ Whether grouped execution is beneficial in the current node, or any node below it.\/\/ For example, a JOIN can benefit from grouped execution because build can be flushed early, reducing peak memory requirement.\/\/\/\/ In the current implementation, subTreeUseful implies currentNodeCapable.\/\/ In theory, this doesn't have to be the case. Take an example where a GROUP BY feeds into the build side of a JOIN.\/\/ Even if JOIN cannot take advantage of grouped execution, it could still be beneficial to execute the GROUP BY with grouped execution\/\/ (e.g. when the underlying aggregation's intermediate group state may be larger than aggregation output).","label":0,"id":410381}
{"project":"presto-0.278","comment":"\/** * Recursive function to find all address ranges within given value ranges. * <p\/> * Returns when the address range is either completely within or completely out of the value ranges. * Recurses to a smaller Z-order curve if the address range only partially overlaps with the value ranges. * * @param level the level of recursion on the Z-curve * @param startAddress the starting address of the current Z-curve level * @param totalCurveBits the amount of bits in the current Z-curve level * @param valueRanges the bounded input ranges for each value * @param zRangeIndexes the index values of <code>valueRanges<\/code> to search * @param addressRanges the return list that stores all found address ranges *\/","label":0,"id":410382}
{"project":"presto-0.278","comment":"\/\/ resolved differently since the lambdaDeclarationToVariableMap is identity based.","label":0,"id":410383}
{"project":"presto-0.278","comment":"\/\/ Doesn't have this element","label":0,"id":410384}
{"project":"presto-0.278","comment":"\/\/ for transactions with read and write, we only return the commit handle for write query.","label":0,"id":410385}
{"project":"presto-0.278","comment":"\/\/ This can lead to O(n * h) time complexity, where n is number of plan nodes, and h is height of plan tree. This","label":0,"id":410386}
{"project":"presto-0.278","comment":"\/**     * Optional method for the implementations to implement if they want to be informed about the finishing     * of queries (either successfully or unsuccessfully).     *\/","label":0,"id":410387}
{"project":"presto-0.278","comment":"\/\/ However, due to implementation details of SqlTaskExecution, it may defer instantiation of drivers.","label":0,"id":410388}
{"project":"presto-0.278","comment":"\/\/ enable SSL by default for standard port","label":0,"id":410389}
{"project":"presto-0.278","comment":"\/\/ about half of the objects are <= splitValue, the rest are >= next value","label":0,"id":410390}
{"project":"presto-0.278","comment":"\/\/ stats are the same for row group and stripe","label":0,"id":410391}
{"project":"presto-0.278","comment":"\/\/ force update if query manager is closed","label":0,"id":410392}
{"project":"presto-0.278","comment":"\/**     * Magic value indicating the absence of a port number.     *\/","label":0,"id":410393}
{"project":"presto-0.278","comment":"\/\/ and to make toString more friendly.","label":0,"id":410394}
{"project":"presto-0.278","comment":"\/\/ Extract frame","label":0,"id":410395}
{"project":"presto-0.278","comment":"\/\/ @Param({\"1\", \"5\", \"50\"})","label":0,"id":410396}
{"project":"presto-0.278","comment":"\/\/ Test not specific to Hive, but needs a connector supporting table creation","label":0,"id":410397}
{"project":"presto-0.278","comment":"\/\/ Get the internal map structure (MAP_KEY_VALUE)","label":0,"id":410398}
{"project":"presto-0.278","comment":"\/\/ add new transaction ID","label":0,"id":410399}
{"project":"presto-0.278","comment":"\/\/ Extract candidate IF expression from row expression","label":0,"id":410400}
{"project":"presto-0.278","comment":"\/\/ calculate size of non-dictionary columns by removing the buffered size of dictionary columns","label":0,"id":410401}
{"project":"presto-0.278","comment":"\/** * TODO: The getOutput method will call NativeExecutionTask APIs to: *  1. Submit the plan to the external process *  2. Call pollResult method to get latest buffered result. *  3. Call getTaskInfo method to get the TaskInfo and propagate it *  4. Deserialize the polled {@link SerializedPage} to {@link Page} and return it back *\/","label":1,"id":410402}
{"project":"presto-0.278","comment":"\/\/ defensive copy since this is passed into createGroupByHash","label":0,"id":410403}
{"project":"presto-0.278","comment":"\/\/ The needsUpdate flag needs to be set to false BEFORE adding the Future callback since callback might change the flag value\/\/ and does so without grabbing the instance lock.","label":0,"id":410404}
{"project":"presto-0.278","comment":"\/\/ ignore this dump","label":0,"id":410405}
{"project":"presto-0.278","comment":"\/\/ only if sequence ID > 0, we do a look up in sequenceToStreams","label":0,"id":410406}
{"project":"presto-0.278","comment":"\/\/ Test predicate move around","label":0,"id":410407}
{"project":"presto-0.278","comment":"\/\/ Therefore, we get the total number of Lifespans in the task, and deduct 1 if the task-wide one exists.","label":0,"id":410408}
{"project":"presto-0.278","comment":"\/\/ When the _source field is requested, we need to bypass column pruning when fetching the document","label":0,"id":410409}
{"project":"presto-0.278","comment":"\/\/ * when TaskSource indicate that no more splits will be produced for the plan node (and plan nodes that schedule before it","label":0,"id":410410}
{"project":"presto-0.278","comment":"\/\/ if the column is missing from the file, assign it a column number larger than the number of columns in the\/\/ file so the reader will fill it with nulls.  If the index is negative, i.e. this is a synthesized column like\/\/ a partitioning key, $bucket or $path, leave it as is.","label":0,"id":410411}
{"project":"presto-0.278","comment":"\/\/ We use the presence of the node in the map to indicate that we've already done","label":0,"id":410412}
{"project":"presto-0.278","comment":"\/\/ Append sorted pages","label":0,"id":410413}
{"project":"presto-0.278","comment":"\/\/ Exclude INTEGER because we don't collect column stats for INTEGER type.","label":0,"id":410414}
{"project":"presto-0.278","comment":"\/\/ TODO make it Optional","label":1,"id":410415}
{"project":"presto-0.278","comment":"\/\/ all done: no more new splits, no requests in progress","label":0,"id":410416}
{"project":"presto-0.278","comment":"\/\/ verify max","label":0,"id":410417}
{"project":"presto-0.278","comment":"\/\/ \"orders\" table is naturally grouped on orderkey\/\/ this grouping should survive inner and left joins and allow for streaming aggregation later\/\/ this grouping should not survive a cross join\/\/ inner join -> streaming aggregation","label":0,"id":410418}
{"project":"presto-0.278","comment":"\/\/ Negative Acknowledge","label":0,"id":410419}
{"project":"presto-0.278","comment":"\/\/ open next stripe","label":0,"id":410420}
{"project":"presto-0.278","comment":"\/** * Gets the Float value of the given Presto column. * * @param name Column name * @return Float value *\/","label":0,"id":410421}
{"project":"presto-0.278","comment":"\/\/ For each of the arguments, the invocation convention is required to be FAIL_ON_NULL","label":0,"id":410422}
{"project":"presto-0.278","comment":"\/\/ copy through all variables from child, except for hash variables not needed by the parent","label":1,"id":410423}
{"project":"presto-0.278","comment":"\/\/ Create a scanner over the metadata table, fetching the 'loc' column of the default tablet row","label":0,"id":410424}
{"project":"presto-0.278","comment":"\/** * Kafka specific {@link ConnectorTableHandle}. *\/","label":0,"id":410425}
{"project":"presto-0.278","comment":"\/\/ Only one indexed column predicate can be pushed down.","label":0,"id":410426}
{"project":"presto-0.278","comment":"\/\/ Test probe pages has more rows","label":0,"id":410427}
{"project":"presto-0.278","comment":"\/\/ The second condition is to destroy the driver if the state is NEED_DESTRUCTION","label":0,"id":410428}
{"project":"presto-0.278","comment":"\/\/example.com\/path1\/p.php?k1=v1&k2=v2&k3&k4#Ref1', 'k4')\", createVarcharType(53), \"\");","label":0,"id":410429}
{"project":"presto-0.278","comment":"\/\/ the only remote exchange in probe side should be below aggregation","label":0,"id":410430}
{"project":"presto-0.278","comment":"\/** * Murmur3 64-bit variant. This is essentially MSB 8 bytes of Murmur3 128-bit variant. * * @param data - input byte array * @param length - length of array * @param seed - seed. (default is 0) * @return - hashcode *\/","label":0,"id":410431}
{"project":"presto-0.278","comment":"\/** * Encrypts the contents of the input ByteBuffer into a new ByteBuffer instance. The returned instance will * be at position 0 and ready to read. *\/","label":0,"id":410432}
{"project":"presto-0.278","comment":"\/\/ There is not requirement to produce hash variables and only preference for variables","label":0,"id":410433}
{"project":"presto-0.278","comment":"\/\/ if we have no callback waiting, return early","label":0,"id":410434}
{"project":"presto-0.278","comment":"\/** * Convert a RowExpression predicate into an ExtractionResult consisting of: * 1) A successfully extracted TupleDomain * 2) An RowExpression fragment which represents the part of the original RowExpression that will need to be re-evaluated * after filtering with the TupleDomain. *\/","label":0,"id":410435}
{"project":"presto-0.278","comment":"\/\/ Optimizers above this don't understand local exchanges, so be careful moving this.","label":0,"id":410436}
{"project":"presto-0.278","comment":"\/\/ fail the buffer (i.e., cancel the query)","label":0,"id":410437}
{"project":"presto-0.278","comment":"\/\/ There are 4 types of operations on a partition: add, drop, alter (drop then add), insert existing.","label":0,"id":410438}
{"project":"presto-0.278","comment":"\/\/ syntactic forms (e.g., \"t.a\" vs \"a\"). Thus we need to enumerate grouping sets based on the underlying","label":0,"id":410439}
{"project":"presto-0.278","comment":"\/\/ analyze properties","label":0,"id":410440}
{"project":"presto-0.278","comment":"\/\/ PlanRemoteProjections only handles RowExpression so this need to run after TranslateExpressions\/\/ Rules applied after this need to handle locality of ProjectNode properly.","label":0,"id":410441}
{"project":"presto-0.278","comment":"\/\/ Lifespan 30:  A  [ ]  C   D","label":0,"id":410442}
{"project":"presto-0.278","comment":"\/\/ Take an example of comparing a `DATE` field to a `TIMESTAMP` literal:","label":0,"id":410443}
{"project":"presto-0.278","comment":"\/* * TODO Eventually we should only need to inline VariableReferenceExpression to RowExpression. We should remove this once https:\/\/github.com\/prestodb\/presto\/issues\/12828 is done. *\/","label":1,"id":410444}
{"project":"presto-0.278","comment":"\/**     * This logical properties builder should be used by PlanNodes that propagate their     * source properties and add a limit. For example, TopNNode and LimitNode.     *\/","label":0,"id":410445}
{"project":"presto-0.278","comment":"\/\/ Read the second element: an empty string. Set the dataStream in SliceDirectSelectiveStreamReader to null to simulate the conditions causing the problem.","label":0,"id":410446}
{"project":"presto-0.278","comment":"\/\/ default maxBufferSize = 5 * maxCentroidCount","label":0,"id":410447}
{"project":"presto-0.278","comment":"\/**     * Get the table handle provided by connector     *\/","label":0,"id":410448}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to drop the specified view in a catalog. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":410449}
{"project":"presto-0.278","comment":"\/\/ Print summary of queries sorted from most memory hungry to least memory hungry","label":0,"id":410450}
{"project":"presto-0.278","comment":"\/\/ read ranges","label":0,"id":410451}
{"project":"presto-0.278","comment":"\/\/ in default schema table name must not start with common prefix","label":0,"id":410452}
{"project":"presto-0.278","comment":"\/** * Get the encoding for this block. *\/","label":0,"id":410453}
{"project":"presto-0.278","comment":"\/\/ time field is `DATE`, try to convert time value from `TIMESTAMP` to `DATE`","label":0,"id":410454}
{"project":"presto-0.278","comment":"\/\/ divided by the number of partitions. This is because the latter could be greater than the positionCount when the number of partitions is 1 or positionCount is 1.","label":0,"id":410455}
{"project":"presto-0.278","comment":"\/\/ begin delete for table2","label":0,"id":410456}
{"project":"presto-0.278","comment":"\/\/ assert that driver group [1] is fully completed","label":0,"id":410457}
{"project":"presto-0.278","comment":"\/\/ now recurse, but arrange it so we handle the longer limit by tail recursion","label":0,"id":410458}
{"project":"presto-0.278","comment":"\/\/ Whether grouped execution is possible with the current node.","label":0,"id":410459}
{"project":"presto-0.278","comment":"\/\/ %W Weekday name (Sunday..Saturday)","label":0,"id":410460}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to access the specified catalog     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":410461}
{"project":"presto-0.278","comment":"\/\/ This can overflow\/underflow, but to maintain backward compatibility this is not bounds checked.","label":0,"id":410462}
{"project":"presto-0.278","comment":"\/\/ TODO merge this into MaterializedRow","label":1,"id":410463}
{"project":"presto-0.278","comment":"\/\/ The spillers release their memory reservations when they are closed, therefore at this point","label":0,"id":410464}
{"project":"presto-0.278","comment":"\/\/ 32-1*5 = 27","label":0,"id":410465}
{"project":"presto-0.278","comment":"\/\/ For example, locations which couldn't be located will be at the \"root\" location","label":0,"id":410466}
{"project":"presto-0.278","comment":"\/\/ clear interrupt status","label":0,"id":410467}
{"project":"presto-0.278","comment":"\/\/ in order to support multiple join nodes in the same plan fragment.","label":0,"id":410468}
{"project":"presto-0.278","comment":"\/\/\";","label":0,"id":410469}
{"project":"presto-0.278","comment":"\/\/ since it's bucketed by custkey, the local exchange would be removed when order based execution is enabled","label":0,"id":410470}
{"project":"presto-0.278","comment":"\/\/ TODO: This should be refactored, so that there's an optimizer that merges scan-filter-project into a single PlanNode","label":1,"id":410471}
{"project":"presto-0.278","comment":"\/** * Returns a MethodHandle corresponding to the specified constructor. * <p> * Warning: The way Oracle JVM implements producing MethodHandle for a constructor involves * creating JNI global weak references. G1 processes such references serially. As a result, * calling this method in a tight loop can create significant GC pressure and significantly * increase application pause time. *\/","label":0,"id":410472}
{"project":"presto-0.278","comment":"\/\/ 0, no need to multiply","label":0,"id":410473}
{"project":"presto-0.278","comment":"\/\/ even though by definition of concurrentLifespansPerTask they are already available.","label":0,"id":410474}
{"project":"presto-0.278","comment":"\/\/ empty probe side","label":0,"id":410475}
{"project":"presto-0.278","comment":"\/\/ flush","label":0,"id":410476}
{"project":"presto-0.278","comment":"\/** * Creates a new tuple descriptor containing all fields from this tuple descriptor * and all fields from the specified tuple descriptor. *\/","label":0,"id":410477}
{"project":"presto-0.278","comment":"\/\/ * Usefulness:","label":0,"id":410478}
{"project":"presto-0.278","comment":"\/\/ 'else' in GROUP BY clause","label":0,"id":410479}
{"project":"presto-0.278","comment":"\/\/ note b is VARCHAR, while a,c,d are BIGINT","label":0,"id":410480}
{"project":"presto-0.278","comment":"\/**         * This is special-cased for now as COUNT is the only non-associative         * function supported by materialized view rewrites. In the future, we will want to         * support more non-associative functions and explore more         * extensible options.         * <p>         * Functions in optimized materialized view queries are by default expanded to         * func(column_derived_from_func_in_mv). This only works for associative         * functions. Count is non-associative: COUNT(x \\ union y) != COUNT(Count(x), COUNT(y)).         * Rather, COUNT(x \\ union y) == SUM(COUNT(x), COUNT(y). This is what we do here.         *\/","label":0,"id":410481}
{"project":"presto-0.278","comment":"\/\/ this is to allow for the initial index increment","label":0,"id":410482}
{"project":"presto-0.278","comment":"\/\/ Intentional identity equals comparison","label":0,"id":410483}
{"project":"presto-0.278","comment":"\/\/ first getPositions","label":0,"id":410484}
{"project":"presto-0.278","comment":"\/\/ state properly. Due to this, we need push atleast 1 empty page to underlying","label":1,"id":410485}
{"project":"presto-0.278","comment":"\/\/ grouping on a key with non zero nulls fraction","label":0,"id":410486}
{"project":"presto-0.278","comment":"\/** * Use it in optimizer {@link com.facebook.presto.sql.planner.iterative.Rule} only if you truly do not have a better option * <p> * TODO: replace it with a support for plan (physical) properties in rules pattern matching *\/","label":1,"id":410487}
{"project":"presto-0.278","comment":"\/\/ case sensitivity","label":0,"id":410488}
{"project":"presto-0.278","comment":"\/\/ less loaded one. This prevents those issues and renders good enough load balance.","label":0,"id":410489}
{"project":"presto-0.278","comment":"\/**     * Midnight Jan 1st 1980. Uses the current time zone as the DOS format does not support time zones     * and will always assume the current zone.     *\/","label":0,"id":410490}
{"project":"presto-0.278","comment":"\/\/ if we got an output page, add it to the next operator","label":0,"id":410491}
{"project":"presto-0.278","comment":"\/**     * @param x in cartesian coordinate     * @param y in cartesian coordinate     * @param z in cartesian coordinate     *\/","label":0,"id":410492}
{"project":"presto-0.278","comment":"\/\/ of the arguments. Thus we extract and compare the variables of the COALESCE as a set rather than compare COALESCE directly.","label":0,"id":410493}
{"project":"presto-0.278","comment":"\/\/ MapBlockBuilder does not support concurrent threads, so synchronization is not required.","label":0,"id":410494}
{"project":"presto-0.278","comment":"\/\/\/\/ Nodes that rewrite and\/or drop symbols\/\/","label":0,"id":410495}
{"project":"presto-0.278","comment":"\/**     * Indicates whether the column at each index should be populated with the     * indices of its rows     *\/","label":0,"id":410496}
{"project":"presto-0.278","comment":"\/\/ since s3select only returns the required column, not the whole columns\/\/ we need to update the split schema to include only the required columns\/\/ otherwise, Serde could not deserialize output from s3select to row data correctly","label":0,"id":410497}
{"project":"presto-0.278","comment":"\/\/ we expect one side to be expression and other to be value.","label":0,"id":410498}
{"project":"presto-0.278","comment":"\/\/ Test EXCEPT","label":0,"id":410499}
{"project":"presto-0.278","comment":"\/\/ reusing the buffers.","label":0,"id":410500}
{"project":"presto-0.278","comment":"\/\/ 2 entries array.","label":0,"id":410501}
{"project":"presto-0.278","comment":"\/\/ TODO #7122: line 1:8: '00:39:05' is not a valid time literal","label":1,"id":410502}
{"project":"presto-0.278","comment":"\/\/ add added session functions","label":0,"id":410503}
{"project":"presto-0.278","comment":"\/\/ update the range","label":0,"id":410504}
{"project":"presto-0.278","comment":"\/**     * Flattens the subplan and returns all PlanFragments in the tree     *\/","label":0,"id":410505}
{"project":"presto-0.278","comment":"\/** * Mapping hint for the decoder *\/","label":0,"id":410506}
{"project":"presto-0.278","comment":"\/\/ assert that driver group [3] is fully completed","label":0,"id":410507}
{"project":"presto-0.278","comment":"\/**     * Encodes a byte[] containing binary data, into a byte[] containing characters in the alphabet.     *     * @param pArray a byte array containing binary data     * @return A byte array containing only the base-n alphabetic character data     *\/","label":0,"id":410508}
{"project":"presto-0.278","comment":"\/\/ then there is at least one non-exact range","label":0,"id":410509}
{"project":"presto-0.278","comment":"\/\/ check that spilled data can still fit into memory limit as otherwise\/\/ it fails later during unspilling when all spilled pages need to be loaded into memory","label":0,"id":410510}
{"project":"presto-0.278","comment":"\/\/ Using all nodes for soft affinity scheduling with modular hashing because otherwise temporarily down nodes would trigger too much rehashing","label":0,"id":410511}
{"project":"presto-0.278","comment":"\/** * Increments the reference count of an object by 1 and returns the updated reference count *\/","label":0,"id":410512}
{"project":"presto-0.278","comment":"\/\/ hive-apache has org.apache.hadoop.hive.ql.exec.vector.*ColumnVector classes which conflicts with consumers of presto-orc","label":0,"id":410513}
{"project":"presto-0.278","comment":"\/\/ repetition levels","label":0,"id":410514}
{"project":"presto-0.278","comment":"\/\/ Add a column","label":0,"id":410515}
{"project":"presto-0.278","comment":"\/\/ It's common to have a large number of chained AND or OR. So we do it iteratively here to avoid stack overflow","label":0,"id":410516}
{"project":"presto-0.278","comment":"\/\/ drop the initial reference","label":0,"id":410517}
{"project":"presto-0.278","comment":"\/\/ Each of them will create their own TempStorage","label":0,"id":410518}
{"project":"presto-0.278","comment":"\/\/ Put after setSystemProperty are called","label":0,"id":410519}
{"project":"presto-0.278","comment":"\/\/ 2 servers with 2 segments each","label":0,"id":410520}
{"project":"presto-0.278","comment":"\/\/ leaf splits + aggregation split","label":0,"id":410521}
{"project":"presto-0.278","comment":"\/\/ get result with yield; pick a relatively small buffer for heaps","label":0,"id":410522}
{"project":"presto-0.278","comment":"\/**     * Return a vector with the number of entries for each position of the block to be unnested.     *\/","label":0,"id":410523}
{"project":"presto-0.278","comment":"\/\/ This limit should never be hit given there is a limit of maxOutstandingSplits.","label":0,"id":410524}
{"project":"presto-0.278","comment":"\/\/ build default block","label":0,"id":410525}
{"project":"presto-0.278","comment":"\/\/ for queries with no output, return a fake result for clients that require it","label":0,"id":410526}
{"project":"presto-0.278","comment":"\/**     * Check if the query is unexpectedly modified using the credentials passed in the identity.     * @throws com.facebook.presto.spi.security.AccessDeniedException if query is modified.     *\/","label":0,"id":410527}
{"project":"presto-0.278","comment":"\/** * Extract all column constraints that require exactly one value or only null in their respective Domains. * Returns an empty Optional if the Domain is none. *\/","label":0,"id":410528}
{"project":"presto-0.278","comment":"\/\/ ignore","label":0,"id":410529}
{"project":"presto-0.278","comment":"\/** * Gets all of the columns on the specified table, or an empty map if the columns can not be enumerated. * * @throws RuntimeException if table handle is no longer valid *\/","label":0,"id":410530}
{"project":"presto-0.278","comment":"\/\/ for discrete distributions, t-digest usually gives back a double that is between 2 integers (2.88, 1.16, etc)\/\/ however, a discrete distribution should return an integer, not something in between\/\/ we use Math.rint to round to the nearest integer, since casting as (int) always rounds down and no casting results in error > 1%","label":0,"id":410531}
{"project":"presto-0.278","comment":"\/\/ refresh interval is 1 nanosecond","label":0,"id":410532}
{"project":"presto-0.278","comment":"\/\/ TODO unify field and method names with SymbolStatsEstimate","label":1,"id":410533}
{"project":"presto-0.278","comment":"\/\/ read digest","label":0,"id":410534}
{"project":"presto-0.278","comment":"\/\/ record output field","label":0,"id":410535}
{"project":"presto-0.278","comment":"\/\/ Adding a set to track which of the columns in the reorder list are already visited\/\/ For complex maps (complex values for the value)\/\/ there could be multiple nodeId(s) mapping to a single column ID\/\/ For example,  if the flat map column is map<int, list<int>> with node ids (1: <2, 3<4>>) and column id 0\/\/ There will be multiple entries in the nodeIdToColumnEncodings for each of the values\/\/ 1 -> DWRF_MAP_FLAT encoding\/\/ 3 -> DIRECT encoding  + SortedMap<Integer, DwrfSequenceEncoding> (sequence encodings)\/\/ 4 -> DIRECT encoding  + SortedMap<Integer, DwrfSequenceEncoding> (sequence encodings)","label":0,"id":410536}
{"project":"presto-0.278","comment":"\/\/ verify that INVOKER security runs as session user","label":0,"id":410537}
{"project":"presto-0.278","comment":"\/\/ Reset the memory limits based on the new pool assignment","label":0,"id":410538}
{"project":"presto-0.278","comment":"\/**     * Computes the displacement associated with a given index.     *     * @param index an index into a big array.     * @return the associated displacement (in the associated {@linkplain #segment(long) segment}).     *\/","label":0,"id":410539}
{"project":"presto-0.278","comment":"\/\/ Only skip header rows when the split is at the beginning of the file","label":0,"id":410540}
{"project":"presto-0.278","comment":"\/\/ create new AggregateNode same as original but with distinct turned off for","label":0,"id":410541}
{"project":"presto-0.278","comment":"\/\/ Mismatched different cardinality checksum","label":0,"id":410542}
{"project":"presto-0.278","comment":"\/\/ ignore the char after escape_char","label":0,"id":410543}
{"project":"presto-0.278","comment":"\/\/ Use absolute error margin if either control sum or test sum is 0.","label":0,"id":410544}
{"project":"presto-0.278","comment":"\/\/ Initialize metrics map","label":0,"id":410545}
{"project":"presto-0.278","comment":"\/\/ timestamp","label":0,"id":410546}
{"project":"presto-0.278","comment":"\/** * Gets the Long value of the given Presto column. * * @param name Column name * @return Long value *\/","label":0,"id":410547}
{"project":"presto-0.278","comment":"\/\/ Make sure there is a feature that needs to be normalized","label":0,"id":410548}
{"project":"presto-0.278","comment":"\/\/ a b c d e","label":0,"id":410549}
{"project":"presto-0.278","comment":"\/\/ point on the border between two partitions","label":0,"id":410550}
{"project":"presto-0.278","comment":"\/\/ columns of the table, not projected","label":0,"id":410551}
{"project":"presto-0.278","comment":"\/\/ Get the file names 1st time","label":0,"id":410552}
{"project":"presto-0.278","comment":"\/\/ no error, no columns added","label":0,"id":410553}
{"project":"presto-0.278","comment":"\/\/ straddle segment start","label":0,"id":410554}
{"project":"presto-0.278","comment":"\/\/ coordinator-only properties","label":0,"id":410555}
{"project":"presto-0.278","comment":"\/\/ Specs are built from db records, validate and return manager spec","label":0,"id":410556}
{"project":"presto-0.278","comment":"\/\/ 2 intersecting polygons: A and B","label":0,"id":410557}
{"project":"presto-0.278","comment":"\/** * Call the method to do the work. * The caller can keep calling this method until it returns true (i.e., the work is done). * * @return boolean to indicate if the work has finished. *\/","label":0,"id":410558}
{"project":"presto-0.278","comment":"\/** * @throws UnsupportedOperationException if this connector does not support writing tables page at a time *\/","label":0,"id":410559}
{"project":"presto-0.278","comment":"\/\/ We need to include base table queries by Union in order to add required access control for the base tables and utilized columns during visit.","label":0,"id":410560}
{"project":"presto-0.278","comment":"\/\/ Shift backward on min value","label":0,"id":410561}
{"project":"presto-0.278","comment":"\/\/ Use TESTING_PAGE_WITH_RLE_BLOCK instead of TESTING_PAGE_WITH_NULL_AND_RLE_BLOCK's logical size to estimate the output data size, because the null Block should not be sent over the wire.","label":0,"id":410562}
{"project":"presto-0.278","comment":"\/** * Buffer has failed.  No more buffers or pages can be added.  Readers * will be blocked, as to not communicate a finished state.  It is * assumed that the reader will be cleaned up elsewhere. * This is the terminal state. *\/","label":0,"id":410563}
{"project":"presto-0.278","comment":"\/\/ TODO: Under current implementation, one block can only hold INT_MAX many rows\/\/ which theoretically may not be enough to hold all rows from an ORC file.\/\/ At this point, rowsToDelete couldn't be empty","label":1,"id":410564}
{"project":"presto-0.278","comment":"\/\/ unbucketed table as probe side","label":0,"id":410565}
{"project":"presto-0.278","comment":"\/\/ g0 = {group-by symbols + allNonDistinctAggregateSymbols}","label":0,"id":410566}
{"project":"presto-0.278","comment":"\/\/ filter by index","label":0,"id":410567}
{"project":"presto-0.278","comment":"\/**     * Create a set of coordinates that are monotonically increasing in y,     * but random in x.     *\/","label":0,"id":410568}
{"project":"presto-0.278","comment":"\/\/ if colocated joins are disabled, force redistribute when using a custom partitioning","label":0,"id":410569}
{"project":"presto-0.278","comment":"\/\/ (1) the query is not done AND the query state is not FAILED","label":0,"id":410570}
{"project":"presto-0.278","comment":"\/** * Process a row by outputting the result of the window function. * <p\/> * This method provides information about the ordering peer group. A peer group is all * of the rows that are peers within the specified ordering. Rows are peers if they * compare equal to each other using the specified ordering expression. The ordering * of rows within a peer group is undefined (otherwise they would not be peers). * * @param output the {@link BlockBuilder} to use for writing the output row * @param newPeerGroup if this row starts a new peer group * @param peerGroupCount the total number of rows in this peer group * @param currentPosition the current position for this row *\/","label":0,"id":410571}
{"project":"presto-0.278","comment":"\/\/ return some stats even if the map is empty","label":0,"id":410572}
{"project":"presto-0.278","comment":"\/\/ Continue searching after match","label":0,"id":410573}
{"project":"presto-0.278","comment":"\/\/ total memory limit","label":0,"id":410574}
{"project":"presto-0.278","comment":"\/\/ 200 running splits.","label":0,"id":410575}
{"project":"presto-0.278","comment":"\/\/ Get the max size from the current pending read, which may not be the","label":0,"id":410576}
{"project":"presto-0.278","comment":"\/\/ do not rewrite outer references, it will be handled in outer scope planner","label":0,"id":410577}
{"project":"presto-0.278","comment":"\/\/ submit second non \"dashboard\" query","label":0,"id":410578}
{"project":"presto-0.278","comment":"\/\/ directly.","label":0,"id":410579}
{"project":"presto-0.278","comment":"\/\/ noinspection ResultOfObjectAllocationIgnored","label":0,"id":410580}
{"project":"presto-0.278","comment":"\/\/ We ask the engine to compute either both or neither","label":0,"id":410581}
{"project":"presto-0.278","comment":"\/\/ that are not available\/updated to the materialized view yet.","label":0,"id":410582}
{"project":"presto-0.278","comment":"\/\/ found a slot for this key","label":0,"id":410583}
{"project":"presto-0.278","comment":"\/\/ free up some memory","label":0,"id":410584}
{"project":"presto-0.278","comment":"\/\/ TODO: use batch value selector","label":1,"id":410585}
{"project":"presto-0.278","comment":"\/\/127.0.0.1:8001\").setTableName(\"query_source\").setSuites(\"test1,test2\").setMaxQueriesPerSuite(50);","label":0,"id":410586}
{"project":"presto-0.278","comment":"\/\/\/\/ test initialization: simple task with 1 pipeline\/\/\/\/ pipeline 0  ... pipeline id\/\/ partitioned ... partitioned\/unpartitioned pipeline\/\/ grouped   ... execution strategy (in grouped test)\/\/ ungrouped  ... execution strategy (in ungrouped test)\/\/\/\/ TaskOutput\/\/ |\/\/ Scan\/\/\/\/ See #testComplex for all the behaviors that are tested. Not all of them apply here.","label":0,"id":410587}
{"project":"presto-0.278","comment":"\/\/ Install the TPCH plugin for test data (not in Delta format)","label":0,"id":410588}
{"project":"presto-0.278","comment":"\/\/ fire state change listener with the current state","label":0,"id":410589}
{"project":"presto-0.278","comment":"\/\/ Next possible pair is placed next to the current entryDelimiter","label":0,"id":410590}
{"project":"presto-0.278","comment":"\/**     * Finish refresh materialized view     *\/","label":0,"id":410591}
{"project":"presto-0.278","comment":"\/\/ byte, short and int order. If they are processed in different order, it will result in data corruption.","label":0,"id":410592}
{"project":"presto-0.278","comment":"\/\/ If this assumption no longer holds, we should consider calling task.noMoreSplits with multiple entries in one shot.","label":0,"id":410593}
{"project":"presto-0.278","comment":"\/** * Record the size in bytes of input blocks that were processed by an operator. * This metric is valid only for source operators. *\/","label":0,"id":410594}
{"project":"presto-0.278","comment":"\/**     * Rename the specified column.     *\/","label":0,"id":410595}
{"project":"presto-0.278","comment":"\/** * Mask to convert signed integer to unsigned long. *\/","label":0,"id":410596}
{"project":"presto-0.278","comment":"\/\/ All nodes expired, memory pools emptied","label":0,"id":410597}
{"project":"presto-0.278","comment":"\/\/ check if statistics for the columnsWithMissingStatistics are actually stored in the metastore","label":0,"id":410598}
{"project":"presto-0.278","comment":"\/\/ AbstractSet.removeAll performs terribly here.","label":0,"id":410599}
{"project":"presto-0.278","comment":"\/\/ Do not distribute boolean expressions if it would create 2x more base expressions","label":0,"id":410600}
{"project":"presto-0.278","comment":"\/\/ Write to nullsBuffer if there is a possibility to have nulls. It is possible that the","label":0,"id":410601}
{"project":"presto-0.278","comment":"\/\/ add entries only if stream ordering contains the column ID","label":0,"id":410602}
{"project":"presto-0.278","comment":"\/**     * <p>     * Encodes all of the provided data, starting at inPos, for inAvail bytes. Must be called at least twice: once with     * the data to encode, and once with inAvail set to \"-1\" to alert encoder that EOF has been reached, so flush last     * remaining bytes (if not multiple of 5).     * <\/p>     *     * @param in byte[] array of binary data to Base32 encode.     * @param inPos Position to start reading data from.     * @param inAvail Amount of bytes available from input for encoding.     * @param context the context to be used     *\/","label":0,"id":410603}
{"project":"presto-0.278","comment":"\/**     * Returns a batch of splits.     *     * @param schemaTableName schema and table name     * @param desiredColumns a superset of columns to return; empty set means \"no columns\", {@literal null} set means \"all columns\"     * @param outputConstraint constraint on the returned data     * @param maxSplitCount maximum number of splits to return     * @param nextToken token from a previous split batch or {@literal null} if it is the first call     * @return a batch of splits     *\/","label":0,"id":410604}
{"project":"presto-0.278","comment":"\/**     * Get the row ID column handle used with UpdatablePageSource.     *\/","label":0,"id":410605}
{"project":"presto-0.278","comment":"\/\/ .add(new TestColumn(\"p_null_binary\", javaByteArrayObjectInspector, HIVE_DEFAULT_DYNAMIC_PARTITION, null, true))","label":0,"id":410606}
{"project":"presto-0.278","comment":"\/\/ find the number of bytes required for base and shift it by 5 bits\/\/ to accommodate patch width. The additional bit is used to store the sign\/\/ of the base value.","label":0,"id":410607}
{"project":"presto-0.278","comment":"\/\/ This is why getSchedulingPlanNode returns an Optional.","label":0,"id":410608}
{"project":"presto-0.278","comment":"\/\/ window functions go in remaining channels starting after the last channel from the source operator, one per channel","label":0,"id":410609}
{"project":"presto-0.278","comment":"\/** * Attempt to match the desired properties to a sequence of known properties. * <p> * Returns a list of the same length as the original. Entries are: * - Optional.empty(): the property was satisfied completely * - non-empty: the (simplified) property that was not satisfied *\/","label":0,"id":410610}
{"project":"presto-0.278","comment":"\/\/ simpler implementation (and duplicate projections in expressionsWithPositionBuilder will throw exception when calling expressionsWithPositionBuilder.build())","label":0,"id":410611}
{"project":"presto-0.278","comment":"\/\/ Convert all columns handles","label":0,"id":410612}
{"project":"presto-0.278","comment":"\/** * Set of tables known to this connector. For each table, a description file may be present in the catalog folder which describes columns for the given table. *\/","label":0,"id":410613}
{"project":"presto-0.278","comment":"\/\/ reset the interrupted flag","label":0,"id":410614}
{"project":"presto-0.278","comment":"\/**     * Returns the size of {@code block.getRegion(position, length)}.     * The method can be expensive. Do not use it outside an implementation of Block.     *\/","label":0,"id":410615}
{"project":"presto-0.278","comment":"\/** * Create a PageBuilder with given types. * <p> * A PageBuilder instance created with this constructor has no estimation about bytes per entry, * therefore it can resize frequently while appending new rows. * <p> * This constructor should only be used to get the initial PageBuilder. * Once the PageBuilder is full use reset() or createPageBuilderLike() to create a new * PageBuilder instance with its size estimated based on previous data. *\/","label":0,"id":410616}
{"project":"presto-0.278","comment":"\/\/ that only have a handle to the provider (e.g. SemiTransactionalHiveMetastore)","label":0,"id":410617}
{"project":"presto-0.278","comment":"\/\/ hadoop creates crc files that must be deleted also, so just delete the whole directory","label":0,"id":410618}
{"project":"presto-0.278","comment":"\/\/ tuple domain within the column range","label":0,"id":410619}
{"project":"presto-0.278","comment":"\/\/ Duplicate consecutive points throws exception","label":0,"id":410620}
{"project":"presto-0.278","comment":"\/\/ Constants are only removed from point checks, and not range checks. Example:","label":0,"id":410621}
{"project":"presto-0.278","comment":"\/**     * The ORC file has a field that is missing from the reader     *\/","label":0,"id":410622}
{"project":"presto-0.278","comment":"\/\/ Check scalar values","label":0,"id":410623}
{"project":"presto-0.278","comment":"\/\/ add user specified protocols to okhttp3 client if specified","label":0,"id":410624}
{"project":"presto-0.278","comment":"\/\/ assert both visitors yield the same result","label":0,"id":410625}
{"project":"presto-0.278","comment":"\/**     * Quick sort using an index array.  On return,     * values[order[i]] is in order as i goes 0..values.length     *     * @param order  Indexes into values     * @param values The values to sort.     *\/","label":0,"id":410626}
{"project":"presto-0.278","comment":"\/\/ visit fields","label":0,"id":410627}
{"project":"presto-0.278","comment":"\/** * Implementations of this interface must be thread safe. *\/","label":0,"id":410628}
{"project":"presto-0.278","comment":"\/**         * All splits have been provided to caller of this scheduler.         * Cleanup operations are done (e.g., drainCompletelyScheduledLifespans has drained all driver groups).         *\/","label":0,"id":410629}
{"project":"presto-0.278","comment":"\/\/ A limit is needed to avoid having a huge exception object. 5 was chosen arbitrarily.","label":0,"id":410630}
{"project":"presto-0.278","comment":"\/\/ This method first acquires the monitor of this instance.\/\/ After that in this method if we acquire the monitors of the\/\/ user\/revocable memory contexts in the queryMemoryContext instance\/\/ (say, by calling queryMemoryContext.getUserMemory()) it's possible\/\/ to have a deadlock. Because, the driver threads running the operators\/\/ will allocate memory concurrently through the child memory context -> ... ->\/\/ root memory context -> this.updateUserMemory() calls, and will acquire\/\/ the monitors of the user\/revocable memory contexts in the queryMemoryContext instance\/\/ first, and then the monitor of this, which may cause deadlocks.\/\/ That's why instead of calling methods on queryMemoryContext to get the\/\/ user\/revocable memory reservations, we call the MemoryPool to get the same\/\/ information.","label":0,"id":410631}
{"project":"presto-0.278","comment":"\/** * Checks if the unix timestamp is representable as a valid DOS timestamp. * * <p>See <a href=\"http:\/\/www.pkware.com\/documents\/casestudies\/APPNOTE.TXT\">ZIP Format<\/a> for * a general description of the date a time fields (Section 4.4.6) and * <a href=\"https:\/\/msdn.microsoft.com\/en-us\/library\/windows\/desktop\/ms724247.aspx\">DOS date * format<\/a> for a detailed description of the format. *\/","label":0,"id":410632}
{"project":"presto-0.278","comment":"\/\/ See InMemoryHashAggregationBuilder.buildTypes()","label":0,"id":410633}
{"project":"presto-0.278","comment":"\/\/ Number of positions from the start of the top-level position to fail;","label":0,"id":410634}
{"project":"presto-0.278","comment":"\/\/ day2","label":0,"id":410635}
{"project":"presto-0.278","comment":"\/\/ Initial data","label":0,"id":410636}
{"project":"presto-0.278","comment":"\/\/ setting both socks and http proxy","label":0,"id":410637}
{"project":"presto-0.278","comment":"\/\/ Cannot interpret function to constant","label":0,"id":410638}
{"project":"presto-0.278","comment":"\/\/ The collision rate can be lower than 0.001% if there are 1000 different sizes.","label":0,"id":410639}
{"project":"presto-0.278","comment":"\/\/ normalize so that variable is on the left","label":0,"id":410640}
{"project":"presto-0.278","comment":"\/** * BlockEncodingSerde might be needed to serialize\/deserialize Presto pages when running external functions. *\/","label":0,"id":410641}
{"project":"presto-0.278","comment":"\/\/localhost:8080?protocols=\" + protocols);","label":0,"id":410642}
{"project":"presto-0.278","comment":"\/** * Specialized implementation of {@link MergingPageOutput#getOutput()} that: * 1. Doesn't use the {@link MergingPageOutput#pageBuilder} because we can accumulate small pages in an integer field * 2. Can arbitrarily reorder output pages with no columns and therefore does not need to flush small accumulated input *    values when a sufficiently large page is encountered * 3. Will periodically flush accumulated positionCounts once a combined sum of {@link PageProcessor#MAX_BATCH_SIZE} is *    reached, this avoids creating pages with huge position counts that might harm downstream operators * 4. As a consequence of the above, will always produce either 0 or 1 output pages, which means it doesn't need or use {@link MergingPageOutput#outputQueue} *\/","label":0,"id":410643}
{"project":"presto-0.278","comment":"\/\/ Hadoop FileSystem returns \"localhost\" as a default","label":0,"id":410644}
{"project":"presto-0.278","comment":"\/**         * @return constant symbols from a perspective of a subquery         *\/","label":0,"id":410645}
{"project":"presto-0.278","comment":"\/\/ Varchar enum values are base32-encoded so that they are case-insensitive, which is expected of TypeSignatures","label":0,"id":410646}
{"project":"presto-0.278","comment":"\/\/ specialize the range with BETWEEN expression if possible b\/c it is currently more efficient","label":0,"id":410647}
{"project":"presto-0.278","comment":"\/\/ \"drop\" time was added to the directories to be dropped.","label":0,"id":410648}
{"project":"presto-0.278","comment":"\/\/ write value section","label":0,"id":410649}
{"project":"presto-0.278","comment":"\/\/ Copy the content from the openSlice and append it to the closedSlices.\/\/ Note: openSlice will be reused for next segment, so a copy is required.","label":0,"id":410650}
{"project":"presto-0.278","comment":"\/\/ read the footer","label":0,"id":410651}
{"project":"presto-0.278","comment":"\/\/ 3 -> DIRECT encoding  + SortedMap<Integer, DwrfSequenceEncoding> (sequence encodings)","label":0,"id":410652}
{"project":"presto-0.278","comment":"\/\/ all sources are remote","label":0,"id":410653}
{"project":"presto-0.278","comment":"\/\/ advance time forward beyond the minimum error duration","label":0,"id":410654}
{"project":"presto-0.278","comment":"\/** * If there no data, attempt to load some from the pages supplier. *\/","label":0,"id":410655}
{"project":"presto-0.278","comment":"\/\/ Setting this to 1 means, 1 null will be counted as 1 dictionary byte and might abandon some dictionary","label":0,"id":410656}
{"project":"presto-0.278","comment":"\/\/ Verify the partition keys are correctly created","label":0,"id":410657}
{"project":"presto-0.278","comment":"\/**     * Compares the hashed columns in this PagesHashStrategy to the values in the specified page. The     * values are compared positionally, so {@code rightPage} must have the same number of entries as     * the hashed columns and each entry is expected to be the same type.     * {@code rightPage} is used if join uses filter function and must contain all columns from probe side of join.     * <p>     * This method does not perform any null checks.     *\/","label":0,"id":410658}
{"project":"presto-0.278","comment":"\/\/ Nothing to compare","label":0,"id":410659}
{"project":"presto-0.278","comment":"\/\/ Max ds matching the filter has stats. Enable rewrite.","label":0,"id":410660}
{"project":"presto-0.278","comment":"\/\/ List columns for a given schema","label":0,"id":410661}
{"project":"presto-0.278","comment":"\/** * Update the results of metadata requests sent *\/","label":0,"id":410662}
{"project":"presto-0.278","comment":"\/\/ hashAggregationBuilder is constructed with yieldForMemoryReservation = false","label":0,"id":410663}
{"project":"presto-0.278","comment":"\/\/ Dictionary indexes are var-int encoded in ORC.","label":0,"id":410664}
{"project":"presto-0.278","comment":"\/\/\/\/ Helper methods\/\/","label":0,"id":410665}
{"project":"presto-0.278","comment":"\/\/ add supperfulous unique key","label":0,"id":410666}
{"project":"presto-0.278","comment":"\/\/ Technically non-deterministic unit test but has essentially a next to impossible chance of a false positive","label":0,"id":410667}
{"project":"presto-0.278","comment":"\/\/ first three splits create new tasks","label":0,"id":410668}
{"project":"presto-0.278","comment":"\/\/ this is a separate method to ensure that the `this` reference is not leaked during construction","label":0,"id":410669}
{"project":"presto-0.278","comment":"\/\/ can't estimate function, but default filter factor is turned on","label":0,"id":410670}
{"project":"presto-0.278","comment":"\/\/ table with double, array of bigints, real, and bigint","label":0,"id":410671}
{"project":"presto-0.278","comment":"\/** * A Hive cluster is a single logical installation of Hive. It might * have multiple instances of the metastore service (for scalability * purposes), but they would all return the same data. * <p\/> * This Hive plugin only supports having a single Hive cluster per * instantiation of the plugin, but a plugin that extends this code * could support multiple, dynamically located Hive clusters. *\/","label":0,"id":410672}
{"project":"presto-0.278","comment":"\/\/ merge in forward order","label":0,"id":410673}
{"project":"presto-0.278","comment":"\/\/ array used for sorting the temp centroids","label":0,"id":410674}
{"project":"presto-0.278","comment":"\/** * translates TupleDomain to KuduPredicates. * * @return false if TupleDomain or one of its domains is none *\/","label":0,"id":410675}
{"project":"presto-0.278","comment":"\/**     * Gets the value at the {@code block} {@code position} as a Slice     * without boundary checks     *\/","label":0,"id":410676}
{"project":"presto-0.278","comment":"\/\/localhost:54855\/query.html?20160128_214710_00012_rk68b\\\",\\n\" + \"  \\\"columns\\\" : [ {\\n\" + \"    \\\"name\\\" : \\\"_col0\\\",\\n\" + \"    \\\"type\\\" : \\\"bigint\\\",\\n\" + \"    \\\"typeSignature\\\" : {\\n\" + \"      \\\"rawType\\\" : \\\"bigint\\\",\\n\" + \"      \\\"typeArguments\\\" : [ ],\\n\" + \"      \\\"literalArguments\\\" : [ ],\\n\" + \"      \\\"arguments\\\" : [ ]\\n\" + \"    }\\n\" + \"  } ],\\n\" + \"  \\\"data\\\" : [ [ 123 ] ],\\n\" + \"  \\\"stats\\\" : {\\n\" + \"    \\\"state\\\" : \\\"FINISHED\\\",\\n\" + \"    \\\"queued\\\" : false,\\n\" + \"    \\\"scheduled\\\" : false,\\n\" + \"    \\\"nodes\\\" : 0,\\n\" + \"    \\\"totalSplits\\\" : 0,\\n\" + \"    \\\"queuedSplits\\\" : 0,\\n\" + \"    \\\"runningSplits\\\" : 0,\\n\" + \"    \\\"completedSplits\\\" : 0,\\n\" + \"    \\\"cpuTimeMillis\\\" : 0,\\n\" + \"    \\\"wallTimeMillis\\\" : 0,\\n\" + \"    \\\"queuedTimeMillis\\\" : 0,\\n\" + \"    \\\"elapsedTimeMillis\\\" : 0,\\n\" + \"    \\\"processedRows\\\" : 0,\\n\" + \"    \\\"processedBytes\\\" : 0,\\n\" + \"    \\\"peakMemoryBytes\\\" : 0\\n\" + \"  }\\n\" + \"}\";","label":0,"id":410677}
{"project":"presto-0.278","comment":"\/\/example.com\/path1\/p.php?k=a=b=c&x=y#Ref1', 'k')\", createVarcharType(47), \"a=b=c\");","label":0,"id":410678}
{"project":"presto-0.278","comment":"\/**     * Check if the buffer is blocking producers.     *\/","label":0,"id":410679}
{"project":"presto-0.278","comment":"\/\/ Thrown when a table that is *not* expected to exist, does exist","label":0,"id":410680}
{"project":"presto-0.278","comment":"\/\/ simple equi join, different ranges","label":0,"id":410681}
{"project":"presto-0.278","comment":"\/\/ These should all be valid with respect to the ones above, since 1-index is the default.","label":0,"id":410682}
{"project":"presto-0.278","comment":"\/\/ remove all non-common predicates","label":0,"id":410683}
{"project":"presto-0.278","comment":"\/\/ at ... (more lines of stacktrace)","label":0,"id":410684}
{"project":"presto-0.278","comment":"\/\/ Thread Safety:","label":0,"id":410685}
{"project":"presto-0.278","comment":"\/\/ make sure no duplicate names in group definition","label":0,"id":410686}
{"project":"presto-0.278","comment":"\/\/ Header","label":0,"id":410687}
{"project":"presto-0.278","comment":"\/\/ Stores writerIndex <-> requestId mapping","label":0,"id":410688}
{"project":"presto-0.278","comment":"\/\/ Consume the error as we do not want to fail during heapdump","label":0,"id":410689}
{"project":"presto-0.278","comment":"\/\/ use reservoir sampling","label":0,"id":410690}
{"project":"presto-0.278","comment":"\/\/ wait time to get results","label":0,"id":410691}
{"project":"presto-0.278","comment":"\/**     * Process a row by outputting the result of the window function.     * <p\/>     * This method provides information about the ordering peer group. A peer group is all     * of the rows that are peers within the specified ordering. Rows are peers if they     * compare equal to each other using the specified ordering expression. The ordering     * of rows within a peer group is undefined (otherwise they would not be peers).     *     * @param output the {@link BlockBuilder} to use for writing the output row     * @param peerGroupStart the position of the first row in the peer group     * @param peerGroupEnd the position of the last row in the peer group     * @param frameStart the position of the first row in the window frame     * @param frameEnd the position of the last row in the window frame     *\/","label":0,"id":410692}
{"project":"presto-0.278","comment":"\/** * Returns an array containing elements in the specified range of the specified array. * If the range matches the entire array, the input array will be returned. * Otherwise, a copy will be returned. *\/","label":0,"id":410693}
{"project":"presto-0.278","comment":"\/\/ The address that the next slice will be written to.","label":0,"id":410694}
{"project":"presto-0.278","comment":"\/\/ This is a copy of IpAddressOperators.castFromVarcharToIpAddress method","label":0,"id":410695}
{"project":"presto-0.278","comment":"\/\/ Note that declared positions in the Page should be the same with number of rows in each Block","label":0,"id":410696}
{"project":"presto-0.278","comment":"\/\/ guarantees we divide by non-zero number and interpolation works","label":0,"id":410697}
{"project":"presto-0.278","comment":"\/\/ At this point, rowsToDelete couldn't be empty","label":1,"id":410698}
{"project":"presto-0.278","comment":"\/\/ Druid doesn't support push down aggregation functions other than count on top of distinct function.","label":0,"id":410699}
{"project":"presto-0.278","comment":"\/\/ make sure we didn't miss anything","label":0,"id":410700}
{"project":"presto-0.278","comment":"\/\/ Page stats is finer grained but relatively more expensive, so we do the filtering after above block filtering.","label":0,"id":410701}
{"project":"presto-0.278","comment":"\/\/ We want to do exponential backoff to allow OOT killer to kill queries and not fail immediately.","label":0,"id":410702}
{"project":"presto-0.278","comment":"\/\/ get the three pages","label":0,"id":410703}
{"project":"presto-0.278","comment":"\/\/ Outputs are the fields defined in Presto for what's expected from Pinot query.\/\/ Outputs\/groupByColumns\/topNColumnOrderingMap should be part of the keys of selections.","label":0,"id":410704}
{"project":"presto-0.278","comment":"\/\/ this rounds the decimal value to the nearest integral value","label":0,"id":410705}
{"project":"presto-0.278","comment":"\/\/ Cost will be accounted either in CostCalculatorUsingExchanges#CostEstimator#visitExchange\/\/ or in CostCalculatorWithEstimatedExchanges#CostEstimator#visitUnion\/\/ This stub is needed just to avoid the cumulative cost being set to unknown","label":0,"id":410706}
{"project":"presto-0.278","comment":"\/\/ or when we run out of values to copy","label":0,"id":410707}
{"project":"presto-0.278","comment":"\/\/ if patch bit requirement is 64 then it will not possible to pack","label":0,"id":410708}
{"project":"presto-0.278","comment":"\/\/ columnIndex is the index of this column in the current scan\/\/ It is obtained from the mapping and can be -ve, which means that the\/\/ expectedColumnIndex'th column returned by Pinot can be discarded.","label":0,"id":410709}
{"project":"presto-0.278","comment":"\/\/test\"), \"SELECT 1\", new BasicQueryStats(new DateTime(1), new DateTime(2), new Duration(2, NANOSECONDS), new Duration(3, NANOSECONDS), new Duration(4, NANOSECONDS), new Duration(5, NANOSECONDS), 5, 5, 6, 7, 8, 9, new DataSize(14, BYTE), 15, 16.0, 25.0, new DataSize(17, BYTE), new DataSize(18, BYTE), new DataSize(19, BYTE), new DataSize(20, BYTE), new DataSize(21, BYTE), new DataSize(42, BYTE), new Duration(22, NANOSECONDS), new Duration(23, NANOSECONDS), false, ImmutableSet.of(), new DataSize(24, BYTE), OptionalDouble.empty()), null, Optional.empty(), ImmutableList.of(), Optional.empty());","label":0,"id":410710}
{"project":"presto-0.278","comment":"\/\/ write key section","label":0,"id":410711}
{"project":"presto-0.278","comment":"\/\/ block length is an int","label":0,"id":410712}
{"project":"presto-0.278","comment":"\/** * Factory for loading Iceberg resources such as Catalog. *\/","label":0,"id":410713}
{"project":"presto-0.278","comment":"\/** * Kafka specific {@link com.facebook.presto.spi.ConnectorHandleResolver} implementation. *\/","label":0,"id":410714}
{"project":"presto-0.278","comment":"\/\/ TODO: Add views on the server side","label":1,"id":410715}
{"project":"presto-0.278","comment":"\/**     * Like getBlock(), but returns a temporary view of the data.     *     * The returned lease must be closed and block usage should be completed before subsequent     * invocations of getBlockView, getBlock, or read.     *     * May be called multiple times after each read(). On repeated invocation, the list of positions     * must be a strict subset of positions passed in the previous invocation.     *\/","label":0,"id":410716}
{"project":"presto-0.278","comment":"\/\/ the spiller (FileSingleStreamSpiller) doesn't release its memory reservation until it's closed.","label":0,"id":410717}
{"project":"presto-0.278","comment":"\/** * Class constructor initializing <code>minimumValues<\/code> and <code>maximumValues<\/code> from optional minimum\/maximum value ranges. * <p\/> * A value can be set to <code>Optional.empty()<\/code>, or <code>null<\/code>, if the query is unbounded in any dimension. *\/","label":0,"id":410718}
{"project":"presto-0.278","comment":"\/\/ MySQL maps their \"database\" to SQL catalogs and does not have schemas","label":0,"id":410719}
{"project":"presto-0.278","comment":"\/\/\/\/ If the projection does not need bound values, execute query using full engine","label":0,"id":410720}
{"project":"presto-0.278","comment":"\/\/ Shift forward on max value","label":0,"id":410721}
{"project":"presto-0.278","comment":"\/\/ TODO: make autocommit isolation level a session parameter","label":1,"id":410722}
{"project":"presto-0.278","comment":"\/\/ An exception that is thrown at actual byte code generation time is too late. At that point, stack trace is generally not useful.","label":1,"id":410723}
{"project":"presto-0.278","comment":"\/\/ Use the bucket number for file name when fileRenaming is enabled","label":0,"id":410724}
{"project":"presto-0.278","comment":"\/\/ Install no-op transaction manager on workers, since only coordinators manage transactions.","label":0,"id":410725}
{"project":"presto-0.278","comment":"\/\/ flush the sequence up to the beginning of the run, which must be MIN_REPEAT_SIZE","label":0,"id":410726}
{"project":"presto-0.278","comment":"\/\/ |               |","label":0,"id":410727}
{"project":"presto-0.278","comment":"\/\/ hex dump: \"616263\"","label":0,"id":410728}
{"project":"presto-0.278","comment":"\/**     * Writes data to the output. The output must be exactly     * {@link #size()} bytes.     *\/","label":0,"id":410729}
{"project":"presto-0.278","comment":"\/\/ It is tricky to check the equivalence of an expression and a row expression.\/\/ We rely on the optimized translator to fill the gap.","label":0,"id":410730}
{"project":"presto-0.278","comment":"\/\/ have 0 values before marking them as excluded.","label":0,"id":410731}
{"project":"presto-0.278","comment":"\/\/ This TZ had switch in 2014, so if we test for 2014 and used unpacked value we would use wrong shift","label":0,"id":410732}
{"project":"presto-0.278","comment":"\/\/ Should always run simplifyOptimizer after predicatePushDown","label":0,"id":410733}
{"project":"presto-0.278","comment":"\/** * Rewrite single value InPredicates as equality if possible *\/","label":0,"id":410734}
{"project":"presto-0.278","comment":"\/** * Applies to broadcast spatial joins, inner and left, expressed via ST_Contains, * ST_Intersects and ST_Distance functions. * <p> * For example: * <ul> * <li>SELECT ... FROM a, b WHERE ST_Contains(b.geometry, a.geometry)<\/li> * <li>SELECT ... FROM a, b WHERE ST_Intersects(b.geometry, a.geometry)<\/li> * <li>SELECT ... FROM a, b WHERE ST_Distance(b.geometry, a.geometry) <= 300<\/li> * <li>SELECT ... FROM a, b WHERE 15.5 > ST_Distance(b.geometry, a.geometry)<\/li> * <\/ul> * <p> * Joins expressed via ST_Contains and ST_Intersects functions must match all of * the following criteria: * <p> * - arguments of the spatial function are non-scalar expressions; * - one of the arguments uses symbols from left side of the join, the other from right. * <p> * Joins expressed via ST_Distance function must use less than or less than or equals operator * to compare ST_Distance value with a radius and must match all of the following criteria: * <p> * - arguments of the spatial function are non-scalar expressions; * - one of the arguments uses symbols from left side of the join, the other from right; * - radius is either scalar expression or uses symbols only from the right (build) side of the join. * <p> * For inner join, replaces cross join node and a qualifying filter on top with a single * spatial join node. * <p> * For both inner and left joins, pushes non-trivial expressions of the spatial function * arguments and radius into projections on top of join child nodes. * <p> * Examples: * <pre> * Point-in-polygon inner join *      ST_Contains(ST_GeometryFromText(a.wkt), ST_Point(b.longitude, b.latitude)) * becomes a spatial join *      ST_Contains(st_geometryfromtext, st_point) * with st_geometryfromtext -> 'ST_GeometryFromText(a.wkt)' and * st_point -> 'ST_Point(b.longitude, b.latitude)' projections on top of child nodes. * * Distance query *      ST_Distance(ST_Point(a.lon, a.lat), ST_Point(b.lon, b.lat)) <= 10 \/ (111.321 * cos(radians(b.lat))) * becomes a spatial join *      ST_Distance(st_point_a, st_point_b) <= radius * with st_point_a -> 'ST_Point(a.lon, a.lat)', st_point_b -> 'ST_Point(b.lon, b.lat)' * and radius -> '10 \/ (111.321 * cos(radians(b.lat)))' projections on top of child nodes. * <\/pre> *\/","label":0,"id":410735}
{"project":"presto-0.278","comment":"\/**     * Create a new types list that prepends the BIGINT type in front if addPreComputedHashBlock is true, and append the BIGINT type at the end if addNullBlock is true.     *\/","label":0,"id":410736}
{"project":"presto-0.278","comment":"\/\/localhost\/\" + taskId), TaskId.valueOf(taskId)));","label":0,"id":410737}
{"project":"presto-0.278","comment":"\/\/doesnotmatter.example:9090\/api\/v1\/query?query=up+now[\" + getQueryChunkSizeDurationAsPrometheusCompatibleDurationString(config) + \"]\" + \"&time=\" + timeShouldBe).getQuery());","label":0,"id":410738}
{"project":"presto-0.278","comment":"\/\/ Register a query and heartbeat that to the resource manager","label":0,"id":410739}
{"project":"presto-0.278","comment":"\/\/ ungrouped         ungrouped        ungrouped     ungrouped    ... execution strategy (in ungrouped test)","label":0,"id":410740}
{"project":"presto-0.278","comment":"\/\/ correlation in predicate","label":0,"id":410741}
{"project":"presto-0.278","comment":"\/**     * Scale all the counts by the given scale factor.     *\/","label":0,"id":410742}
{"project":"presto-0.278","comment":"\/**     * Utility method that returns the columns in given Delta metadata. Returned columns include regular and partition types.     * Data type from Delta is mapped to appropriate Presto data type.     *\/","label":0,"id":410743}
{"project":"presto-0.278","comment":"\/\/ create the block builder for the new boolean column\/\/ we know the exact size required for the block","label":0,"id":410744}
{"project":"presto-0.278","comment":"\/\/ *************** from clause *****************","label":0,"id":410745}
{"project":"presto-0.278","comment":"\/\/ * Each probe operator factory count as 1\/\/ * Each probe operator count as 1","label":0,"id":410746}
{"project":"presto-0.278","comment":"\/** * Represents a collection of primary or unique key constraints that hold for a final or * intermediate result set produced by a PlanNode. *\/","label":0,"id":410747}
{"project":"presto-0.278","comment":"\/\/ create constructor","label":0,"id":410748}
{"project":"presto-0.278","comment":"\/\/ configs","label":0,"id":410749}
{"project":"presto-0.278","comment":"\/\/ Shift Out","label":0,"id":410750}
{"project":"presto-0.278","comment":"\/\/ Enum type","label":0,"id":410751}
{"project":"presto-0.278","comment":"\/** * @return a blocked future when {@link WorkProcessor#isBlocked()} returned true. *\/","label":0,"id":410752}
{"project":"presto-0.278","comment":"\/\/ Show session like","label":0,"id":410753}
{"project":"presto-0.278","comment":"\/\/ second vint is length","label":0,"id":410754}
{"project":"presto-0.278","comment":"\/\/ planning failed","label":0,"id":410755}
{"project":"presto-0.278","comment":"\/\/ As a result, two Slices must be constructed for each invocation, which has a nontrivial cost.","label":0,"id":410756}
{"project":"presto-0.278","comment":"\/** * Compares the hashed columns in this PagesHashStrategy to the values in the specified page. The * values are compared positionally, so {@code rightPage} must have the same number of entries as * the hashed columns and each entry is expected to be the same type. * {@code rightPage} is used if join uses filter function and must contain all columns from probe side of join. * <p> * This method does not perform any null checks. *\/","label":0,"id":410757}
{"project":"presto-0.278","comment":"\/\/ ORC spec 3 byte header","label":0,"id":410758}
{"project":"presto-0.278","comment":"\/**     * Deserialize the given Accumulo entry, retrieving data for the Presto column.     *     * @param entry Entry to deserialize     *\/","label":0,"id":410759}
{"project":"presto-0.278","comment":"\/**     * Tests correctness of comparison of char(x) and varchar pushed down to a table scan as a TupleDomain     *\/","label":0,"id":410760}
{"project":"presto-0.278","comment":"\/**     * Updates the client heartbeat time, to prevent the query from be automatically purged.     * If the query does not exist, the call is ignored.     *\/","label":0,"id":410761}
{"project":"presto-0.278","comment":"\/\/ And now we parse the configured columns and create handles for the metadata manager","label":0,"id":410762}
{"project":"presto-0.278","comment":"\/\/ cluster memory manager","label":0,"id":410763}
{"project":"presto-0.278","comment":"\/\/ add source for pipeline (driver group [5]), mark driver group [5] as noMoreSplits","label":0,"id":410764}
{"project":"presto-0.278","comment":"\/\/ store futures into local variables so they can be used outside of the lock","label":0,"id":410765}
{"project":"presto-0.278","comment":"\/\/ constant non-singleton should be pushed down","label":0,"id":410766}
{"project":"presto-0.278","comment":"\/\/ of rows","label":0,"id":410767}
{"project":"presto-0.278","comment":"\/\/ Only add the position if we have not seen this tuple before (based on the distinct channels)","label":0,"id":410768}
{"project":"presto-0.278","comment":"\/\/ Scheduling an empty split kicks off necessary driver instantiation to make this work.","label":0,"id":410769}
{"project":"presto-0.278","comment":"\/\/ assign the splits with successful placements","label":0,"id":410770}
{"project":"presto-0.278","comment":"\/** * ASM tests * Copyright (c) 2002-2005 France Telecom * All rights reserved. * * Redistribution and use in source and binary forms, with or without * modification, are permitted provided that the following conditions * are met: * 1. Redistributions of source code must retain the above copyright *    notice, this list of conditions and the following disclaimer. * 2. Redistributions in binary form must reproduce the above copyright *    notice, this list of conditions and the following disclaimer in the *    documentation and\/or other materials provided with the distribution. * 3. Neither the name of the copyright holders nor the names of its *    contributors may be used to endorse or promote products derived from *    this software without specific prior written permission. * * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF * THE POSSIBILITY OF SUCH DAMAGE. *\/","label":0,"id":410771}
{"project":"presto-0.278","comment":"\/\/ length increase when cast to lower case, and ends with invalid character","label":0,"id":410772}
{"project":"presto-0.278","comment":"\/\/ test add value","label":0,"id":410773}
{"project":"presto-0.278","comment":"\/\/ id column","label":0,"id":410774}
{"project":"presto-0.278","comment":"\/\/ may compact the new page as well","label":0,"id":410775}
{"project":"presto-0.278","comment":"\/\/ Populate with initial tiles.  Since there aren't many low zoom tiles,\/\/ and throwing away totally disjoint ones is cheap (envelope check),\/\/ we might as well start comprehensively.","label":0,"id":410776}
{"project":"presto-0.278","comment":"\/**     * Called after the query has been sent to the server. This method is only called on     * top-level queries i.e. a query executed by a {@link QueryInterceptor} is not intercepted.     *     * This method can optionally return a {@link PrestoResultSet}. If a <code>PrestoResultSet<\/code> is returned     * from postProcess then that <code>PrestoResultSet<\/code>  is returned instead. If there are multiple     *  <code>QueryInterceptors<\/code>, <code>postProcess<\/code> will be called on each and the last <code>PrestoResultSet<\/code> is returned.     *     * @param sql the SQL string of the query.     * @param interceptedStatement the {@link Statement} being executed.     * @param interceptedResultSet the intercepted <code>PrestoResultSet<\/code>     * @return optional <code>PrestoResultSet<\/code> to be returned instead of the original <code>PrestoResultSet<\/code>     *\/","label":0,"id":410777}
{"project":"presto-0.278","comment":"\/**     * Try to push down query like: `SELECT count(distinct $COLUMN) FROM myTable` to Druid as `SELECT distinctCount($COLUMN) FROM myTable`.     * This function only handles the case of an AggregationNode (COUNT on $COLUMN) on top of an AggregationNode(of non-aggregate on $COLUMN).     *     * @return true if push down successfully otherwise false.     *\/","label":0,"id":410778}
{"project":"presto-0.278","comment":"\/\/ third byte contains 3 bits for number of bytes occupied by base","label":0,"id":410779}
{"project":"presto-0.278","comment":"\/\/ which is subsequently unnested.","label":0,"id":410780}
{"project":"presto-0.278","comment":"\/\/ remote source requires nodePartitionMap","label":0,"id":410781}
{"project":"presto-0.278","comment":"\/\/ When ((u21 - v1 * qhat) * b + u0) is less than (v0 * qhat) decrease qhat by one","label":0,"id":410782}
{"project":"presto-0.278","comment":"\/\/ When there is background thread running Driver, we must delegate memory revoking to that thread","label":0,"id":410783}
{"project":"presto-0.278","comment":"\/\/ read a page","label":0,"id":410784}
{"project":"presto-0.278","comment":"\/\/ compact page","label":0,"id":410785}
{"project":"presto-0.278","comment":"\/\/ Make sure the previous warning is not carried into the next query","label":0,"id":410786}
{"project":"presto-0.278","comment":"\/\/ This reduction function requires the hashTableSize to be power of 2.","label":0,"id":410787}
{"project":"presto-0.278","comment":"\/\/ decrypt the FileStats","label":0,"id":410788}
{"project":"presto-0.278","comment":"\/\/ Only keeps the first given `candidates` due to maintaining the","label":0,"id":410789}
{"project":"presto-0.278","comment":"\/\/ delete using a scalar and EXISTS subquery","label":0,"id":410790}
{"project":"presto-0.278","comment":"\/\/ Fast path","label":0,"id":410791}
{"project":"presto-0.278","comment":"\/\/ duplicated getPositions","label":0,"id":410792}
{"project":"presto-0.278","comment":"\/\/ copy to temporary file","label":0,"id":410793}
{"project":"presto-0.278","comment":"\/\/ this usually occurs because the view was not created","label":0,"id":410794}
{"project":"presto-0.278","comment":"\/\/ This triggers output partitioning by a constant key.","label":0,"id":410795}
{"project":"presto-0.278","comment":"\/\/ test cases from http:\/\/www.hackersdelight.org\/hdcodetxt\/divmnu64.c.txt","label":0,"id":410796}
{"project":"presto-0.278","comment":"\/\/ |               Scan-2","label":0,"id":410797}
{"project":"presto-0.278","comment":"\/**     * Simplifies this LocalProperty provided that the specified inputs are constants     *\/","label":0,"id":410798}
{"project":"presto-0.278","comment":"\/\/ the LookupOuterOperator corresponding to the RJoin will not work execute properly.","label":0,"id":410799}
{"project":"presto-0.278","comment":"\/\/ To avoid assert plan failure not printing out plan (#12885)","label":0,"id":410800}
{"project":"presto-0.278","comment":"\/\/ totalPopulationWeight;","label":0,"id":410801}
{"project":"presto-0.278","comment":"\/\/ Make the first node appear to have no splits, unacknowledged splits alone should force the splits to be spread across nodes","label":0,"id":410802}
{"project":"presto-0.278","comment":"\/** * Register the given <i>deltaTableName<\/i> as <i>hiveTableName<\/i> in HMS using the Delta catalog. * Hive and Delta catalogs share the same HMS in this test. * * @param queryRunner * @param deltaTableName Name of the delta table which is on the classpath. * @param hiveTableName Name of the Hive table that the Delta table is to be registered as in HMS *\/","label":0,"id":410803}
{"project":"presto-0.278","comment":"\/\/ See testDaylightTimeSavingSwitchCrossingIsNotApplied for new semantics","label":0,"id":410804}
{"project":"presto-0.278","comment":"\/\/ read snapshot version 3","label":0,"id":410805}
{"project":"presto-0.278","comment":"\/\/ Prior to version 0.271, HiveStorageFormat was used for storage format;\/\/ this deserializer is to ensure backward compatibility","label":0,"id":410806}
{"project":"presto-0.278","comment":"\/\/ Write of complex hive data to Parquet is broken\/\/ TODO: empty arrays or maps with null keys don't seem to work\/\/ Parquet does not support DATE","label":1,"id":410807}
{"project":"presto-0.278","comment":"\/** * Computes the offset associated with a given index. * * @param index an index into a big array. * @return the associated offset (in the associated {@linkplain #segment(long) segment}). *\/","label":0,"id":410808}
{"project":"presto-0.278","comment":"\/\/ varchar(3), to test type only coercion","label":0,"id":410809}
{"project":"presto-0.278","comment":"\/\/ push negation through conjunction or disjunction","label":0,"id":410810}
{"project":"presto-0.278","comment":"\/\/ non-deterministic filter function with constant inputs","label":0,"id":410811}
{"project":"presto-0.278","comment":"\/\/ All other test produce 0, 1, or null only","label":0,"id":410812}
{"project":"presto-0.278","comment":"\/\/ https:\/\/issues.apache.org\/jira\/browse\/HIVE-16922","label":0,"id":410813}
{"project":"presto-0.278","comment":"\/\/ Invoke static method","label":0,"id":410814}
{"project":"presto-0.278","comment":"\/\/ TIME specific range checks","label":0,"id":410815}
{"project":"presto-0.278","comment":"\/\/localhost:8080\/a\/\/\", \"Schema name is empty:\");","label":0,"id":410816}
{"project":"presto-0.278","comment":"\/\/ filters on subfields","label":0,"id":410817}
{"project":"presto-0.278","comment":"\/\/ TODO: move this before optimization if possible!!","label":1,"id":410818}
{"project":"presto-0.278","comment":"\/**     * Aborts a result buffer for a task.  If the task or buffer has not been     * created yet, an uninitialized task is created and a the buffer is     * aborted.     * <p>     * NOTE: this design assumes that only tasks and buffers that will     * eventually exist are queried.     *\/","label":0,"id":410819}
{"project":"presto-0.278","comment":"\/**     * Check if identity is allowed to drop columns from the specified table in a catalog.     *     * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed     *\/","label":0,"id":410820}
{"project":"presto-0.278","comment":"\/**     * Creates a column writer for a given type.     *     * @param nodeIndex - index of the node in the orcTypes     *\/","label":0,"id":410821}
{"project":"presto-0.278","comment":"\/** * Runs the benchmark and returns the result metrics *\/","label":0,"id":410822}
{"project":"presto-0.278","comment":"\/\/ We do this by transforming the in-memory varbinary into a call to from_base64(<base64-encoded value>)","label":0,"id":410823}
{"project":"presto-0.278","comment":"\/\/ if missing => partitioned with some unknown scheme","label":0,"id":410824}
{"project":"presto-0.278","comment":"\/\/ Live data structures\/\/ ====================","label":0,"id":410825}
{"project":"presto-0.278","comment":"\/\/ LinearRings are a subclass of LineString","label":0,"id":410826}
{"project":"presto-0.278","comment":"\/** * A metric exposed by a presto operator or connector. It will be aggregated at the query level. *\/","label":0,"id":410827}
{"project":"presto-0.278","comment":"\/**     * Number of pending bytes not yet flushed.     *\/","label":0,"id":410828}
{"project":"presto-0.278","comment":"\/\/ add bogus connector for testing session properties","label":0,"id":410829}
{"project":"presto-0.278","comment":"\/\/ add another buffer and verify it sees all pages","label":0,"id":410830}
{"project":"presto-0.278","comment":"\/** * Scheduling weight of this group in its parent group. *\/","label":0,"id":410831}
{"project":"presto-0.278","comment":"\/\/ No GroupIdNode and a GROUPING() operation imply a single grouping, which","label":0,"id":410832}
{"project":"presto-0.278","comment":"\/** * Rename the specified table *\/","label":0,"id":410833}
{"project":"presto-0.278","comment":"\/\/ First Page with non-null value for this block","label":0,"id":410834}
{"project":"presto-0.278","comment":"\/\/ increment","label":0,"id":410835}
{"project":"presto-0.278","comment":"\/\/ 'Z' is upper-case, not delimited","label":0,"id":410836}
{"project":"presto-0.278","comment":"\/\/ check equality of every position against every other position in the block","label":0,"id":410837}
{"project":"presto-0.278","comment":"\/\/ assertFunction(\"test_block_position(null)\", UNKNOWN, null);","label":0,"id":410838}
{"project":"presto-0.278","comment":"\/\/ we want the com.sun.management sub-interface of java.lang.management.OperatingSystemMXBean","label":0,"id":410839}
{"project":"presto-0.278","comment":"\/\/ TODO: investigate alternative split discovery strategies when this error is hit.","label":1,"id":410840}
{"project":"presto-0.278","comment":"\/\/ Check that new |partitionColumns| must be subset of original partition columns.","label":0,"id":410841}
{"project":"presto-0.278","comment":"\/\/ This optimizer must be run after all exchange-related optimizers","label":0,"id":410842}
{"project":"presto-0.278","comment":"\/** * Check if identity is allowed to grant the specified roles to the specified principals. * * @throws com.facebook.presto.spi.security.AccessDeniedException if not allowed *\/","label":0,"id":410843}
{"project":"presto-0.278","comment":"\/** * Returns the name of this type that should be displayed to end-users. *\/","label":0,"id":410844}
{"project":"presto-0.278","comment":"\/\/ filter-only struct","label":0,"id":410845}
{"project":"presto-0.278","comment":"\/\/ Large enough for isSplittable to be called","label":0,"id":410846}
{"project":"presto-0.278","comment":"\/\/ Id helper methods","label":0,"id":410847}
{"project":"presto-0.278","comment":"\/\/ There should be some pages that were drained","label":0,"id":410848}
{"project":"presto-0.278","comment":"\/\/ Map from the aggregation reference to the IF condition reference which will be put in the mask.","label":0,"id":410849}
{"project":"presto-0.278","comment":"\/\/ This cast does treat TIME as wall time in given TZ. This means that in order to get","label":0,"id":410850}
{"project":"presto-0.278","comment":"\/\/ index starts with 1.","label":0,"id":410851}
{"project":"presto-0.278","comment":"\/\/ merged pages are pre sorted on all sort channels","label":0,"id":410852}
{"project":"presto-0.278","comment":"\/\/ 2, 5: Crosses","label":0,"id":410853}
{"project":"presto-0.278","comment":"\/** * @return The size of memory retained by all the stream readers (local buffers + object overhead) *\/","label":0,"id":410854}
{"project":"presto-0.278","comment":"\/\/ 2) how expensive the aggregation is. In this benchmark, I include three queries which varies the two variants in benchmark.","label":0,"id":410855}
{"project":"presto-0.278","comment":"\/\/ Mappings should be deleted when query finishes. So verify that map is empty before its closed.","label":0,"id":410856}
{"project":"presto-0.278","comment":"\/\/ todo shard change roll back","label":1,"id":410857}
{"project":"presto-0.278","comment":"\/\/ don't display operator (plan node) name again","label":0,"id":410858}
{"project":"presto-0.278","comment":"\/\/ TWO_ROWS are used to prevent node from being scalar","label":0,"id":410859}
{"project":"presto-0.278","comment":"\/**     * Return true if this instance has a defined port.     *\/","label":0,"id":410860}
{"project":"presto-0.278","comment":"\/\/ Randomly swap a pair of positions","label":0,"id":410861}
{"project":"presto-0.278","comment":"\/\/ Types can be cached in BuiltInTypeAndFunctionNamespaceManager, so let's ensure this is thread safe.","label":0,"id":410862}
{"project":"presto-0.278","comment":"\/** * This method is expected to return optional.empty() if the FileSplit does not match the split converter. *\/","label":0,"id":410863}
{"project":"presto-0.278","comment":"\/**     * Gets the length of the slice value at {@code internalPosition - getOffsetBase()}.     * This method must be implemented if {@code getSliceUnchecked} is implemented.     *\/","label":0,"id":410864}
{"project":"presto-0.278","comment":"\/\/ If it's grouped execution, knowing no new probe operators will be created for a group","label":0,"id":410865}
{"project":"presto-0.278","comment":"\/\/ The last argument \"'-12300000000'\" is varchar(12). Need varchar(50) to the following test pass.","label":0,"id":410866}
{"project":"presto-0.278","comment":"\/\/ Not all the formats support DATE","label":0,"id":410867}
{"project":"presto-0.278","comment":"\/** * A map from primitive types to their corresponding wrapper types. *\/","label":0,"id":410868}
{"project":"presto-0.278","comment":"\/\/ if tests' input is not normalized, other tests don't make sense","label":0,"id":410869}
{"project":"presto-0.278","comment":"\/\/ read footer","label":0,"id":410870}
{"project":"presto-0.278","comment":"\/\/ Locate the column family mapping via the Handle","label":0,"id":410871}
{"project":"presto-0.278","comment":"\/\/ any two letters of source (x + 1) times. As the replacement may be wildcard and the wildcard input that takes two letters","label":0,"id":410872}
{"project":"presto-0.278","comment":"\/\/ The current memory accounting for shared dictionaries is correct because dictionaries\/\/ are shared only for flatmap stream readers. Flatmap stream readers are destroyed and recreated\/\/ every stripe, and so are the dictionary providers. Hence, it's impossible to have a reference\/\/ to shared dictionaries across different stripes at the same time.","label":0,"id":410873}
{"project":"presto-0.278","comment":"\/**     * This method registers a heartbeat to the resource manager.  A query heartbeat is used for the following purposes:     *     * 1) Inform resource managers about current resource group utilization.     * 2) Inform resource managers about current running queries.     * 3) Inform resource managers about coordinator status and health.     *\/","label":0,"id":410874}
{"project":"presto-0.278","comment":"\/\/ search case","label":0,"id":410875}
{"project":"presto-0.278","comment":"\/\/ process pending aborts and reads outside of synchronized lock","label":0,"id":410876}
{"project":"presto-0.278","comment":"\/** * Rewrites the provided argument if it is non-associative (e.g. it cannot be handled by simply re-applying function to derived columns) *\/","label":0,"id":410877}
{"project":"presto-0.278","comment":"\/**     * Delegates to the wrapped mbean server, but if a mbean is already registered     * with the specified name, the existing instance is returned.     *\/","label":0,"id":410878}
{"project":"presto-0.278","comment":"\/\/ hashing value for splits:\/\/ 0: -1962219106 -> entry0 -> node2\/\/ 1:   145569539 -> entry3 -> node3\/\/ 2: -1599101205 -> entry1 -> node3\/\/ 3:  -165119218 -> entry3 -> node3\/\/ 4:  1142216720 -> entry4 -> node1\/\/ 5:  1347620135 -> entry5 -> node1\/\/ 6:  1232195252 -> entry5 -> node1\/\/ 7:   427886318 -> entry3 -> node3\/\/ 8:  1469878697 -> entry5 -> node1\/\/ 9:   296801082 -> entry3 -> node3","label":0,"id":410879}
{"project":"presto-0.278","comment":"\/\/ copy. This works because we know that initially it has the same values as the array being sorted","label":0,"id":410880}
{"project":"presto-0.278","comment":"\/\/ TODO the client sees the bytearray's tostring output instead of seeing actual bytes, needs to be fixed.","label":1,"id":410881}
{"project":"presto-0.278","comment":"\/\/ More tests related to `features` function can be found in TestMLQueries","label":0,"id":410882}
{"project":"presto-0.278","comment":"\/\/ Test nested geometry collection","label":0,"id":410883}
{"project":"presto-0.278","comment":"\/\/ TODO: Decouple and remove: required by PluginManager","label":1,"id":410884}
{"project":"presto-0.278","comment":"\/** * Convenience variable to help us determine when our buffer is going to run out of room and needs resizing. * <code>encodeSize = {@link #BYTES_PER_ENCODED_BLOCK} + lineSeparator.length;<\/code> *\/","label":0,"id":410885}
{"project":"presto-0.278","comment":"\/\/ Same unprocessableExpression means that we can do more extraction","label":0,"id":410886}
{"project":"presto-0.278","comment":"\/\/ Spawn THREAD_COUNT threads. And each thread will send REQUEST_COUNT requests to HiveFileRenamer","label":0,"id":410887}
{"project":"presto-0.278","comment":"\/** * Generate a file system path for a shard UUID. * This creates a three level deep directory structure where the first * two levels each contain two hex digits (lowercase) of the UUID * and the final level contains the full UUID. Example: * <pre> * UUID: 701e1a79-74f7-4f56-b438-b41e8e7d019d * Path: \/base\/70\/1e\/701e1a79-74f7-4f56-b438-b41e8e7d019d.orc * <\/pre> * This ensures that files are spread out evenly through the tree * while a path can still be easily navigated by a human being. *\/","label":0,"id":410888}
{"project":"presto-0.278","comment":"\/\/test-bucket\/\");","label":0,"id":410889}
{"project":"presto-0.278","comment":"\/\/ select queries to run","label":0,"id":410890}
{"project":"presto-0.278","comment":"\/\/ no statistics for this column, so we can't exclude this section","label":0,"id":410891}
{"project":"presto-0.278","comment":"\/\/ Write Map<Bigint, Varchar>","label":0,"id":410892}
{"project":"presto-0.278","comment":"\/** * original way of doing group-by: one histogram per group-by-id *\/","label":0,"id":410893}
{"project":"presto-0.278","comment":"\/\/ values in simple struct and mix in some null values","label":0,"id":410894}
{"project":"presto-0.278","comment":"\/\/ Fields (non-static)","label":0,"id":410895}
